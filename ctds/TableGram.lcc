#line 2 "/home/zuul06-2/dschieb/casa/dedicated-table-sys/casacore/BUILD/tables/TableGram.lcc"

#line 4 "/home/zuul06-2/dschieb/casa/dedicated-table-sys/casacore/BUILD/tables/TableGram.lcc"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define yy_create_buffer TableGram_create_buffer
#define yy_delete_buffer TableGram_delete_buffer
#define yy_flex_debug TableGram_flex_debug
#define yy_init_buffer TableGram_init_buffer
#define yy_flush_buffer TableGram_flush_buffer
#define yy_load_buffer_state TableGram_load_buffer_state
#define yy_switch_to_buffer TableGram_switch_to_buffer
#define yyin TableGramin
#define yyleng TableGramleng
#define yylex TableGramlex
#define yylineno TableGramlineno
#define yyout TableGramout
#define yyrestart TableGramrestart
#define yytext TableGramtext
#define yywrap TableGramwrap
#define yyalloc TableGramalloc
#define yyrealloc TableGramrealloc
#define yyfree TableGramfree

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 1
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE TableGramrestart(TableGramin  )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

extern int TableGramleng;

extern FILE *TableGramin, *TableGramout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    #define YY_LESS_LINENO(n)
    #define YY_LINENO_REWIND_TO(ptr)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up TableGramtext. */ \
        yy_size_t yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up TableGramtext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via TableGramrestart()), so that the user can continue scanning by
	 * just pointing TableGramin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* Stack of input buffers. */
static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
static YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* yy_hold_char holds the character lost when TableGramtext is formed. */
static char yy_hold_char;
static int yy_n_chars;		/* number of characters read into yy_ch_buf */
int TableGramleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = NULL;
static int yy_init = 0;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow TableGramwrap()'s to do buffer switches
 * instead of setting up a fresh TableGramin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void TableGramrestart (FILE *input_file  );
void TableGram_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
YY_BUFFER_STATE TableGram_create_buffer (FILE *file,int size  );
void TableGram_delete_buffer (YY_BUFFER_STATE b  );
void TableGram_flush_buffer (YY_BUFFER_STATE b  );
void TableGrampush_buffer_state (YY_BUFFER_STATE new_buffer  );
void TableGrampop_buffer_state (void );

static void TableGramensure_buffer_stack (void );
static void TableGram_load_buffer_state (void );
static void TableGram_init_buffer (YY_BUFFER_STATE b,FILE *file  );

#define YY_FLUSH_BUFFER TableGram_flush_buffer(YY_CURRENT_BUFFER )

YY_BUFFER_STATE TableGram_scan_buffer (char *base,yy_size_t size  );
YY_BUFFER_STATE TableGram_scan_string (yyconst char *yy_str  );
YY_BUFFER_STATE TableGram_scan_bytes (yyconst char *bytes,int len  );

void *TableGramalloc (yy_size_t  );
void *TableGramrealloc (void *,yy_size_t  );
void TableGramfree (void *  );

#define yy_new_buffer TableGram_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        TableGramensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            TableGram_create_buffer(TableGramin,YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        TableGramensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            TableGram_create_buffer(TableGramin,YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */

typedef unsigned char YY_CHAR;

FILE *TableGramin = NULL, *TableGramout = NULL;

typedef int yy_state_type;

extern int TableGramlineno;

int TableGramlineno = 1;

extern char *TableGramtext;
#ifdef yytext_ptr
#undef yytext_ptr
#endif
#define yytext_ptr TableGramtext

static yy_state_type yy_get_previous_state (void );
static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
static int yy_get_next_buffer (void );
static void yynoreturn yy_fatal_error (yyconst char* msg  );

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up TableGramtext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
	TableGramleng = (int) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
	(yy_c_buf_p) = yy_cp;

#define YY_NUM_RULES 130
#define YY_END_OF_BUFFER 131
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_accept[1754] =
    {   0,
      123,  123,  123,  123,  123,  123,  123,  123,  124,  124,
      131,  129,  123,  123,   85,  129,  125,  129,   93,   97,
      129,   50,   52,   90,   94,  101,   95,  129,   92,  104,
      104,   65,   53,   73,   67,   71,  118,  118,  118,  118,
      118,  107,  118,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  118,  106,  118,  118,  118,  118,   49,  129,
       51,   87,  118,  118,   99,   96,  100,   98,  118,  118,
      118,  118,  118,  107,  118,  118,  118,  118,  118,  118,
      118,  118,  118,  118,  118,  106,  118,  118,  118,  118,
      129,  118,  118,   85,  129,  104,  104,  118,  118,  106,

      118,   98,  129,  122,  129,   94,   95,  122,   92,  104,
      104,   65,  122,  118,  118,  118,  118,  118,  107,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
      106,  118,  118,  118,  118,  129,  118,  118,   98,  127,
      124,  127,  126,  122,  127,  122,    1,  127,  123,    0,
        0,    0,    0,    0,   68,    0,    0,  128,  108,  125,
      120,   81,    0,   89,    0,  103,   91,    0,  103,  104,
        0,    0,    0,  102,    0,   62,   64,   61,   72,   69,
       63,   66,   70,    0,  118,    0,  118,  118,  118,  118,
      118,   45,    0,  118,  118,  118,  118,  118,  118,  118,

      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
       47,  118,  118,  118,  118,  118,   44,   84,  118,  118,
      118,  118,  118,  118,   46,  118,  118,  118,  118,  118,
      118,  118,  118,  118,   83,   74,    0,  118,    0,  118,
      118,  118,  118,  118,   45,    0,  118,  118,  118,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  118,   47,  118,  118,  118,  118,  118,   44,
       84,  118,  118,  118,  118,  118,  118,   46,  118,  118,
      118,  118,  118,  118,  118,  118,  118,    0,  103,  103,
      104,  111,  111,  111,  111,  111,  102,  118,  118,  118,

        0,    0,    0,    0,    0,    0,  108,    0,  122,    0,
      120,    0,    0,  103,   91,  122,  103,  104,  122,  122,
      122,  102,  122,  122,  118,  122,  118,  118,  118,  118,
      118,   45,    0,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
       47,  118,  118,  118,  118,  118,   44,   84,  118,  118,
      118,  118,  118,  118,   46,  118,  118,  118,  118,  118,
      118,  118,  118,  118,  127,  124,  127,    0,  122,  126,
      126,  127,  122,  127,  121,  127,  127,    0,    1,  127,
        1,    0,    0,    0,    0,    0,    0,   75,    0,    0,

        0,    0,    0,    0,    0,  102,    0,  103,    0,    0,
      104,  109,    0,  103,  105,  105,  119,    0,   57,   58,
       56,   59,   60,  119,    0,  118,  117,  118,   82,  118,
       34,  118,  118,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
      118,    0,  118,  118,  118,  118,  118,  118,  118,  118,
       86,  118,  118,  118,  118,  118,    8,  118,  118,  118,
       38,  118,  118,  118,  118,  118,  118,  118,   88,    0,
       54,    0,  118,  117,  118,   82,  118,   34,  118,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,

      118,  118,  118,  118,  118,  118,  118,  118,    0,  118,
      118,  118,  118,  118,  118,  118,  118,   86,  118,  118,
      118,  118,  118,    8,  118,  118,  118,   38,  118,  118,
      118,  118,  118,  118,  118,   88,  111,  111,  102,  103,
      111,  104,  109,    0,  103,  109,  105,  118,  118,  118,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  122,    0,    0,  122,  122,  122,  122,
      102,  122,  103,  122,  122,  104,  109,  122,  103,  105,
      105,  119,    0,  119,    0,  118,  117,  118,   82,  118,
       34,  118,  118,  118,  118,  118,  118,  118,  118,  118,

      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  118,   86,
      118,  118,  118,  118,  118,    8,  118,  118,  118,   38,
      118,  118,  118,  118,  118,  118,  118,   88,  122,  127,
      122,  122,    1,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  120,    0,    0,    0,  103,    0,    0,
        0,  103,    0,  104,    0,  103,  105,    0,  119,    0,
      119,  119,    0,    0,  118,  118,    0,  116,  118,  118,
      118,   14,  118,  118,  118,  118,   33,  118,  118,  118,
      118,  118,  118,   29,  118,  118,  118,  118,  115,  118,

        0,  118,  118,  118,   36,   43,   79,  118,  118,  118,
      118,  118,  118,  118,  118,    0,  118,  118,  113,  106,
      118,  118,  118,  118,  118,  118,   28,   54,    0,    0,
      118,  118,    0,  118,  118,  118,   14,  118,  118,  118,
      118,   33,  118,  118,  118,  118,  118,  118,   29,  118,
      118,  118,  118,  115,  118,  118,  118,  118,   36,   43,
       79,  118,  118,  118,  118,  118,  118,  118,  118,    0,
      118,  118,  113,  106,  118,  118,  118,  118,  118,  118,
       28,    0,  103,    0,  111,    0,  103,  104,  110,  103,
      111,  110,  114,  112,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,  120,    0,
      122,  122,  103,  122,  122,  122,  103,  122,  104,  122,
      103,  105,  122,  119,    0,  119,  119,    0,  118,  118,
      118,  118,  118,   14,  118,  118,  118,  118,   33,  118,
      118,  118,  118,  118,  118,   29,  118,  118,  118,  118,
      114,  118,  118,  118,  118,   36,   43,   79,  118,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  112,  106,
      118,  118,  118,  118,  118,  118,   28,  121,  127,  122,
        0,    0,    0,    0,    0,    0,    0,    0,  120,    0,
      120,    0,  109,    0,  103,    0,    0,    0,  104,    0,

      119,    0,  118,  118,  118,  118,  118,    0,  118,  118,
       12,  118,  118,  118,  118,    0,  118,  118,  118,  118,
      118,  107,  118,  118,  118,  118,   80,    0,  118,  118,
      118,    4,  118,  118,  118,  118,    0,  118,  118,  118,
      118,    2,  118,  118,  118,  118,   30,  118,  118,  118,
      118,  118,    0,  118,  118,   12,  118,  118,  118,  118,
        0,  118,  118,  118,  118,  118,  107,  118,  118,  118,
      118,   80,  118,  118,  118,    4,  118,  118,  118,  118,
        0,  118,  118,  118,  118,    2,  118,  118,  118,  118,
       30,    0,  110,    0,  103,  104,    0,  110,    0,  110,

       55,   55,   55,   55,  120,    0,  120,    0,  109,  122,
      103,  122,  122,  122,  104,  122,  119,    0,  118,  118,
      118,  118,  118,  118,  118,   12,  118,  118,  118,  118,
      118,  118,  118,  118,  118,  107,  118,  118,  118,  118,
       80,  118,  118,  118,    4,  118,  118,  118,  118,  118,
      118,  118,  118,    2,  118,  118,  118,  118,   30,  121,
      127,  121,  127,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  120,    0,    0,    0,    0,  109,
      109,  119,    0,  118,  118,    0,  118,   77,  118,  118,
      118,  118,   11,  118,   27,    0,  118,  118,  118,   78,

      118,   35,    0,  118,   42,    0,  118,    9,  118,  118,
       39,    0,  118,  118,    0,  118,    6,  118,  118,   32,
        7,    0,  118,   10,  118,  118,    0,  118,   77,  118,
      118,  118,  118,   11,  118,   27,  118,  118,  118,   78,
      118,   35,    0,  118,   42,  118,    9,  118,  118,   39,
        0,  118,  118,  118,    6,  118,  118,   32,    7,    0,
      118,   10,  110,  110,    0,  110,  110,    0,  110,  110,
        0,   55,   55,   55,  122,  120,    0,  122,  122,  122,
      109,  109,  119,    0,  118,  118,  118,   77,  118,  118,
      118,  118,   11,  118,   27,  118,  118,  118,   78,  118,

       35,  118,   42,  118,    9,  118,  118,   39,  118,  118,
      118,    6,  118,  118,   32,    7,  118,   10,  121,  122,
      121,  127,    0,    0,    0,    0,    0,    0,    0,    0,
      120,    0,    0,    0,    0,  109,  109,  109,  109,  109,
      118,   26,  118,    0,  118,   76,  118,  118,    0,  118,
      118,    0,  118,  118,  118,    0,    0,    0,  118,    0,
       48,  118,  118,    0,  118,    0,  118,  118,    0,   35,
      118,  118,    0,  118,  118,   26,  118,  118,   76,  118,
      118,    0,  118,    0,  118,  118,  118,  118,    0,  118,
       48,  118,  118,  118,    0,  118,  118,   35,  118,  118,

      118,    0,  110,    0,    0,  110,    0,  110,    0,    0,
      110,    0,  110,    0,    0,  110,   55,  120,    0,  122,
      122,  122,  109,  109,  109,  109,  109,  118,  118,  118,
       76,  118,  118,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  118,  118,  118,  118,  118,  122,    0,  121,
      127,  121,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  120,    0,    0,    0,    0,    0,  109,    0,  109,
      118,    0,  118,  118,  118,    0,  118,    0,  118,  118,
      118,    0,   13,    0,    0,   40,  118,  118,    0,   31,
      118,  118,  118,  118,    0,  118,  118,  118,  118,  118,

      118,  118,  118,  118,   40,  118,  118,   31,  118,  118,
      118,  118,  118,    0,  110,    0,    0,  110,    0,  110,
        0,    0,  110,    0,  110,    0,    0,  110,  120,    0,
      122,  122,  122,  122,  109,  122,  109,  118,  118,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  122,  121,  127,  122,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  109,  109,
        0,  109,  109,    0,  118,    0,  118,  118,  118,    0,
      118,    0,  118,  118,  118,    0,    0,    0,    3,  118,
      118,  118,  118,   37,    0,  118,  118,  118,  118,  118,

      118,  118,  118,  118,    0,    3,  118,  118,  118,  118,
       37,  118,    0,  110,    0,  110,    0,  110,  122,  122,
      122,  109,  109,  122,  109,  109,  122,  118,  118,  118,
      118,  118,  118,  118,  118,    3,  118,  118,  118,  118,
       37,  118,  121,    0,  121,  121,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  109,  109,    0,  109,    0,
        0,  109,    0,  109,    0,    0,  109,   18,  118,    0,
      118,  118,  118,    0,  118,    0,  118,  118,   17,    0,
      118,  118,  118,  118,    0,  118,   18,  118,  118,  118,
      118,  118,  118,  118,   17,  118,  118,  118,  118,  118,

      109,  109,  122,  109,  122,  122,  109,  122,  109,  122,
      122,  109,  118,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  118,  118,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  109,    0,    0,  109,    0,  109,
        0,    0,  109,    0,   16,   19,  118,  118,    0,  118,
       21,  118,  118,    0,  118,  118,  118,   22,  118,    0,
        5,   16,   19,  118,  118,  118,   21,  118,  118,  118,
      118,  118,   22,  118,    5,  122,  109,  122,  122,  109,
      122,  109,  122,  122,  109,  118,  118,  118,  118,  118,
      118,  118,  118,  118,    0,    0,    0,    0,    0,    0,

        0,    0,  109,    0,  109,   23,  118,    0,   15,   25,
      118,    0,  118,  118,   23,  118,   15,   25,  118,  118,
      118,  122,  109,  122,  109,  118,  118,  118,  118,    0,
        0,    0,    0,    0,   20,  118,  118,   20,  118,  118,
      118,  118,    0,    0,    0,   24,  118,   24,  118,  118,
        0,   41,    0
    } ;

static yyconst YY_CHAR yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    4,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   18,   19,   20,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   22,   23,   24,
       25,   26,    1,   27,   28,   29,   30,   31,   32,   33,
       34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
       44,   45,   46,   47,   48,   49,   50,   51,   52,   53,
       54,   55,   56,   57,   58,    1,   28,   59,   30,   60,

       32,   61,   34,   35,   62,   63,   38,   39,   64,   41,
       42,   65,   44,   45,   46,   66,   48,   49,   50,   51,
       52,   67,   68,   69,   70,   71,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yyconst YY_CHAR yy_meta[72] =
    {   0,
        1,    2,    3,    4,    1,    5,    1,    6,    7,    1,
        8,    1,    1,    1,    6,    1,    9,   10,   11,   12,
       12,   13,    1,    1,   14,    1,   15,   16,   16,   16,
       16,   16,   16,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   18,   17,   17,   17,
       17,   17,   17,    1,   19,    1,    1,   20,   16,   16,
       16,   17,   17,   17,   17,   17,   17,    1,    1,    1,
        6
    } ;

static yyconst flex_uint16_t yy_base[1911] =
    {   0,
        0,    0,   71,    0,  138,  142,  213,    0,  284,    0,
     7435,12015,  150,  354,  119,  142,    0,  129,12015, 7424,
      154,12015,12015, 7418,12015,  358,12015,  146, 7411,  346,
      359,  146,12015,  150,  139, 7400,  405,  351,  374,  448,
      412,  417,  445,  451,  437,  477,  484,  482,  485,  513,
      520,  379,  531,  541,  552,  141,  571,  577,12015,    0,
    12015,12015,  517,  594,12015, 7355,12015, 7391,  655,  642,
      155,  589,  147,  342,  411,  123,  160,  161, 7383,  369,
      492,  333,  609, 7381,  488,  569,  646,  179,  564,  375,
        0,  524,  663,  390,  185,  709,  686,  691,  722,  607,

      720,  771,  188,  722,  387,  617,  679,  773,  703,  831,
      897,  779,  682,  963, 1029,  760,  755,  420,  539,  776,
      421,  548,  422, 7377,  558,  629,  469,  766, 7376,  703,
      778,  813,  454,  825,  528, 1100,  781,  830,  818,    0,
      679,  762,  743, 1171,  814, 1241, 1311, 1382,  897,  350,
     7344,  592, 7351, 7344,12015, 7338,  523,  483,  537,    0,
      847,12015,  497,12015,  919,  875,12015,    0,  877,  913,
      859,  971, 1437,  978, 7307,12015,12015,  859,12015,12015,
      584,12015,12015,  657,  960, 7336,  970,  981,  991, 1022,
     1027, 1029, 1498, 1032, 1160, 1169,  984, 1170, 1227, 1238,

     1244, 1540, 1440, 1430, 1538, 1545, 1551, 1562, 1575, 1564,
     1635, 1586, 1611, 1600, 1626, 1601, 1633, 1652, 1657, 1658,
     1675, 1682, 1676, 1693, 1699, 1714, 1720, 1735, 1738, 1745,
     1756, 1769, 1770, 1779,12015,12015, 1204, 1823, 1220, 1834,
      382,  808,  653, 7315, 7317, 1889,  600, 7304,  893, 7306,
      776, 7290,  412, 7284,  977, 7281, 7272, 7257, 7248, 7253,
     7243, 7250,  808, 1747,  828,  906, 7247,  901,  893,    0,
      850, 7244, 7232, 1019, 7235,  730,  551,  508, 7224,  915,
      860,  992, 7231, 7236,  673, 7217,    0, 1858, 1668, 1787,
     1907, 1074, 1215, 1241, 1273, 1954, 1286, 1824, 1825, 1948,

     1869, 1062, 1455, 1467, 1468,  827, 1232, 7248, 1566, 7230,
     1943, 2015,  775, 2012, 1624, 2080, 2015, 2146, 2212, 1261,
     2264,    0, 2320, 2386, 2452, 1925, 2518,  875, 1611, 1144,
     7192, 7202, 2589,  906, 7192, 1032, 7197,  865, 7181, 1138,
     7183, 1183, 7176, 7168, 7166, 7155, 7154, 7146, 7150, 1182,
     2046, 1201, 1549, 7147, 1544, 1247,    0, 1189, 7133, 7090,
     1929, 7095,  812,  923,  954, 7079, 1426, 1253, 1562, 7083,
     7082, 1132, 7068,    0,    0, 1186, 1873, 7098, 2660, 1074,
        0, 1878, 2730, 1951, 2800, 1457, 1988, 7092, 2870, 2941,
        0, 1429, 1021, 7062, 7048, 7034, 1659,12015, 7001, 6931,

     6920, 6907, 6849, 6881, 1463,12015, 6884, 1889, 1752, 1643,
     2041, 1987, 1249, 2109, 2101, 2996,  955,    0,12015,12015,
    12015,12015,12015, 2034,    0, 2192, 2121, 1998, 1830, 2107,
     2078, 2178, 2181, 2203, 2185, 2238, 2241, 2256, 2286, 2259,
     2300, 2275, 2307, 2318, 2346, 2342, 2357, 2364, 2375, 2412,
     2418, 1975, 2423, 2368, 2436, 2440, 2480, 2484, 2447, 2496,
     2499, 2502, 2515, 2539, 2550, 2553, 2572, 2567, 2616, 2556,
     2619, 2622, 2635, 2685, 2691, 2697, 2721, 2745, 2638, 1819,
     6837, 2061, 3056, 2967, 2756, 2708, 2760, 2767, 2779, 2828,
     2790, 2831, 2834, 2970, 2974, 3003, 3029, 3032, 3035, 3049,

     3060, 3080, 3086, 3100, 3105, 3111, 3123, 3126, 2748, 3129,
     3146, 3153, 3157, 3172, 3177, 3188, 3199, 2847, 3203, 3206,
     3217, 3220, 3223, 3238, 3254, 3258, 3261, 2861, 3265, 3276,
     3279, 3282, 3296, 3307, 3310, 3313,    0, 1920,    0, 2413,
     2129, 3311, 3317, 1281, 3346, 3358, 3406, 3337, 3356, 3380,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 6874, 1798, 6868, 3467, 2147, 3532, 2164, 3434,
     2210, 3598, 3131, 3441, 3664, 3730, 3508, 3176, 3798, 3842,
     3900, 3966, 4037, 4103, 4174, 4244, 4314, 3383, 3387, 3416,
     3429, 3482, 3496, 3558, 3501, 3554, 3565, 3569, 3576, 3581,

     3624, 3627, 3588, 3642, 3659, 3645, 3662, 3648, 3698, 3701,
     3704, 3725, 3751, 3766, 3769, 3793, 3728, 3772, 3809, 3820,
     3831, 3824, 3827, 3846, 3864, 3878, 3885, 3935, 3881, 3922,
     3938, 3950, 3961, 3964, 4124, 3995, 4000, 4006, 4385, 1488,
     4455, 4526, 4591, 2353, 6810, 6755, 1249, 6752, 2278, 6772,
     6768, 6758, 6749,  978,    0, 6686, 1597, 2255, 1608, 2231,
     1633, 2469, 1649, 4261, 1690, 2501,    0, 6682,  988, 4662,
     3333, 3489, 4733, 4265, 4095, 4111, 4011,12015, 4122, 4236,
     4266, 4282, 4345, 4291, 4358, 4523, 4322, 4352, 4397, 3440,
     4526, 4573, 3016, 2688, 4563, 4584, 4652, 4767, 4351, 4419,

     6679, 4776, 4613, 4762, 4627, 4690, 4780, 4791, 4809, 4820,
     4824, 4829, 4838, 4841, 4862, 3674, 4878, 4887, 4891, 4894,
     4901, 4910, 4916, 4931, 4934, 4941, 4947, 6657, 4985, 4357,
     5015, 5025, 4143, 1054, 1687,  924, 6668, 5021, 2132, 2266,
     2381, 6649, 1756, 2018, 5058, 1786, 2419, 1716, 6645, 1704,
     1805, 2003, 1846, 6643, 1924, 1955, 1598, 1875, 6613, 6602,
     6599, 2468,  656, 2072, 2011, 2089, 2105, 4558, 1834, 4698,
     2064, 1546, 6597, 6586, 2118, 1743, 2483, 1969, 2085, 2193,
     6579, 2171, 2980, 2236, 2566, 2179, 3059, 5108, 2364, 3233,
     2285, 2473, 5028, 5069, 6608, 6591, 6581, 6592, 6573, 6488,

     6501, 6488, 6462, 6478, 6466, 6447, 6465, 6427, 5166, 5237,
     5303, 3831, 5058, 3889, 5091, 4552, 5098, 4814, 5369, 5111,
     5124, 5435, 5491, 5557, 5628, 5693, 5759, 5830, 5896, 5962,
     2227, 2273, 2232, 6391, 5112, 2585, 2933, 3052, 6388, 2530,
     2620, 5160, 2331, 3058, 2259, 6384, 2321, 2347, 2587, 2376,
     6378, 2367, 2412, 2387, 2471, 6361, 6356, 6323, 3473,  734,
     2613, 2404, 2535, 2287, 5091, 2194, 2664, 2066, 6308, 6299,
     2594, 1884, 3475, 2098, 2666, 2733, 6286, 6033, 6104, 6175,
        0, 6283, 6277, 5192, 2462, 5197, 1699, 6281, 1560, 6246,
     2797,    0, 4412, 2628, 3439, 6287, 2684, 2701, 3513, 4415,

     1438,    0, 4831, 5295, 5345, 5313, 4754, 5202, 5339, 5321,
     5384, 5394, 5415, 5430, 5459, 5485, 5499, 5504, 5509, 4633,
     5145, 5018, 5352, 5426, 5531, 5536, 5406, 6258, 5541, 5501,
     5553, 5589, 5592, 5601, 5614, 5643, 5621, 5660, 5674, 5689,
     5725, 5721, 5728, 5741, 5749, 5754, 5759, 5857, 5870, 5815,
     2931, 1720, 5583, 2677, 1755, 6245, 2430, 2745,  318, 2747,
     5906, 2754, 2795, 2652, 2794, 2618, 6240, 3021, 1053, 4924,
     2740, 6199, 2816, 3167, 2688, 6057, 1645, 3224, 5926, 2958,
     5931, 2797, 3347, 1898, 3187, 5968, 2971, 3041, 3976, 2999,
     5956, 2963, 3759, 2973, 3575, 5928, 3045, 3925, 3119, 3999,

     3581, 5940, 5933, 5885, 6312, 6383, 6448, 6519, 6277, 5358,
     6301, 3783, 6585, 6271, 6651, 6331, 6717, 6788, 3054, 2811,
     6307, 3112, 2998, 5884, 3135, 5861, 3202, 3260, 3104, 5855,
     5821, 3368, 2353, 3626, 3284, 5762, 3648, 3209, 6372, 3293,
     5743, 3369, 3673, 3330, 5700, 3077, 3799, 6375, 3372, 5693,
     3909, 3365, 3230, 5663, 3421, 3532, 5440, 3379, 5652,    0,
     6859, 6930, 7001, 5640, 5584, 5580, 5574, 5545, 5820, 5508,
     5496, 5484, 5393, 5383, 3703, 7072, 3327, 3349, 3409, 4286,
     5028, 2281, 7143, 5939, 5962, 6344, 6366, 6355, 6378, 6425,
     6443, 6358, 6439, 6446, 6595, 5379, 6611, 6627, 6616, 6620,

     6634, 6645, 4624, 6649, 6686, 5314, 6695, 6700, 6716, 7128,
     7114, 5865, 7132, 7179, 5189, 7169, 7174, 7183, 7189, 7199,
     7203, 4645, 7216, 7220, 3120, 4657, 7249, 3445, 5159, 2016,
     2199, 3178, 7240, 6458,  507, 5117, 2511, 3251, 3582, 5002,
     5073, 4955, 7235, 3396, 4934, 4711, 4918, 3425, 3562, 4902,
     7254, 3466, 6727, 4723, 4891, 4834, 2778, 4823, 4780, 5990,
     3539, 4769, 4004, 4128, 4012, 4131, 4141, 4255, 4330, 4406,
     4689, 3697, 3928,12015, 7310, 7376, 7447, 6605, 7255, 7287,
     7313, 7335, 7512, 7583, 2719, 5824, 3566, 4757, 3765, 3616,
     3645, 7298, 6476, 3245, 4725, 3704, 3802, 3757, 4492, 5809,

     4406, 3817, 4386, 5417, 4351, 3954, 4322, 4250, 3964, 7347,
     5578, 4243, 3849, 4096, 4112, 4092, 4378, 3992, 7648, 7719,
        0, 7790, 3963, 5324, 3930, 3871, 3840, 3795, 5997, 3790,
     3973, 3727, 4136, 3709, 3690, 4676, 4960,12015, 5116, 5155,
     7357,12015, 7301, 3586, 7367, 7370, 7398, 7403, 7408, 7439,
     7436, 3835, 7474, 7478, 7485, 4630, 5210, 3496, 7488, 4167,
    12015, 7496, 7506, 3445, 7491, 6887, 7544, 7509, 4443,12015,
     7556, 7598, 3499, 7566, 4233, 5714, 5607, 4787, 3400, 3585,
     3353, 7613, 3683, 6894, 4524, 3864, 3283, 3764, 6264, 6283,
     6276, 3366, 4089, 6630, 7108, 4277, 4109, 6479, 4362, 4264,

     4060, 5532, 4620, 5782, 4144, 4526, 5937, 4840, 5954, 4533,
     4564, 5999, 4935, 6009, 4624, 4691, 4309, 7856, 7927, 7622,
     7267, 7570, 7651, 7815, 5487, 7845, 7902, 4288, 6891, 4739,
     3264, 3440, 4735, 3579, 4749, 3850, 4833, 4364, 7121, 4608,
     4806, 7350, 3206, 4845, 3157, 4867, 4859, 7625, 7998, 8068,
     8139, 8204, 2569, 5012, 3062, 3035, 2975, 2911, 2902, 2842,
     2825, 4537, 8275, 4701, 4742, 4902, 4939, 6706, 4955, 7291,
     7646, 3971, 7837, 7850, 7922, 2775, 7972, 2737, 7969, 7983,
     7825, 5215,12015, 5668, 5087, 7575, 7987, 7990, 5334,12015,
     8164, 8154, 8169, 8178, 2655, 8195, 4210, 4251, 5101, 4920,

     5425, 5170, 4984, 4956, 7885, 4658, 4529, 6497, 4255, 4569,
     1992, 3715, 4306, 5062, 5066, 6323, 5138, 5195, 5331, 5351,
     6477, 5362, 5377, 5402, 5437, 6496, 5441, 5594, 8341, 8412,
     8242, 8299, 8302, 8330, 8377, 8423, 8435, 5585, 5059, 5353,
     2633, 5627, 5436, 2536, 4915, 5653, 3652, 5113, 5277, 5191,
     4207, 5519, 8485,    0, 8556, 8622, 8693, 2456, 4866, 2422,
     5070, 2360, 2295, 2151, 2132, 5629, 5639, 5645, 6730, 6867,
     6753, 7529, 7591, 6764, 8181, 2123, 8185, 8314, 8262, 4539,
     8323, 2104, 8335, 8267, 8404, 6008, 7915, 2045, 8445, 8461,
     8469, 8472, 8482, 8529, 1955, 8582, 7416, 5353, 4393, 3311,

     4573, 5384, 5424, 7425, 8025, 1923, 5656, 5262, 1831, 5833,
     1654, 5539, 5668, 5713, 5717, 5726, 5729, 5762, 8533, 8583,
     8595, 8655, 8658, 8716, 8719, 8737, 8762, 8369, 5727, 5748,
     5524, 5559, 5751, 5763, 7562, 1613, 5956, 4996, 5147, 5890,
     1590, 5895, 8812, 8883, 8949, 9015, 9086, 7376, 1344, 1270,
     1145, 1128,  979,  970, 1808, 6289, 6739, 6885, 7662, 7085,
     5789, 6402, 7669, 7790, 7680, 5885, 6415,12015, 8543,  930,
     8589, 8668, 8750,  874, 8796, 6175, 8742, 8791,12015,  849,
     8800, 8616, 8803, 8809,  765, 8868, 6751, 7963, 7976, 8682,
     6604, 5766, 8874, 6634, 7090, 5839, 5973, 5290, 8877, 8188,

     8641, 8925, 8973, 8985, 9060, 8981, 9004, 9110, 9113, 9156,
     9063, 9168, 7821, 8253, 8455, 5965, 6242, 8822, 6358, 6313,
     6727,  674, 9009, 8362, 9223, 6905, 8172, 3152, 8619, 3876,
     5443,  629, 8910, 5919, 6574, 7690, 5941, 6687, 6011, 6696,
     7701, 6351, 6725, 6908,12015,12015, 8915, 9134,  556, 8996,
    12015, 9144, 9147,  389, 9194, 9203, 9212,12015, 9215, 6919,
    12015, 7877, 7890, 8390, 9249, 8547, 8037, 8783, 9252, 5132,
     5633, 5721, 8040, 8945, 8175, 9262, 9283, 9301, 9304, 9322,
     9326, 9344, 9363, 9381, 9384, 9043, 9180, 9200, 9272, 9368,
     5787, 6370, 5877, 9337, 7105, 9183, 7117, 9350,  352,  167,

     7828, 6395, 7227, 6437, 8149,12015, 9359, 7959,12015,12015,
     9405,   98, 9409, 9413, 8375, 9261, 8458, 8833, 9417, 9420,
     6645, 9422, 9442, 9470, 9478, 9427, 9484, 9490, 6442, 8043,
     8055, 9455, 5043, 5160,12015, 9500, 9503, 8838, 9506, 9509,
     9512, 9515, 8157, 9518, 8237,12015, 9525, 8857, 9535, 9538,
     8270,12015,12015, 9591, 9611, 9631, 9643, 9652, 9657, 9676,
     9681, 9693, 9711, 9727, 9747, 9763, 9779, 9799, 9819, 9839,
     9859, 9879, 9899, 9919, 9939, 8507, 9951, 9954, 9962, 9981,
    10000,10009,10019,10037,10053,10073,10089,10109,10129,10145,
    10161,10177,10193,10209,10229,10249,10269,10289,10309,10329,

    10349,10369,10389,10409,10429,10434,10446,10456,10471,10480,
    10485,10496,10501,10520,10539,10548,10567, 8836,10579,10597,
    10617,10637,10657,10677,10697,10717,10737,10757,10777,10797,
    10817,10837,10853,10873,10889,10905,10921,10937,10953,10969,
    10988,11008,11028,11044,11064,11084,11104,11124,11133,11138,
    11143,11155, 5864,11158,11169,11180,11191,11200,11219,11228,
    11238,11256,11276,11296,11316,11336,11356,11376,11396,11416,
    11436,11456,11476,11496,11516,11532,11548,11564,11580,11596,
    11612,11628,11644,11664,11673,11684,11689,11698,11708,11717,
    11722,11733,11752,11761,11771,11785,11801,11818,11834,11850,

    11866,11871,11887,11903,11914,11930,11946,11962,11978,11994
    } ;

static yyconst flex_int16_t yy_def[1911] =
    {   0,
     1753,    1, 1753,    3,    1,    1, 1753,    7, 1753,    9,
     1753, 1753, 1753, 1753, 1753, 1754, 1755, 1753, 1753, 1753,
     1756, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1757,
     1757, 1753, 1753, 1753, 1753, 1753, 1758, 1758, 1758, 1758,
     1758, 1758,   40,   40, 1758, 1758, 1758,   40,   40, 1758,
     1758,   51,   51,   51,   51,   51,   51,   51, 1753, 1759,
     1753, 1753,   51,   51, 1753, 1753, 1753, 1753, 1760, 1760,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
     1761,   70,   70, 1753, 1753, 1762, 1762,   51,   51,   51,

       51, 1753, 1763, 1764, 1765, 1764, 1764, 1764, 1764, 1766,
     1766, 1764, 1764, 1767, 1767,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115, 1753,  115,  115, 1764, 1768,
     1753, 1769, 1770, 1771, 1772, 1771, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1773, 1753, 1753, 1774,
     1753, 1753, 1775, 1753, 1753, 1753, 1753, 1776, 1753, 1777,
     1777, 1777, 1777, 1777, 1778, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1779,   51, 1753,   51,   51,   51,   51,
       51,   51, 1753,   51,   51,   51,   51,   51,   51,   51,

       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51, 1753, 1753, 1753, 1780, 1781, 1780,
      240,  240,  240,  240,  240,  240,  240,  240,  240,  240,
      240,  240,  240,  240,  240,  240,  240,  240,  240,  240,
      240,  240,  240,  240,  240,  240,  240,  240,  240,  240,
      240,  240,  240,  240,  240,  240,  240,  240,  240,  240,
      240,  240,  240,  240,  240,  240,  240, 1753, 1782, 1782,
     1783, 1783, 1783, 1783, 1783, 1783, 1783,   51,   51,   51,

     1753, 1753, 1753, 1753, 1753, 1784, 1785, 1786, 1787, 1788,
     1787, 1787, 1789, 1787, 1787, 1790, 1787, 1791, 1791,  319,
      319,  319, 1792, 1793, 1794, 1787, 1794,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327, 1795, 1753, 1796, 1786, 1797, 1798,
     1799, 1796, 1800, 1801, 1800, 1800, 1801, 1788, 1753,  389,
      389, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1802, 1803,

     1804, 1805, 1806, 1753, 1753, 1753, 1807, 1753, 1753, 1807,
     1808, 1753, 1753, 1753, 1809, 1808, 1810, 1811, 1753, 1753,
     1753, 1753, 1753, 1812, 1813, 1814, 1814,  427,  427,  427,
      427,  427,  427,  427,  427,  427,  427,  427,  427,  427,
      427,  427,  427,  427,  427,  427,  427,  427,  427,  427,
      427, 1753,  427,  427,  427,  427,  427,  427,  427,  427,
      427,  427,  427,  427,  427,  427,  427,  427,  427,  427,
      427,  427,  427,  427,  427,  427,  427,  427,  427, 1815,
     1816, 1815, 1817, 1817,  484,  484,  484,  484,  484,  484,
      484,  484,  484,  484,  484,  484,  484,  484,  484,  484,

      484,  484,  484,  484,  484,  484,  484,  484, 1753,  484,
      484,  484,  484,  484,  484,  484,  484,  484,  484,  484,
      484,  484,  484,  484,  484,  484,  484,  484,  484,  484,
      484,  484,  484,  484,  484,  484, 1818, 1818, 1818, 1818,
     1818, 1819, 1753, 1753, 1818, 1753, 1819,  427,  427,  427,
     1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
     1830, 1831, 1832, 1833, 1834, 1833, 1833, 1835, 1836, 1836,
     1836, 1837, 1836, 1836, 1837, 1838, 1836, 1836, 1836,  579,
     1838, 1839, 1753, 1840, 1753, 1841, 1841,  587,  587,  587,
      587,  587,  587,  587,  587,  587,  587,  587,  587,  587,

      587,  587,  587,  587,  587,  587,  587,  587,  587,  587,
      587,  587,  587,  587,  587,  587,  587,  587,  587,  587,
      587,  587,  587,  587,  587,  587,  587,  587,  587,  587,
      587,  587,  587,  587,  587,  587,  587,  587, 1842, 1842,
     1753, 1843, 1844, 1753, 1753, 1753, 1753, 1753, 1753, 1845,
     1846, 1847, 1848, 1849, 1850, 1851, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1852, 1753, 1753, 1853, 1854, 1855, 1855,
     1856, 1856, 1856, 1753, 1857, 1857, 1753, 1753, 1857, 1857,
     1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,  683,
      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,

     1753,  683,  683,  683,  683,  683,  683,  683,  683,  683,
      683,  683,  683,  683,  683, 1753,  683,  683,  683,  683,
      683,  683,  683,  683,  683,  683,  683, 1858, 1858, 1753,
     1859, 1859, 1753,  732,  732,  732,  732,  732,  732,  732,
      732,  732,  732,  732,  732,  732,  732,  732,  732,  732,
      732,  732,  732,  732,  732,  732,  732,  732,  732,  732,
      732,  732,  732,  732,  732,  732,  732,  732,  732, 1753,
      732,  732,  732,  732,  732,  732,  732,  732,  732,  732,
      732, 1753, 1860, 1753, 1860, 1753, 1860, 1861, 1753, 1860,
     1860, 1753,  683,  683, 1862, 1863, 1864, 1865, 1866, 1867,

     1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1753,
     1877, 1878, 1878, 1878, 1878, 1878, 1878, 1878, 1879, 1878,
     1878, 1878, 1880, 1881, 1881, 1882, 1882,  827, 1883, 1883,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830, 1753, 1753, 1753,
     1884, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1885, 1885,
     1886, 1887, 1753, 1753, 1753, 1753, 1888, 1753, 1889, 1753,

     1890, 1891, 1892, 1892, 1892, 1892, 1892, 1753, 1892, 1892,
     1892, 1892, 1892, 1892, 1892, 1753, 1892, 1892, 1892,  905,
      905,  905,  905,  905,  905,  905,  905, 1753,  905,  905,
      905,  905,  905,  905,  905,  905, 1753,  905,  905,  905,
      905,  905,  905,  905,  905,  905,  905, 1893, 1893,  949,
      949,  949, 1753,  949,  949,  949,  949,  949,  949,  949,
     1753,  949,  949,  949,  949,  949,  949,  949,  949,  949,
      949,  949,  949,  949,  949,  949,  949,  949,  949,  949,
     1753,  949,  949,  949,  949,  949,  949,  949,  949,  949,
      949, 1753, 1753, 1753, 1894, 1895, 1753, 1753, 1753, 1753,

     1753, 1753, 1753, 1753, 1896, 1896, 1897, 1753, 1898, 1898,
     1898, 1898, 1899, 1898, 1900, 1898, 1901, 1753,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  878,
      878, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1902, 1886, 1886, 1753, 1753, 1753, 1753,
     1753, 1890, 1890,  905,  905, 1753,  905,  905,  905,  905,
      905,  905,  905,  905,  905, 1753,  905,  905,  905,  905,

      905,  905, 1753,  905,  905, 1753,  905,  905,  905,  905,
      905, 1753,  905,  905, 1753,  905,  905,  905,  905,  905,
      905, 1753,  905,  905,  949,  949, 1753,  949,  949,  949,
      949,  949,  949,  949,  949,  949,  949,  949,  949,  949,
      949,  949, 1753,  949,  949,  949,  949,  949,  949,  949,
     1753,  949,  949,  949,  949,  949,  949,  949,  949, 1753,
      949,  949, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1903, 1897, 1897, 1898, 1898, 1898,
     1898, 1898, 1901, 1901,  830,  830,  830,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  830,

      830,  830,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830, 1904, 1753,
     1062, 1062, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1905, 1902, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
      905, 1753,  905, 1753,  905,  905,  905,  905, 1753,  905,
      905, 1753,  905,  905,  905, 1753, 1753, 1753,  905, 1753,
     1753,  905,  905, 1753,  905, 1753,  905,  905, 1753, 1753,
      905,  905, 1753,  905,  949, 1753,  949,  949,  949,  949,
      949, 1753,  949, 1753,  949,  949,  949,  949, 1753,  949,
     1753,  949,  949,  949, 1753,  949,  949, 1753,  949,  949,

      949, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1906, 1903, 1898,
     1898, 1898, 1898, 1898, 1898, 1898, 1898,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830, 1898, 1904, 1753,
     1220, 1907, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1905, 1905, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
      905, 1753,  905,  905,  905, 1753,  905, 1753,  905,  905,
      905, 1753, 1753, 1753, 1753, 1753,  905,  905, 1753, 1753,
      905,  905,  905,  905, 1753,  905,  949,  949,  949,  949,

      949,  949,  949,  949, 1753,  949,  949, 1753,  949,  949,
      949,  949,  949, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1906, 1906,
     1898, 1898, 1898, 1898, 1898, 1898, 1898,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830, 1908, 1350, 1350, 1909, 1907, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753,  905, 1753,  905,  905,  905, 1753,
      905, 1753,  905,  905,  905, 1753, 1753, 1753,  905,  905,
      905,  905,  905,  905, 1753,  905,  949,  949,  949,  949,

      949,  949,  949,  949, 1753,  949,  949,  949,  949,  949,
      949,  949, 1753, 1753, 1753, 1753, 1753, 1753, 1898, 1898,
     1898, 1898, 1898, 1898, 1898, 1898, 1898,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830, 1907, 1908, 1910, 1910, 1909, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,  905, 1753,
      905,  905,  905, 1753,  905, 1753,  905,  905, 1753, 1753,
      905,  905,  905,  905, 1753,  905, 1753,  949,  949,  949,
      949,  949,  949,  949, 1753,  949,  949,  949,  949,  949,

     1898, 1898, 1898, 1898, 1898, 1898, 1898, 1898, 1898, 1898,
     1898, 1898,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830,  830,  830, 1910, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753,  905,  905, 1753,  905,
     1753,  905,  905, 1753,  905,  905,  905, 1753,  905, 1753,
     1753, 1753, 1753,  949,  949,  949, 1753,  949,  949,  949,
      949,  949, 1753,  949, 1753, 1898, 1898, 1898, 1898, 1898,
     1898, 1898, 1898, 1898, 1898,  830,  830,  830,  830,  830,
      830,  830,  830,  830, 1753, 1753, 1753, 1753, 1753, 1753,

     1753, 1753, 1753, 1753, 1753, 1753,  905, 1753, 1753, 1753,
      905, 1753,  905,  905, 1753,  949, 1753, 1753,  949,  949,
      949, 1898, 1898, 1898, 1898,  830,  830,  830,  830, 1753,
     1753, 1753, 1753, 1753, 1753,  905,  905, 1753,  949,  949,
      830,  830, 1753, 1753, 1753, 1753,  905, 1753,  949,  830,
     1753, 1753,    0, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,

     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,

     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753
    } ;

static yyconst flex_uint16_t yy_nxt[12087] =
    {   0,
       12,   13,   14,   13,   15,   16,   17,   18,   19,   20,
       21,   22,   23,   24,   25,   26,   27,   28,   29,   30,
       31,   32,   33,   34,   35,   36,   12,   37,   38,   39,
       40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
       50,   51,   47,   47,   52,   53,   54,   55,   56,   57,
       58,   47,   47,   59,   60,   61,   62,   47,   38,   40,
       63,   45,   46,   49,   47,   64,   47,   65,   66,   67,
       68,   12,   13,   14,   13,   15,   16,   17,   18,   19,
       20,   21,   22,   23,   24,   25,   26,   27,   28,   29,
       30,   31,   32,   33,   34,   35,   36,   12,   69,   70,

       71,   72,   73,   74,   75,   76,   77,   78,   79,   80,
       81,   82,   83,   79,   79,   84,   85,   86,   87,   88,
       89,   90,   79,   79,   59,   91,   61,   62,   79,   70,
       72,   92,   77,   78,   81,   79,   93,   79,   65,   66,
       67,   68,   94,  155,  158, 1734,   94,  159,  161,  161,
      261,  149,  149,  149,  262,   95,  158,   96,   97,   95,
      181,   96,   97,  182,  159,  166,  166,  175,  230,  176,
      177,  178,   98,  187,  179,  180,   98,  150,  240,  151,
      152,  187,  248,   99,  100,  187,  240,   99,  100,  156,
      158,  240,  240,  307,  153,  154,  249,  255,  263,  250,

      264,  187,  265,  101,  289,  289,  283,  101,  102,  152,
      240, 1733,  102,   12,   13,   14,   13,   15,  103,   17,
      104,   19,   20,  105,   22,   23,   24,  106,   26,  107,
      108,  109,  110,  111,  112,   33,   34,   35,   36,  113,
      114,  115,  116,  117,  118,  119,  120,  121,  122,  123,
      124,  125,  126,  127,  128,  124,  124,  129,  130,  131,
      132,  133,  134,  135,  124,  124,   59,  136,   61,   62,
      124,  115,  117,  137,  122,  123,  126,  124,  138,  124,
       65,   66,   67,  139,  140,  141,  141,  141,  140,  142,
      143,  144,  140,  140,  145,  140,  140,  140,  146,  140,

      146,  146,  146,  146,  146,  146,  140,  140,  140,  140,
      146,  147,  147,  147,  147,  147,  147,  147,  147,  147,
      147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
      147,  147,  147,  147,  147,  147,  147,  140,  148,  140,
      140,  147,  147,  147,  147,  147,  147,  147,  147,  147,
      147,  140,  140,  140,  146,  149,  149,  149, 1135,  165,
      165,  165,  168,  169,  240,  170,  170,  240,  184,  256,
      185,  185,  186,  240,  268,  168,  169,  172,  170,  170,
      392,  150,  194,  151,  152,  150,  257,  151,  152,  158,
      172,  184, 1732,  185,  185,  186,  173,  307,  153,  154,

      240,  195,  153,  154,  266,  193,  240,  174,  174,  392,
      219,  187,  483,  152,  155,  196,  286,  152,  197,  187,
      174,  174,  184,  187,  185,  185,  186, 1712,  193,  184,
      266,  185,  185,  186,  184,  188,  185,  185,  186,  187,
      258,  483,  240,  189,  203,  190,  259,  497,  348,  191,
      192,  327,  349,  327,  184,  260,  185,  185,  186,  193,
      288,  204,  202,  352,  188,  184,  193,  185,  185,  186,
      342,  193,  259,  497,  205,  210,  187,  211,  208,  198,
      206,  370,  209,  199,  187,  327,  187,  200,  399,  207,
      187,  193,  201,  400,  184,  187,  185,  185,  186,  158,

      327,  184,  193,  185,  185,  186,  206,  159,  187,  199,
      355,  200,  187,  187,  187,  273,  187,  213,  212,  274,
      214,  187,  275,  240,  187,  158,  187,  267,  159,  187,
      184,  193,  185,  185,  186,  276, 1285,  184,  193,  185,
      185,  186,  401,  213,  203,  187,  214,  402,  187,  187,
      528,  256,  216,  267,  215,  240,  240,  187,  220,  327,
      217,  204,  221,  187,  218,  222,  343,  193,  257,  373,
      327,  187,  528,  187,  193,  187,  224,  187,  223,  327,
      216,  187,  225,  344,  187,  226,  350, 1708,  351,  327,
      527,  187,  227,  353,  228,  240,  187,  229,  284,  285,

      240,  187,  224,  187,  277,  231,  232,  422,  423,  187,
      278,  187,  187,  279,  527,  187,  228,  187,  233,  353,
      251,  187,  308,  394,  252,  285,  187,  310,  253,  224,
      277,  187,  232,  254,  187,  225,  395,  187,  226,  187,
      240,  269,  300,  237,  237,  237,  489,  187,  225,  270,
      252,  226,  253,  271,  187,  224,  237,  237,  237,  184,
      327,  238,  238,  186,  354,  489,  239,  187,  300,  269,
     1700,  312,  184,  247,  238,  238,  186,  240,  186,  239,
      376,  376,  376,  486,  308,  241,  280,  308,  281,  310,
      354,  282,  310,  242,  240,  243,  246,  240,  277,  244,

      245,  976,  168,  290,  278,  291,  291,  279,  308,  246,
      281,  425,  486,  310,  241, 1693,  293,  294,  208,  535,
      295,  315,  298,  187,  277,  168,  290,  308,  291,  291,
      360,  187,  310,  312,  361,  187,  312,  362,  535,  293,
      294,  311,  311,  295,  381,  293,  381,  297,  297,  220,
      363,  187,  187,  221,  187,  300,  299,  312,  526,  296,
      187,  225,  187,  378,  226,  378,  187,  379,  293,  223,
      297,  297,  301,  301,  301,  327,  312,  158,  308, 1045,
      187,  300,  187,  310,  308,  307,  338,  335,  526,  310,
      339,  327,  314,  314,  340,  236, 1660,  327,  356,  341,

      323,  336,  176,  177,  337,  345,  357,  327,  343,  327,
      358,  346,  327,  364,  494,  388,  339,  388,  340,  365,
      347,  495,  366,  308,  379,  344,  356,  312,  310,  158,
      302,  303,  307,  312,  304,  305,  308,  346,  309,  364,
      628,  310,  236,  508,  327,  309,  484,  316,  317,  309,
      318,  318,  309,  367,  485,  368,  327,  309,  369,  371,
      372,  327,  320,  513,  403,  364,  161,  161,  404,  508,
      628,  365,  312,  485,  366, 1753, 1753,  368,  412,  412,
      520,  321,  419,  420,  421,  312,  372, 1654,  309,  513,
      531,  364,  322,  322,  166,  166,  408,  408,  149,  149,

      149,  309,  308,  597,  309,  586,  405,  310,  409,  520,
      598,  309, 1649,  316,  317,  309,  318,  318,  309,  531,
      165,  165,  165,  309,  150,  519,  151,  152,  320,  410,
      169,  517,  411,  411,  586,  491,  406,  406,  406,  406,
      492,  153,  154,  514,  172,  515,  150,  518,  151,  152,
      530,  312,  592,  519,  309,  952,  152,  491,  322,  322,
      517, 1644,  629,  153,  154,  240,  518,  309,  308,  515,
      309,  592,  668,  310,  174,  174,  530,  309,  152,  309,
      324,  309,  325,  325,  326,  413,  629,  413, 1753,  309,
      414,  414,  187,  328, 1753, 1753,  630,  412,  412,  404,

      187,  329,  187,  330,  187,  668,  499,  331,  332,  670,
      187,  426,  500,  187,  187,  436,  187,  333,  630, 1632,
      187,  187,  328,  187,  187,  187, 1631,  532,  187,  427,
      187,  187,  890,  309,  308,  187,  309,  428,  500,  310,
      426,  187,  670,  309,  187,  309,  324,  309,  325,  325,
      326,  187,  429,  532,  187,  309,  428,  523,  431,  187,
      334,  187,  187,  645,  187,  524,  187,  187,  430,  187,
      551,  187,  187,  187,  594,  381,  187,  381,  432,  595,
      552,  429,  187,  333,  524,  645, 1142,  187,  553,  187,
     1753, 1753,  187,  412,  412,  240,  594,  432,  950,  309,

      309,  309,  240,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  309,  309,  309,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  309,  309,  309,  309,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  309,  309,  309,
      309,  375, 1630,  600,  589,  375,  382,  375,  637,  375,
      375,  384,  375,  375,  375, 1629,  375,  376,  376,  376,
      385,  385,  187,  375,  375,  375,  375,  637,  433,  600,

      187,  187,  187,  589,  187,  237,  237,  237,  437,  187,
      187,  434,  602,  187,  187,  438,  435,  611,  603,  622,
      187,  480,  480,  480,  375,  386,  375,  375,  239,  187,
      187, 1753, 1753,  434,  543,  543,  615,  563,  375,  375,
      375,  375,  565,  611,  603,  375,  382,  375,  622,  375,
      375,  384,  375,  375,  375,  544,  375,  544, 1753,  187,
      545,  545,  615,  375,  375,  375,  375,  187,  666,  666,
      187,  187,  439,  440,  482,  578,  187,  578,  187,  621,
      579,  579,  187,  633,  187,  441,  566,  187,  187, 1753,
     1753,  886,  546,  546,  375,  386,  375,  375,  187,  440,

      790,  790, 1753, 1753,  187,  412,  412,  621,  375,  375,
      375,  375,  633,  886, 1628,  375,  382,  375,  383,  375,
      375,  384,  375,  375,  375,  383,  375,  383,  383,  383,
      389,  389,  383,  375,  375,  375,  375,  383,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  375,  390,  375,  375,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  375,  375,
      375,  383,  383,  309, 1627,  309,  383,  383,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383,  383,  383,

      383,  383,  383,  383,  383,  383,  383,  383,  383,  391,
      391,  391,  391,  391,  391,  391,  391,  391,  391,  391,
      391,  391,  391,  391,  391,  391,  391,  391,  391,  391,
      391,  391,  391,  391,  391,  383,  383,  383,  383,  391,
      391,  391,  391,  391,  391,  391,  391,  391,  391,  383,
      383,  383,  383, 1753, 1753,  668,  415,  415,  309,  644,
      309,  632,  187,  554,  416,  416,  416,  416,  416,  416,
      187,  445,  187,  555,  187,  557,  560,  657,  444,  657,
      187,  556,  658,  658,  187,  558,  561,  632,  644,  564,
      187,  564, 1083,  559,  562,  416,  416,  416,  185,  185,

      187,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  185,  185,  185,  185,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  185,  185,  185,  185,  442,
      187,  308,  187,  985,  619,  443,  310,  187,  187,  446,
      187,  404,  187,  187,  187,  187,  616,  240,  617,  187,
      620,  187,  448,  447,  187,  187,  187,  634,  187,  451,

      187,  443,  187,  619,  187,  187,  187,  187,  187,  620,
      449,  187,  617,  450,  890,  187,  658,  658,  187,  187,
      312,  456,  187,  634,  187,  451,  187,  893,  893,  308,
      187,  327,  187,  462,  310,  187,  452,  452,  452,  240,
      459,  187,  974,  187,  187,  187,  187,  456,  457,  587,
      458,  187,  662,  662,  327,  187,  460,  588,  187, 1753,
      187,  462,  663,  663,  453,  187,  187,  187,  896,  896,
      187,  187,  461,  187,  458,  187,  588,  187,  312,  187,
      454,  455,  463, 1149,  187,  460,  187,  289,  289,  187,
      187,  461,  187,  187,  240,  187,  187,  464,  187,  538,

      455,  187,  187,  240,  469,  649,  465,  187,  187,  900,
      900,  463,  187,  466,  187,  187,  187,  187,  187,  187,
      187,  467,  187,  468,  649,  187,  187,  951,  240,  539,
      539,  187,  470,  187,  469,  187,  187,  187, 1072,  187,
      467,  471,  187,  187,  968,  240,  187,  967,  509,  509,
      509, 1130,  187,  187,  187,  473,  470,  240,  187,  187,
      187,  472, 1072,  471,  187,  474,  661,  187,  661,  240,
      187,  662,  662,  475,  187,  187,  510,  187,  187,  187,
      187,  473,  187,  476,  240,  187, 1132,  477,  187,  187,
      987,  959,  511,  512,  474,  187,  187,  240,  187,  475,

      187,  187,  187,  308,  240,  187,  540,  540,  310,  187,
      187,  187,  512,  187,  479,  478,  187,  959,  541,  187,
      480,  480,  480,  187,  237,  237,  237,  240,  965,  187,
      187, 1753, 1753, 1753,  478,  237,  237,  237, 1633,  187,
      184, 1753,  238,  238,  186,  969,  240,  239,  539,  539,
      965,  184,  566,  238,  238,  186,  187,  187,  239,  301,
      301,  301,  548,  983,  187,  187,  549, 1633,  187,  187,
      301,  301,  301,  482,  378,  240,  378,  246,  379,  378,
     1598,  378,  398,  379,  187,  187,  971,  240,  246,  238,
      238, 1753,  238,  238,  238,  238,  238,  238,  238,  238,

      238,  238,  238,  238,  238,  238,  238,  238,  408,  408,
      238,  238,  238,  238,  238,  238,  240,  302,  303,  975,
      660,  304,  305,  410,  290,  327,  542,  542,  302,  303,
      308, 1055,  304,  305,  782,  310,  782,  293,  294,  783,
      783,  295,  238,  238,  238,  238,  323,  240,  308, 1156,
      406,  406,  388,  310,  388,  972,  238,  238,  238,  238,
      568,  379,  311,  311,  569,  240,  293,  625,  297,  297,
     1753, 1753,  240,  415,  415,  626,  452,  452,  452,  312,
      187,  547,  547,  547,  547,  547,  547,  550,  187,  388,
      665,  388,  187, 1585,  626,  973,  240,  312,  379, 1753,

     1753, 1753,  989,  665,  701,  665,  412,  412,  187, 1753,
      240,  550,  547,  547,  547,  309,  309,  308,  309,  309,
      308,  309,  310,  309,  309,  310,  309,  309,  309,  679,
      309,  314,  314,  665,  573,  573, 1510,  309,  309,  309,
      309,  240,  978,  570,  240,  970,  574,  452,  452,  452,
      960,  668,  240,  671,  671,  186, 1279,  168,  169,  240,
      664,  664, 1753, 1753, 1753,  240,  312,  970,  309,  312,
      309,  309,  172,  571,  571,  612,  571,  571,  960, 1753,
     1753, 1753,  309,  309,  309,  308, 1580,  309,  673, 1753,
      310,  613,  614, 1053,  309,  984,  309,  309,  309,  309,

      309,  309,  174,  174,  665,  240,  309,  327, 1753, 1753,
     1753,  614,  665,  240,  977, 1753,  990,  665, 1753,  665,
      415,  415,  677,  677,  677,  665,  240,  665,  414,  414,
      240, 1057,  678,  979,  312, 1576,  977,  309,  184,  327,
      185,  185,  186,  786,  980,  786,  240,  665,  787,  787,
      309,  308,  308,  309,  680,  665,  310,  310,  986,  240,
      309, 1570,  575,  317,  309,  576,  576,  309,  980,  308,
      406,  406,  309,  240,  310,  193, 1555,  320,  956, 1753,
     1753, 1753, 1753, 1753, 1753,  811, 1753, 1753, 1753, 1753,
      783,  783, 1753,  674,  674,  674, 1753,  956,  787,  787,

      312,  566, 1554,  309, 1753, 1753, 1753,  322,  322,  184,
      682,  185,  185,  186, 1753,  308,  309,  308,  312,  309,
      310,  675,  310, 1051,  991,  684,  309,  681,  309,  309,
      309,  577,  577,  309,  240,  327,  676, 1280,  309, 1753,
     1753, 1753, 1753, 1753, 1753,  894,  193,  894,  240, 1753,
      895,  895, 1753,  992,  683,  993,  993, 1753, 1753, 1753,
     1753, 1753, 1753, 1023,  312,  685,  312, 1753,  327,  309,
     1753, 1021,  686,  327,  658,  658, 1753, 1753, 1753,  716,
      716,  716,  309,  580,  580,  687, 1753, 1753, 1753, 1753,
     1036,  581,  581,  581,  581,  581,  581, 1753,  668,  689,

      327, 1753, 1753, 1753,  900,  900,  691,  240, 1753, 1753,
     1753, 1753,  957, 1022,  327,  888,  406,  406, 1753, 1753,
     1753, 1753,  581,  581,  581,  308, 1049,  309,  327, 1753,
      310,  957,  688, 1553,  309, 1083,  309,  309,  309,  309,
      309,  309,  690, 1753, 1753, 1753,  309, 1753, 1753, 1753,
     1049,  688,  692, 1753,  674,  674,  674, 1753, 1753, 1753,
     1753, 1037,  327,  693,  690, 1753, 1753, 1753, 1753, 1753,
     1753, 1753,  327, 1034,  583, 1753, 1753, 1753, 1753, 1753,
     1198,  997,  882,  998,  998,  694, 1753, 1038,  327,  695,
      309,  308,  696,  309,  327, 1034,  310,  883, 1041,  703,

      309, 1552,  309,  309,  309,  309,  309,  326,  327,  694,
      698,  697,  309, 1753, 1753, 1753, 1040,  327,  696, 1753,
     1753, 1753,  240, 1753, 1753, 1753, 1753,  958,  327, 1753,
      784, 1043,  540,  540, 1753, 1047,  698, 1753, 1753, 1753,
      585, 1753, 1753, 1753,  785,  327,  958, 1753, 1753, 1753,
     1753, 1753, 1042,  327,  699,  700,  309,  308, 1753,  309,
      240, 1133,  310, 1550,  702,  966,  309,  704,  309,  324,
      309,  325,  325,  326,  539,  539,  699,  705,  309,  240,
      706, 1753, 1753, 1753,  966, 1753, 1753, 1753,  662,  662,
      999, 1753, 1000, 1000,  709, 1753, 1548, 1753, 1753, 1753,

     1753, 1753, 1753, 1753, 1753, 1753,  333, 1753, 1068,  240,
     1753,  707,  327, 1753,  528, 1044, 1753, 1753, 1753,  708,
      666,  666,  309,  308,  240,  309, 1753, 1068,  310,  988,
      406,  406,  309,  528,  309,  324,  309,  325,  325,  326,
     1753, 1753, 1753,  710,  309,  708,  712,  711,  988, 1286,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
      240, 1753,  406,  406, 1753, 1029,  713, 1753, 1753, 1753,
     1753,  327,  333,  716,  716,  716,  327, 1534, 1753, 1048,
      994,  714,  994, 1753,  715,  995,  995,  719,  309,  325,
      325, 1029,  325,  325,  325,  325,  325,  325,  325,  325,

      325,  325,  325,  325,  325,  325,  325,  325, 1458,  717,
      325,  325,  325,  325,  325,  325,  699, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753,  327, 1753,  327, 1039,
     1753, 1026, 1458, 1753, 1054,  327, 1753, 1753, 1753, 1753,
     1753, 1753,  325,  325,  325,  325, 1753,  895,  895, 1753,
     1026, 1039, 1030,  720,  327, 1046,  325,  325,  325,  325,
      375,  327,  718, 1140,  375,  382,  375,  240,  375,  375,
      384,  375,  375,  375, 1531,  375,  721, 1046,  722, 1139,
     1030,  718,  375,  375,  375,  375, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1052, 1753, 1058, 1753, 1753,

     1753,  240, 1753, 1078, 1078,  327, 1495,  327, 1753,  237,
      237,  237,  723,  375,  640,  375,  375,  187, 1131, 1753,
     1079, 1079, 1753, 1753, 1753,  187,  240,  375,  375,  375,
      375,  724, 1753, 1148,  375,  382,  375,  240,  375,  375,
      384,  375,  375,  375,  725,  375, 1753, 1753, 1753,  509,
      509,  509,  375,  375,  375,  375, 1753,  237,  237,  237,
      327,  237,  237,  237, 1059,  726, 1328, 1753,  237,  237,
      237, 1753,  239, 1145,  327, 1482, 1134,  701, 1753,  727,
      237,  237,  237,  375,  386,  375,  375,  734, 1136,  240,
     1753,  237,  237,  237,  240, 1137,  240,  375,  375,  375,

      375, 1753, 1480,  240,  375,  382,  375,  735,  375,  375,
      384,  375,  375,  375, 1074,  375, 1300,  641,  404,  385,
      385,  642,  375,  375,  375,  375, 1138,  240,  736,  237,
      237,  237,  237,  237,  237,  237,  237,  237, 1154, 1753,
      976,  738, 1753,  240,  240, 1753,  240, 1146,  237,  237,
      237, 1076,  327,  375,  386,  375,  375,  737, 1753,  976,
     1186,  740,  237,  237,  237,  240, 1465,  375,  375,  375,
      375,  739, 1753, 1464,  375,  382,  375,  383,  375,  375,
      384,  375,  375,  375,  383,  375,  383,  383,  383,  389,
      389,  383,  375,  375,  375,  375,  383,  389,  389,  389,

      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  375,  390,  375,  375,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  375,  375,  375,
      383,  389,  643, 1463,  643,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
     1462, 1129,  389,  389,  389,  389,  389,  389,  733,  733,
      733,  237,  237,  237,  327,  237,  237,  237,  678, 1027,
      240, 1753, 1163, 1163,  184, 1753,  238,  238,  186, 1153,
     1129,  239,  995,  995,  389,  389,  389,  389, 1027,  783,

      783,  741, 1158,  742,  237,  237,  237,  240,  389,  389,
      389,  389, 1753, 1753, 1753,  415,  415, 1753, 1753, 1753,
      240,  246, 1461,  416,  416,  416,  416,  416,  416, 1189,
      237,  237,  237,  237,  237,  237,  237,  237,  237,  327,
     1753,  539,  539, 1753, 1162,  187, 1753,  922,  240,  743,
      237,  237,  237,  187,  416,  416,  416,  730,  730,  730,
     1753,  237,  237,  237, 1166, 1166,  746, 1141,  743,  744,
      240, 1753, 1159,  184,  745,  238,  238,  186,  787,  787,
      239,  237,  237,  237, 1460,  731, 1141,  237,  237,  237,
      240, 1753, 1185,  327,  747,  327,  745, 1753, 1028,  327,

      732,  237,  237,  237, 1035,  748,  237,  237,  237, 1459,
      246, 1753,  237,  237,  237, 1207, 1753, 1028,  327,  749,
      539,  539, 1753, 1035,  237,  237,  237,  237,  237,  237,
      237,  237,  237,  750, 1753,  751,  308, 1753, 1169, 1169,
     1753,  310, 1188,  749, 1194,  327,  753,  237,  237,  237,
      573,  573,  752,  327,  237,  237,  237, 1753,  237,  237,
      237,  751,  815,  755, 1753,  754, 1191, 1275, 1753,  240,
      756, 1188,  753,  237,  237,  237,  327,  757,  237,  237,
      237,  308, 1696, 1753,  758,  312,  310,  754, 1753,  237,
      237,  237,  571,  571,  759,  821,  821,  760, 1450, 1753,

      237,  237,  237,  761,  237,  237,  237,  237,  237,  237,
     1753, 1696,  762, 1147, 1753, 1157,  240, 1753,  237,  237,
      237,  237,  237,  237,  237,  237,  237,  240, 1753, 1281,
      312, 1753, 1147, 1192, 1753,  763,  240,  766,  762,  770,
      770,  770, 1201,  327,  767, 1157,  764, 1448,  765, 1753,
      327,  768,  790,  790,  769,  237,  237,  237, 1214,  237,
      237,  237,  237,  237,  237, 1753,  237,  237,  237, 1753,
     1150,  327, 1753,  240, 1335,  771, 1753,  237,  237,  237,
      237,  237,  237,  237,  237,  237,  327, 1753, 1214, 1150,
     1753, 1193,  773, 1753,  539,  539,  774,  237,  237,  237,

      240,  327, 1287,  754,  772,  327,  777, 1753,  237,  237,
      237,  237,  237,  237,  237,  237,  237,  775, 1753,  776,
      665, 1753,  778,  772, 1753,  327, 1203,  168,  290, 1199,
      788,  788, 1403,  665,  327,  665,  543,  543, 1753, 1753,
     1753,  293,  294,  779,  781,  295, 1233, 1233, 1753,  665,
      668,  780,  671,  671,  186, 1591,  789, 1753, 1753, 1753,
      240,  665,  665,  665,  665,  545,  545, 1753, 1234, 1234,
      293,  327,  297,  297,  665, 1206,  665,  546,  546,  793,
      789, 1753, 1753, 1753, 1753, 1753, 1753,  673, 1753, 1753,
     1753, 1753,  791, 1155, 1753, 1406,  240,  792, 1753, 1197,

     1204,  793, 1400, 1210,  665,  793,  327,  539,  539,  327,
      327,  794, 1155,  327,  831,  240, 1213, 1753, 1753, 1753,
      327,  792, 1753, 1753, 1218,  415,  415, 1753, 1235, 1235,
     1753, 1753, 1753,  547,  547,  547,  547,  547,  547,  308,
     1753,  916,  916,  916,  310,  240,  308, 1290,  812,  240,
      812,  310, 1215,  813,  813,  816, 1292,  816,  895,  895,
      817,  817,  327,  832,  547,  547,  547,  564,  564,  917,
      564,  564, 1278,  564,  240,  564,  564,  918,  564,  564,
      564,  327,  564, 1753, 1753, 1753,  919, 1440,  312,  564,
      564,  564,  564, 1753,  240,  312, 1389, 1753, 1753, 1753,

      406,  406, 1753, 1753, 1753,  919,  668, 1753,  671,  671,
      186,  665, 1753,  308,  327,  240,  327, 1294,  310,  630,
      564, 1056,  564,  564,  820,  834,  820,  577,  577,  168,
      169,  833,  899,  899,  564,  564,  564,  308,  630,  309,
     1056,  836,  310,  673,  172, 1395,  309, 1385,  309,  309,
      309,  309,  309,  309,  820, 1753, 1753, 1753,  309, 1753,
     1753, 1753,  312, 1216, 1395, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753,  327,  174,  174, 1753, 1753, 1753, 1753,
     1753,  837, 1753, 1753, 1753, 1301,  810, 1753,  240, 1753,
     1753, 1753, 1753, 1330,  995,  995,  838, 1293,  839, 1753,

     1172, 1172,  309,  308, 1301,  309, 1442,  327,  310,  835,
     1288,  240,  309, 1372,  814,  309,  309,  309,  309,  309,
      327,  841,  840, 1293,  309, 1753, 1753, 1753, 1753, 1753,
     1753,  240, 1399,  844,  240, 1753,  539,  539, 1753, 1173,
     1288,  840, 1173, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753,  312, 1753, 1332,  309, 1753,  327,  843, 1753,
     1753, 1753, 1753, 1753, 1753, 1753,  842,  327,  309,  308,
     1753,  309, 1045, 1753,  310,  716,  716,  716,  309, 1537,
      309,  309,  309,  818,  818,  309,  327,  845,  842,  327,
      309, 1045,  847,  327, 1200,  849, 1333,  848,  846, 1753,

     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1366, 1753,
     1401,  888, 1753, 1200,  327, 1753, 1172, 1172,  312, 1205,
     1074,  309,  846,  848,  404, 1365, 1753, 1753, 1753, 1753,
     1753, 1753,  240,  850,  309,  308, 1753,  309, 1205, 1753,
      310,  852, 1336,  851,  309,  327,  316,  317,  309,  819,
      819,  309, 1753, 1753, 1753, 1317,  309, 1076, 1317,  850,
     1511,  320, 1753,  859,  240,  851,  853, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1164, 1753,  993,  993,
     1753, 1753,  854, 1753,  312, 1338, 1753,  309,  308,  859,
     1165,  322,  322,  310, 1753, 1753, 1753,  855,  327, 1178,

      309,  665, 1404,  308, 1753, 1331,  327,  856,  310,  857,
     1753, 1753, 1753,  240,  820, 1338,  820,  579,  579,  860,
     1753, 1753, 1753, 1753,  858, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753,  308,  312, 1753, 1361,
      327,  310, 1753,  327,  820, 1208, 1358, 1753, 1753, 1753,
      813,  813,  312, 1337,  864,  863,  861, 1753,  327,  571,
      571,  580,  580, 1378, 1208, 1753, 1753, 1753, 1339,  822,
      822,  822,  822,  822,  822, 1753,  862,  865, 1357,  716,
      716,  716, 1753, 1753, 1753,  312, 1753, 1753, 1753, 1753,
      327,  327, 1753, 1378,  308,  866, 1753, 1443, 1345,  310,

      822,  822,  822,  309,  309,  308, 1698,  309, 1009, 1009,
      310, 1402,  869,  240,  309,  867,  309,  309,  309,  580,
      580,  309, 1356, 1753, 1753, 1753,  309,  581,  581,  581,
      581,  581,  581, 1753,  851, 1698, 1753, 1753, 1753, 1753,
     1753, 1753, 1167,  312,  998,  998, 1753, 1172, 1172, 1753,
      327, 1753, 1753, 1753,  312, 1212, 1168,  309,  581,  581,
      581, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1355,  870,
      309,  308, 1753,  309, 1212, 1753,  310, 1160, 1160, 1160,
      309,  868,  309,  823,  309, 1340, 1173,  309,  873, 1173,
     1074,  871,  309,  872,  404,  327, 1753, 1753, 1753, 1476,

      868, 1753, 1753, 1753,  874,  327, 1753, 1753, 1753, 1753,
     1353, 1753,  677,  677,  677, 1342, 1170, 1753, 1000, 1000,
      825, 1161,  678, 1163, 1163,  240, 1305, 1363, 1305, 1476,
     1171, 1306, 1306,  327,  877, 1302,  309,  309,  309,  876,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  582,  582,  582,  582,  582,  582,
      582,  582,  582,  582,  582,  582,  582,  582,  582,  582,
      582,  582,  582,  582,  582,  582,  582,  582,  582,  582,
      309,  309,  309,  309,  582,  582,  582,  582,  582,  582,

      582,  582,  582,  582,  309,  309,  309,  309,  308,  240,
      309, 1413,  184,  310,  185,  185,  186,  309, 1407,  309,
      823,  309,  826,  826,  326, 1753, 1753, 1753,  184,  309,
      185,  185,  186,  327, 1346, 1753,  903,  327,  240,  184,
     1410,  185,  185,  186,  733,  733,  733, 1303, 1303,  193,
     1166, 1166,  904,  327,  678, 1364, 1364,  828,  240, 1304,
     1308, 1308, 1307, 1306, 1306,  193,  905,  239, 1261, 1261,
     1261,  875, 1309,  309,  309,  309,  193,  309,  309,  309,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,

      309,  584,  584,  584,  584,  584,  584,  584,  584,  584,
      584,  584,  584,  584,  584,  584,  584,  584,  584,  584,
      584,  584,  584,  584,  584,  584,  584,  309,  309,  309,
      309,  584,  584,  584,  584,  584,  584,  584,  584,  584,
      584,  309,  309,  309,  309,  674,  674,  674,  327,  308,
     1497,  309, 1541,  184,  310,  185,  185,  186,  309,  240,
      309,  324,  309,  325,  325,  326,  674,  674,  674, 1310,
      309, 1310, 1397,  829, 1311, 1311,  906,  897,  169,  898,
      899,  899,  240,  184,  327,  185,  185,  186,  830, 1498,
      193,  327,  172, 1508,  882, 1412, 1397,  907,  333,  184,

      240,  185,  185,  186,  240, 1236, 1236, 1237,  184,  883,
      185,  185,  186,  240,  309,  677,  677,  677, 1409,  308,
      193,  309,  174,  174,  310,  678,  240, 1438,  309,  327,
      309,  324,  309,  325,  325,  326,  193,  911, 1238,  184,
      309,  185,  185,  186, 1512,  193,  908,  908,  908, 1169,
     1169, 1438, 1753, 1753, 1753,  240,  911, 1341,  730,  730,
      730, 1312,  184,  327,  185,  185,  186, 1317,  333,  184,
     1317,  185,  185,  186,  909,  184,  193,  185,  185,  186,
      187,  239,  910, 1341,  309,  375,  882,  914,  187,  375,
      382,  375,  327,  375,  375,  384,  375,  375,  375,  193,

      375,  883, 1445, 1411,  912,  327,  193,  375,  375,  375,
      375,  240,  193,  914,  184,  665,  185,  185,  186,  327,
     1753, 1753, 1753,  912, 1347, 1313, 1313,  327,  665,  915,
      665,  893,  893, 1590,  900,  900, 1080, 1314,  375,  640,
      375,  375,  240, 1347, 1270, 1270, 1270,  327,  187, 1081,
      927,  193,  375,  375,  375,  375,  187,  915,  665,  375,
      382,  375,  383,  375,  375,  384,  375,  375,  375,  383,
      375,  383,  383,  383,  383,  383,  383,  375,  375,  375,
      375,  383,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  878,  878,  878,

      878,  878,  878,  878,  878,  878,  878,  878,  375,  879,
      375,  375,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  878,  375,  375,  375,  383,  375, 1753, 1753, 1753,
      375,  382,  375,  327,  375,  375,  384,  375,  375,  375,
      184,  375,  185,  185,  186, 1306, 1306,  880,  375,  375,
      375,  375, 1311, 1311, 1074,  187, 1507,  308,  404,  981,
      981,  981,  310,  187, 1753, 1753, 1753, 1574,  920,  913,
     1158,  817,  817,  240, 1753, 1753, 1753,  193,  240,  375,
      386,  375,  375, 1311, 1311, 1753, 1753, 1753,  913, 1158,
      920, 1363,  187,  375,  375,  375,  308, 1574,  309,  240,

      187,  310,  187,  923,  982,  309,  312,  309,  309,  309,
      187, 1592,  309,  187, 1753, 1753, 1753,  309,  240,  921,
     1509,  187,  240,  982,  924, 1103, 1103, 1103, 1753, 1753,
     1753, 1256, 1256, 1256, 1753, 1753, 1753, 1446,  921, 1303,
     1303, 1257,  187, 1316, 1316,  881, 1122, 1122, 1122,  327,
      187, 1416, 1258, 1753, 1753, 1753,  187,  930, 1276, 1276,
     1276,  309,  669,  669,  187,  669,  669,  669,  669,  669,
      669,  669,  669,  669,  669,  669,  669,  669,  669,  932,
      669,  187, 1258,  669,  669,  669,  669,  669,  669,  187,
     1273, 1753, 1753, 1753,  925, 1236, 1236, 1237,  932,  770,

      770,  770, 1277, 1315, 1506, 1315,  240,  240, 1316, 1316,
     1316, 1316, 1291, 1291, 1291,  669,  925,  669,  669,  187,
     1466, 1466,  239, 1506, 1298, 1298, 1298,  187, 1238,  669,
      669,  669,  669,  671,  671,  888,  671,  671,  671,  671,
      671,  671,  671,  671,  671,  671,  671,  671,  671,  671,
      671,  671,  671,  671,  671,  671,  671,  671,  671,  671,
      240, 1467, 1467, 1753, 1753, 1753,  327, 1439, 1753, 1753,
     1753,  184,  240,  185,  185,  186,  327, 1753, 1753, 1753,
      327, 1753, 1753, 1753, 1441, 1089,  671,  671,  671,  671,
      327,  187, 1753, 1753, 1753, 1215,  187, 1439,  327,  187,

      671,  671,  671,  671,  187,  187,  931,  926,  193,  187,
     1753, 1753, 1753,  187, 1215, 1398,  929,  187,  240,  308,
      187, 1753, 1753, 1753,  310, 1753, 1753, 1753,  187,  240,
     1753, 1753, 1753, 1012, 1012, 1447,  240,  471,  187, 1753,
     1753, 1753,  937,  937,  937, 1398,  187,  327,  184,  187,
      185,  185,  186,  187,  932,  934,  471,  187,  187, 1308,
     1308,  187,  933, 1753, 1753, 1753,  187,  187,  312, 1084,
      187, 1421,  240,  935,  327,  187, 1449,  936,  187, 1753,
     1753, 1753, 1444, 1299,  933,  193,  327,  938, 1753, 1753,
     1753,  939, 1753, 1753, 1753, 1753, 1753, 1753, 1451,  187,

      327,  936, 1753, 1753, 1753, 1549,  938,  187,  327,  940,
     1452, 1753, 1753, 1753,  941,  187,  187, 1753, 1753, 1753,
      187, 1468, 1468,  187,  187, 1143, 1143, 1143,  187, 1549,
      187,  187, 1753, 1753, 1753, 1753, 1753, 1753,  187,  187,
      240,  942, 1753, 1753, 1753,  187, 1535,  187, 1753, 1753,
     1753,  240, 1144,  187, 1313, 1313,  327,  943, 1469, 1469,
      187, 1500,  944,  187,  945,  946, 1426,  240,  187,  240,
      187,  187,  947,  240, 1472, 1472,  187, 1367,  187, 1368,
     1368,  944, 1144,  240,  187,  728,  728, 1504,  728,  728,
      728,  728,  728,  728,  728,  728,  728,  728,  728,  728,

      728,  728,  728,  728,  240,  240,  728,  728,  728,  728,
      728,  728, 1238, 1242, 1242, 1242,  237,  237,  237, 1753,
     1753, 1753,  953,  953,  953, 1503,  237,  237,  237, 1753,
     1753, 1753,  184,  240,  238,  238,  186,  327,  728,  239,
      728,  728,  184, 1621,  238,  238,  186, 1239, 1239,  239,
      954,  240,  728,  728,  728,  728,  948,  187,  955,  961,
      961,  961,  240,  308,  187,  187,  949, 1240,  310,  246,
     1753, 1753, 1753, 1744, 1289, 1289, 1289,  813,  813,  246,
     1238, 1415, 1415,  187, 1257, 1415, 1415,  962, 1386, 1386,
     1386, 1240,  937,  937,  937,  963,  308, 1529,  187,  240,

      327,  310, 1744,  308,  964, 1010,  187, 1010,  310, 1551,
     1011, 1011,  312,  908,  908,  908,  308,  817,  817,  571,
      571,  310,  240,  964,  897,  290,  898,  996,  996,  308,
     1016, 1016,  327, 1551,  310, 1239, 1239, 1050,  293,  294,
     1499, 1024,  295,  821,  821,  312, 1753, 1753, 1753, 1025,
      240, 1538,  312,  327,  327, 1240, 1050, 1418, 1418,  571,
      571,  916,  916,  916, 1499,  312,  240,  293, 1238,  297,
      297,  308, 1369,  309, 1370, 1370,  310, 1158,  312, 1240,
      309,  240,  309,  309,  309,  571,  571,  569,  327, 1031,
     1100,  187,  309,  908,  908,  908, 1622, 1032, 1069, 1069,

     1069,  327, 1745,  908,  908,  908, 1033, 1238,  240, 1502,
      187, 1382, 1382, 1382, 1418, 1418, 1382, 1382, 1382,  240,
     1006, 1066, 1383, 1384, 1745, 1033, 1070, 1383, 1384, 1067,
     1269, 1066,  327, 1502, 1071, 1540,  309,  309,  309, 1067,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  809,  809,  809,  809,  809,  809,
      809,  809,  809,  809,  809,  809,  809,  809,  809,  809,
      809,  809,  809,  809,  809,  809,  809,  809,  809,  809,
      309,  309,  309,  309,  809,  809,  809,  809,  809,  809,

      809,  809,  809,  809,  309,  309,  309,  309,  308, 1597,
      309,  240,  184,  310,  185,  185,  186,  309,  327,  309,
      309,  309,  309,  309,  309, 1242, 1242, 1242, 1539,  309,
      184, 1672,  185,  185,  186, 1390, 1390, 1390,  184,  240,
      185,  185,  186, 1088, 1085, 1260, 1086, 1086, 1086,  193,
     1420, 1420, 1091, 1753, 1753, 1753,  184, 1008,  185,  185,
      186, 1753,  184,  308,  185,  185,  186,  193,  310, 1354,
     1420, 1420, 1088,  309,  308,  193,  309, 1011, 1011,  310,
     1090, 1423, 1423,  309, 1589, 1013,  317, 1014, 1015, 1015,
      309, 1087, 1530,  193,  327,  309, 1423, 1423, 1101,  193,

      320,  184,  240,  185,  185,  186, 1252, 1753, 1753, 1753,
     1087,  184,  312,  185,  185,  186, 1530, 1101, 1261, 1261,
     1261, 1425, 1425,  312, 1593, 1092,  309, 1753, 1753, 1753,
      322,  322,  184,  240,  185,  185,  186, 1232,  193,  309,
      308, 1122, 1122, 1122, 1230,  310, 1093,  184,  193,  185,
      185,  186,  187, 1501,  822,  822, 1425, 1425,  327, 1102,
     1428, 1428,  822,  822,  822,  822,  822,  822, 1594,  193,
     1094,  187,  187,  240,  240, 1533,  184,  327,  185,  185,
      186,  327, 1699, 1501,  193, 1217,  916,  916,  916,  312,
     1753,  187,  308,  822,  822,  822,  308,  310,  309, 1533,

     1095,  310, 1753, 1753, 1753,  309, 1699,  309,  309,  309,
      309,  309,  309,  193, 1070, 1229,  184,  309,  185,  185,
      186,  184, 1071,  185,  185,  186,  184, 1228,  185,  185,
      186, 1096, 1103, 1103, 1103, 1098, 1099, 1753, 1753, 1753,
     1097,  312, 1753, 1753, 1753, 1018, 1414, 1108, 1414, 1227,
     1096, 1415, 1415,  193, 1753, 1753, 1753, 1542,  193, 1104,
      327,  309,  308,  193,  309,  327, 1108,  310, 1616, 1105,
     1600,  309, 1107,  309,  823,  309,  886,  187,  309, 1270,
     1270, 1270,  187,  309,  953,  953,  953,  187,  240, 1104,
     1753, 1753, 1753, 1753, 1753, 1753,  187, 1617, 1109,  187,

      327,  187, 1753, 1753, 1753, 1226,  187,  239, 1276, 1276,
     1276,  825, 1066, 1428, 1428, 1112, 1112, 1112,  187,  327,
     1067, 1225,  937,  937,  937, 1528,  327,  309,  824,  824,
     1110,  824,  824, 1224,  824,  187,  824,  824,  187,  824,
      824,  824, 1113,  824, 1753, 1753, 1753, 1111, 1556, 1556,
      824,  824,  824,  824,  187, 1532,  240,  187, 1556, 1556,
      187, 1753, 1753, 1753, 1557, 1557, 1111, 1115,  327, 1486,
     1486, 1486, 1113, 1720, 1114, 1753, 1753, 1753, 1223,  187,
     1383,  824,  240,  824,  824, 1532, 1115, 1514, 1514,  187,
     1753, 1753, 1753,  327,  327,  824,  824,  824,  308, 1536,

      309, 1116, 1596,  310,  327,  240,  187,  309,  187,  309,
      823,  309,  826,  826,  326,  237,  237,  237, 1536,  309,
     1117, 1596, 1753, 1753, 1753,  187, 1753, 1753, 1753, 1753,
     1753, 1753, 1514, 1514, 1211,  187, 1516, 1516,  239, 1117,
     1118,  327, 1753, 1753, 1753, 1516, 1516,  828, 1518, 1518,
     1122, 1122, 1122, 1119,  187, 1753, 1753, 1753, 1614, 1120,
     1753, 1753, 1753,  309,  308, 1721,  309,  187,  327,  310,
      240,  187, 1121,  309,  187,  309,  823,  309,  826,  826,
      326, 1518, 1518, 1119,  327,  309,  187,  187, 1615,  327,
      187, 1618,  327,  187, 1123,  187, 1417, 1666, 1417, 1124,

      187, 1418, 1418,  327,  327,  187,  187, 1619, 1562, 1562,
     1256, 1256, 1256,  828,  187,  240, 1127, 1127, 1127,  187,
     1257, 1069, 1069, 1069,  187, 1242, 1242, 1242,  327,  309,
      826,  826, 1215,  826,  826,  826,  826,  826,  826,  826,
      826,  826,  826,  826,  826,  826,  826,  826,  826, 1070,
      327,  826,  826,  826,  826,  826,  826, 1071,  237,  237,
      237, 1128, 1196, 1599,  240,  327, 1112, 1112, 1112, 1329,
     1670,  237,  237,  237,  184,  667,  238,  238,  186,  667,
     1128,  239,  240,  826,  826,  826,  826,  184,  240,  238,
      238,  186, 1599, 1264,  239, 1125, 1195,  826,  826,  826,

      826,  308,  327,  309, 1567, 1567,  310,  961,  961,  961,
      309,  246,  309,  324,  309,  325,  325,  326,  327, 1126,
     1623, 1729,  309, 1264,  246, 1190, 1624, 1151, 1151, 1151,
      239,  327,  981,  981,  981, 1070,  327, 1019, 1635, 1635,
     1753, 1753, 1753, 1071,  168,  290, 1174,  996,  996, 1623,
      333, 1419, 1096, 1419, 1152,  239, 1420, 1420,  293,  294,
     1638, 1638,  295, 1242, 1242, 1242,  309,  308, 1422,  309,
     1422, 1096,  310, 1423, 1423,  240,  309, 1115,  309,  324,
      309,  325,  325,  326, 1152,  187, 1241,  293,  309,  297,
      297, 1160, 1160, 1160, 1174, 1687, 1115,  327, 1266, 1266,

     1266, 1174, 1620, 1020,  187,  240,  327, 1243,  187, 1486,
     1486, 1486, 1671, 1424,  239, 1424,  333,  240, 1425, 1425,
     1383, 1620,  240, 1427, 1687, 1427, 1359,  187, 1428, 1428,
     1640, 1640,  309,  375, 1360, 1273, 1671,  375,  382,  375,
      383,  375,  375,  384,  375,  375,  375,  383,  375,  383,
      383,  383, 1060, 1060,  642,  375,  375,  375,  375,  383,
     1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060,
     1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060,
     1060, 1060, 1060, 1060, 1060, 1060,  375, 1061,  375,  375,
     1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060,

      375,  375,  375,  383,  383,  309,  240,  309,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383,  383,  383,
      383,  878,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  383,  383,  383,
      383,  878,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  383,  383,  383,  383,  375, 1579, 1579, 1579,  375,
      382,  375,  383,  375,  375,  384,  375,  375,  375,  383,
      375,  383,  383,  383,  383,  383,  383,  375,  375,  375,

      375,  383, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,  375, 1063,
      375,  375, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062,  375,  375,  375,  383,  889,  889,  240,  889,
      889,  889,  889,  889,  889,  889,  889,  889,  889,  889,
      889,  889,  889,  889,  889, 1289, 1289, 1289,  889,  889,
      889,  889,  889, 1688, 1753, 1257,  308,  237,  237,  237,
      665,  310,  308,  327, 1405, 1405, 1405,  310,  239,  240,
     1180, 1180,  665,  820,  240,  820, 1009, 1009, 1106,  889,

      239,  889,  889, 1077, 1753,  665,  308,  665, 1086, 1086,
     1086,  310, 1073,  889,  889,  889,  889,  308, 1065,  309,
     1011, 1011,  310,  820, 1064,  312,  309,  327,  309,  309,
      309,  312,  240,  569, 1753,  665,  308, 1513,  309, 1513,
      327,  310, 1514, 1514, 1691, 1086, 1086, 1086,  327,  327,
     1016, 1016, 1181, 1187,  327,  312, 1753, 1753, 1753, 1249,
     1249, 1249,  571,  571,  327, 1182, 1006, 1753, 1753, 1753,
     1643, 1643, 1187, 1103, 1103, 1103, 1112, 1112, 1112, 1753,
     1753, 1753,  309, 1005, 1005,  312, 1005, 1005, 1690, 1005,
     1244, 1005, 1005, 1245, 1005, 1005, 1005,  327, 1005,  327,

     1202,  187,  327, 1209, 1250, 1005, 1005, 1005, 1005, 1244,
     1728,  327,  187,  327, 1703, 1703,  327, 1690, 1246,  327,
      187, 1562, 1562, 1250,  187,  327, 1753, 1753, 1753,  327,
     1202,  187,  327, 1209, 1567, 1567, 1005,  307, 1005, 1005,
     1069, 1069, 1069,  187, 1753, 1753, 1753, 1753, 1753, 1753,
     1005, 1005, 1005,  308, 1238,  309, 1705, 1705,  310, 1284,
     1284, 1284,  309, 1247,  309, 1175,  309, 1238,  917,  569,
      307,  187, 1742, 1004,  309, 1251,  918, 1069, 1069, 1069,
      237,  237,  237,  327, 1004,  187, 1004,  962, 1003,  187,
      187, 1515,  187, 1515, 1248,  963, 1516, 1516,  237,  237,

      237, 1742, 1177,  239,  187, 1031, 1003,  240,  187, 1003,
     1517,  187, 1517, 1032, 1002, 1518, 1518,  327,  309,  309,
      309,  239,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  309,  309, 1007, 1007, 1007, 1007,
     1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007,
     1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007,
     1007, 1007,  309,  309,  309,  309, 1007, 1007, 1007, 1007,
     1007, 1007, 1007, 1007, 1007, 1007,  309,  309,  309,  309,
      308, 1002,  309, 1635, 1635,  310, 1753, 1753, 1753,  309,

     1002,  309,  309,  309, 1179, 1179,  309, 1001, 1753, 1001,
      308,  309, 1753, 1753, 1753,  310, 1001, 1753, 1753, 1753,
      240, 1753, 1753, 1753, 1320, 1320, 1238,  240, 1753, 1753,
     1753, 1408, 1408, 1408, 1665, 1256, 1256, 1256,  240,  312,
      240,  187,  309,  240, 1255, 1257, 1753, 1753, 1753, 1253,
     1753, 1753, 1753,  240,  240,  309,  308,  187,  309,  312,
      187,  310,  187, 1665, 1669,  309,  187,  316,  317,  309,
     1015, 1015,  309,  187, 1255, 1740,  187,  309, 1254,  240,
      187,  187,  320,  240,  240,  187,  240, 1753, 1753, 1753,
      240,  187,  187, 1669,  240,  187, 1261, 1261, 1261,  187,

     1259, 1753, 1753, 1753, 1740,  312, 1638, 1638,  309,  240,
      187,  729,  322,  322,  187, 1640, 1640, 1753, 1753, 1753,
      928,  309,  308, 1470,  309, 1368, 1368,  310, 1295, 1295,
     1295,  309,  187,  309,  823,  309,  902, 1471,  309, 1238,
      892,  187,  665,  309, 1643, 1643,  187, 1262, 1238, 1469,
     1469,  187,  237,  237,  237,  665, 1296,  665, 1238,  159,
      187, 1558,  187,  159, 1297,  187, 1692, 1561,  327, 1561,
      158, 1184, 1562, 1562,  158,  239,  240, 1238, 1566,  887,
     1566,  187, 1238, 1567, 1567,  665,  885,  309,  309,  309,
     1692,  309,  309,  309,  309,  309,  309,  309,  309,  309,

      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  309, 1017, 1017, 1017, 1017, 1017,
     1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017,
     1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017,
     1017,  309,  309,  309,  309, 1017, 1017, 1017, 1017, 1017,
     1017, 1017, 1017, 1017, 1017,  309,  309,  309,  309, 1060,
     1219,  884, 1219, 1060, 1060, 1060, 1060, 1060, 1060, 1060,
     1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060,  307,  307,
     1060, 1060, 1060, 1060, 1060, 1060, 1559, 1559, 1266, 1266,
     1266,  729, 1242, 1242, 1242, 1284, 1284, 1284, 1560, 1634,

      659, 1634,  656,  655, 1635, 1635, 1568, 1568, 1568, 1645,
     1645, 1645, 1060, 1060, 1060, 1060, 1359,  159,  239, 1238,
     1661, 1661, 1661, 1070, 1360,  159, 1060, 1060, 1060, 1060,
      375, 1071,  327,  158,  375,  382,  375,  383,  375,  375,
      384,  375,  375,  375,  383,  375,  383, 1220,  383, 1221,
     1221,  642,  375,  375,  375,  375,  383, 1221, 1221, 1221,
     1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221,
     1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221,
     1221, 1221, 1221,  375, 1222,  375,  375, 1221, 1221, 1221,
     1221, 1221, 1221, 1221, 1221, 1221, 1221,  375,  375,  375,

      383,  383,  309,  158,  309,  383,  383,  383,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062,  383,  383,  383,  383, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,  383,  383,
      383,  383, 1075, 1075,  648, 1075, 1075, 1075, 1075, 1075,
     1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075,  647,
     1075,  237,  237,  237, 1075, 1075, 1075, 1075, 1075, 1637,

      646, 1637,  567,  567, 1638, 1638, 1646, 1646, 1646, 1295,
     1295, 1295,  638,  636,  239, 1753, 1753, 1753, 1651, 1651,
     1651,  635, 1386, 1386, 1386, 1075,  631, 1075, 1075, 1753,
     1753, 1753,  239, 1753, 1753, 1753,  627, 1359,  624, 1075,
     1075, 1075, 1075, 1082, 1082, 1360, 1082, 1082, 1082, 1082,
     1082, 1082, 1082, 1082, 1082, 1082, 1082, 1082, 1082, 1082,
      187, 1082,  327, 1263, 1082, 1082, 1082, 1082, 1082, 1082,
     1270, 1270, 1270,  623,  187, 1753, 1753, 1753,  187,  187,
     1266, 1266, 1266, 1265, 1753, 1753, 1753,  618,  610, 1263,
     1753, 1753, 1753,  187,  609,  608, 1082,  187, 1082, 1082,

     1753, 1753, 1753,  607, 1753, 1753, 1753,  606, 1267,  605,
     1082, 1082, 1082, 1082,  604,  187, 1268, 1753, 1753, 1753,
      187, 1753, 1753, 1753,  601,  187,  599, 1272,  596,  187,
      593,  591, 1271,  590,  187,  187, 1143, 1143, 1143,  187,
      567, 1282, 1282, 1282,  187,  187, 1703, 1703,  187,  187,
     1127, 1127, 1127,  567,  187, 1151, 1151, 1151, 1753,  239,
      308,  536, 1274, 1258,  187,  310,  187,  534,  187,  533,
     1753,  529,  308,  239, 1321, 1321,  525,  310,  239, 1238,
      522, 1274, 1264, 1432,  521,  187, 1283,  516,  507,  240,
     1753,  506,  308, 1258,  505, 1244,  504,  310,  503, 1249,

     1249, 1249, 1242, 1242, 1242, 1283, 1322, 1322, 1473,  312,
     1370, 1370, 1264,  502, 1244,  308, 1753,  309,  308,  501,
      310,  312, 1474,  310,  309,  498,  309,  309,  309,  309,
      309,  309, 1323, 1323, 1324,  496,  309,  493, 1753,  327,
      308,  312,  490, 1238, 1334,  310,  488,  187, 1266, 1266,
     1266, 1390, 1390, 1390, 1326, 1326,  487,  175, 1753, 1753,
     1753,  418,  398, 1334, 1319, 1325,  187,  312, 1753, 1753,
     1753, 1753, 1753, 1753, 1327,  397, 1343, 1568, 1568, 1568,
      309,  308,  396,  309, 1344,  393,  310, 1325,  327,  312,
      309,  327,  309, 1175,  309, 1373, 1371,  569, 1327, 1753,

     1753, 1753,  309,  187, 1753, 1753, 1753,  359,  327, 1249,
     1249, 1249,  272,  187,  240,  236,  187, 1587, 1587, 1587,
     1371, 1626,  187,  235,  183, 1373, 1595, 1595, 1595,  167,
     1177,  164,  187,  162, 1753,  187, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753,  187, 1374,  309, 1176, 1176,  187,
     1176, 1176, 1375, 1176, 1376, 1176, 1176, 1753, 1176, 1176,
     1176, 1588, 1176,  187, 1753,  240, 1377, 1753,  187, 1176,
     1176, 1176, 1176, 1376,  240, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1120, 1753, 1753,  187, 1753, 1753, 1753, 1386,
     1386, 1386, 1390, 1390, 1390, 1753, 1753, 1753, 1753, 1753,

     1176, 1120, 1176, 1176,  187, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1176, 1176, 1176,  308, 1753,  309,
      187, 1379,  310, 1381,  187, 1387,  309, 1380,  309,  823,
      309,  187, 1753,  309,  187, 1388, 1753,  187,  309,  187,
     1392, 1753,  187,  187, 1753, 1753, 1753, 1753, 1472, 1472,
      187, 1753,  187,  187, 1753,  187,  187, 1753, 1753, 1753,
     1563,  187, 1753, 1579, 1579, 1579, 1184, 1753, 1753, 1753,
     1753,  187, 1753, 1753,  187,  308, 1487, 1487, 1487, 1753,
      310, 1238,  309, 1183, 1183, 1391, 1183, 1183, 1433, 1183,
      187, 1183, 1183, 1753, 1183, 1183, 1183, 1393, 1183, 1753,

     1753, 1753,  187,  327, 1753, 1183, 1183, 1183, 1183,  187,
     1564, 1564,  187, 1753, 1282, 1282, 1282, 1396, 1753, 1488,
     1753,  187, 1565, 1753,  312, 1753, 1753,  308, 1753, 1394,
      308,  187,  310, 1753, 1753,  310, 1183,  239, 1183, 1183,
     1753, 1431, 1431, 1238,  187, 1753, 1453, 1753, 1753, 1753,
     1183, 1183, 1183,  308, 1753,  309,  308, 1753,  310, 1376,
     1753,  310,  309,  187,  309,  309,  309, 1753, 1753, 1348,
     1323, 1323, 1324, 1753,  309, 1753,  312, 1753, 1376,  312,
     1753, 1559, 1559, 1639, 1753, 1639, 1475, 1753, 1640, 1640,
     1753, 1753,  187, 1636, 1642, 1753, 1642, 1753, 1753, 1643,

     1643, 1753, 1349, 1325, 1702,  312, 1702, 1753, 1753, 1703,
     1703,  187, 1753, 1753, 1238, 1704, 1753, 1704,  309,  375,
     1705, 1705, 1753,  375,  382,  375,  383,  375,  375,  384,
      375,  375,  375,  383,  375,  383,  383,  383,  383,  383,
      383,  375,  375,  375,  375,  383, 1350, 1350, 1350, 1350,
     1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350,
     1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350,
     1350, 1350,  375, 1351,  375,  375, 1350, 1350, 1350, 1350,
     1350, 1350, 1350, 1350, 1350, 1350,  375,  375,  375,  383,
     1221, 1352, 1753, 1352, 1221, 1221, 1221, 1221, 1221, 1221,

     1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1564,
     1564, 1221, 1221, 1221, 1221, 1221, 1221, 1753, 1753, 1753,
      308, 1641, 1568, 1568, 1568,  310, 1753, 1753, 1753, 1658,
     1658, 1658, 1434, 1753, 1435, 1435, 1753, 1753, 1753, 1753,
     1753, 1753, 1238, 1221, 1221, 1221, 1221, 1753, 1753, 1753,
      308, 1753, 1753, 1753, 1753,  310, 1485, 1221, 1221, 1221,
     1221,  308,  327,  309, 1326, 1326,  310, 1325, 1753,  312,
      309,  187,  309, 1175,  309, 1477, 1753,  569,  237,  237,
      237, 1753,  309,  187, 1327, 1753, 1505, 1505, 1505, 1478,
      187,  237,  237,  237, 1753, 1753,  187, 1325, 1753,  312,

     1753,  239,  187, 1753, 1753, 1753, 1753,  308, 1327,  239,
     1430, 1753,  310, 1478,  239,  187, 1487, 1487, 1487, 1436,
     1753, 1437, 1437, 1753, 1753, 1753,  309,  309,  309, 1488,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309, 1325, 1753,  312, 1753, 1753, 1488,
     1709, 1709, 1709, 1479, 1587, 1587, 1587, 1753,  187, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1662, 1662, 1662,
      309,  309,  309,  309, 1753, 1753, 1753,  187, 1753, 1753,
     1753, 1753, 1753, 1753,  309,  309,  309,  309, 1219, 1219,

     1481, 1219, 1219, 1753, 1219, 1753, 1219, 1219, 1483, 1219,
     1219, 1219,  240, 1219, 1753,  187, 1753, 1490,  187, 1753,
     1219, 1219, 1219, 1219, 1484,  240, 1505, 1505, 1505,  187,
     1481, 1753, 1483, 1489,  187, 1753,  187,  187,  237,  237,
      237,  237,  237,  237, 1706, 1706, 1706, 1753,  187,  239,
     1753, 1219, 1489, 1219, 1219,  187, 1710, 1710, 1710, 1753,
     1753,  239, 1753, 1753,  239, 1219, 1219, 1219,  375, 1488,
     1753, 1753,  375,  382,  375,  383,  375,  375,  384,  375,
      375,  375,  383,  375,  383, 1220,  383, 1454, 1454,  642,
      375,  375,  375,  375,  383, 1454, 1454, 1454, 1454, 1454,

     1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454,
     1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454,
     1454,  375, 1455,  375,  375, 1454, 1454, 1454, 1454, 1454,
     1454, 1454, 1454, 1454, 1454,  375,  375,  375,  383,  383,
      309, 1753,  309,  383,  383,  383, 1753,  383,  383,  383,
      383,  383,  383, 1753,  383, 1753, 1753, 1753, 1735, 1735,
     1735,  383,  383,  383,  383, 1753, 1753, 1753, 1705, 1705,
     1753, 1753, 1753, 1646, 1646, 1646,  237,  237,  237, 1753,
     1753, 1753, 1568, 1568, 1568, 1753, 1753, 1753, 1753, 1675,
     1675, 1675,  383,  383,  383,  383, 1753, 1753, 1753,  239,

      187, 1238, 1491, 1753, 1753, 1492,  383,  383,  383,  308,
      187,  309, 1753, 1493,  310,  187, 1571, 1695,  309,  187,
      309, 1456,  309, 1494,  187, 1348, 1569,  187, 1753,  187,
      309,  187, 1753, 1496,  187, 1753, 1753,  240, 1752, 1752,
     1752,  187, 1753,  187, 1753, 1753,  187,  308, 1753, 1753,
      187, 1753,  310, 1753, 1645, 1645, 1645, 1753, 1457, 1753,
      187, 1519, 1519, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1746, 1746, 1746,  309, 1362, 1362, 1753, 1362, 1362,
     1362, 1362, 1362, 1362, 1362, 1362, 1362, 1362, 1362, 1362,
     1362, 1362, 1753, 1362,  327, 1753,  312, 1362, 1362, 1362,

     1362, 1362, 1753, 1753,  308, 1753, 1573,  308,  187,  310,
     1753, 1578,  310,  187, 1753, 1753, 1753, 1753, 1520, 1520,
     1753, 1521, 1521, 1753, 1753, 1753, 1753,  187, 1362, 1753,
     1362, 1362,  187, 1753, 1753,  308, 1753, 1753, 1753, 1753,
      310, 1753, 1362, 1362, 1362, 1362,  308, 1753,  309, 1522,
     1522,  310, 1753,  312, 1572,  309,  312,  309, 1175,  309,
      187, 1575,  569, 1661, 1661, 1661, 1753,  309, 1753,  187,
     1568, 1568, 1568, 1753, 1753, 1577,  237,  237,  237,  187,
     1753,  187,  308, 1753,  312, 1753, 1753,  310,  187, 1753,
     1753, 1663, 1663, 1663, 1523, 1430, 1435, 1435, 1753,  239,

      187, 1753, 1753,  327, 1753, 1579, 1579, 1579, 1524, 1753,
      327,  309, 1429, 1429, 1613, 1429, 1429, 1753, 1429, 1753,
     1429, 1429, 1753, 1429, 1429, 1429, 1753, 1429,  308, 1325,
     1753,  312, 1753,  310, 1429, 1429, 1429, 1429, 1753,  240,
      308, 1753, 1525, 1525, 1753,  310, 1753, 1753, 1753, 1753,
      187, 1753, 1526, 1753, 1437, 1437, 1646, 1646, 1646,  237,
      237,  237, 1753, 1753, 1753, 1429, 1527, 1429, 1429,  187,
     1753, 1753, 1753, 1753, 1753, 1753, 1753,  312, 1753, 1429,
     1429, 1429,  239, 1753, 1753, 1753, 1753, 1325, 1753,  312,
      308,  187,  309, 1753, 1753,  310,  327, 1753, 1753,  309,

     1686,  309,  309,  309,  309,  309,  309, 1581, 1753, 1753,
      187,  309, 1584, 1753, 1753,  187, 1582, 1753,  187, 1753,
     1753, 1583,  407,  407,  407, 1753, 1581, 1753,  187, 1753,
     1753, 1753, 1753, 1753,  187, 1753, 1753,  187,  308, 1544,
     1753, 1584, 1753,  310, 1568, 1568, 1568,  187, 1717, 1717,
     1717, 1753, 1601, 1601, 1753,  309, 1454, 1545, 1753, 1545,
     1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454,
     1454, 1454, 1454, 1454, 1454,  187, 1753, 1454, 1454, 1454,
     1454, 1454, 1454, 1753, 1753, 1753, 1753,  312,  308,  187,
     1645, 1645, 1645,  310,  187, 1753,  240, 1753, 1753, 1753,

      308, 1753, 1601, 1601, 1753,  310, 1753, 1753,  187, 1454,
     1454, 1454, 1454, 1586, 1602, 1602, 1753, 1753, 1753, 1753,
     1651, 1651, 1651, 1454, 1454, 1454, 1454,  308,  187,  309,
     1753, 1753,  310, 1753, 1753,  187,  309,  312,  309,  309,
      309,  309,  309,  309,  665, 1753,  308,  187,  309,  312,
     1753,  310, 1753, 1753,  187, 1656, 1753,  820, 1753,  820,
      308, 1753,  187,  308, 1697,  310, 1753, 1753,  310, 1646,
     1646, 1646, 1753, 1753, 1522, 1522, 1547, 1604, 1604, 1656,
     1753,  187, 1753, 1663, 1663, 1663, 1603,  820, 1753, 1605,
     1753, 1753,  309, 1352, 1352,  312, 1352, 1352, 1753, 1352,

     1753, 1352, 1352, 1753, 1352, 1352, 1352, 1325, 1352,  312,
     1325, 1753,  312, 1647,  187, 1352, 1352, 1352, 1352, 1753,
     1753,  308, 1753, 1753,  308, 1753,  310, 1664, 1753,  310,
     1606,  240, 1606,  187, 1753, 1607, 1607, 1753, 1525, 1525,
     1753, 1753,  308, 1651, 1651, 1651, 1352,  310, 1352, 1352,
     1608, 1753, 1753, 1753, 1753, 1753, 1609, 1609, 1753, 1753,
     1352, 1352, 1352, 1753, 1753, 1753, 1753,  308, 1610, 1753,
      312, 1325,  310,  312, 1753, 1753, 1611, 1753, 1611, 1753,
     1648, 1612, 1612, 1753, 1667, 1667, 1667, 1652,  187, 1325,
     1753,  312, 1753, 1753, 1753, 1753,  187, 1753, 1753, 1753,

     1753, 1753, 1753, 1753, 1753, 1753, 1753,  187, 1753, 1648,
     1658, 1658, 1658, 1753, 1753,  187,  312,  308, 1753,  309,
     1753, 1653,  310, 1651, 1651, 1651,  309, 1650,  309, 1456,
      309, 1655,  240, 1348,  237,  237,  237,  187,  309,  237,
      237,  237,  187, 1753, 1657, 1753,  187, 1753, 1753,  187,
     1653,  537,  537,  537, 1659,  187,  187,  239,  237,  237,
      237,  187,  239,  327, 1753,  187, 1457, 1689,  187, 1661,
     1661, 1661, 1753, 1753,  187, 1667, 1667, 1667, 1673, 1673,
     1673,  239,  309,  309,  309, 1753,  309,  309,  309,  309,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,

      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
     1753, 1658, 1658, 1658,  187, 1753, 1646, 1646, 1646, 1668,
     1753, 1753, 1674,  240, 1753, 1753,  240, 1753,  665, 1753,
      308, 1753, 1753,  187, 1753,  310,  309,  309,  309,  309,
     1753,  820, 1753,  820, 1753, 1753, 1673, 1673, 1673, 1753,
      309,  309,  309,  309,  308, 1701,  309, 1753, 1753,  310,
     1753,  187, 1753,  309, 1753,  309, 1456,  309, 1753, 1753,
     1348,  820, 1753, 1753, 1753,  309, 1753, 1753,  308,  312,
      187, 1753, 1753,  310, 1753, 1753,  308, 1676, 1753, 1676,
      308,  310, 1677, 1677,  240,  310, 1753, 1709, 1709, 1709,

     1607, 1607, 1753, 1625, 1604, 1604, 1753, 1753, 1753,  308,
     1658, 1658, 1658, 1753,  310, 1753, 1678, 1753, 1753,  309,
      308, 1753,  309, 1607, 1607,  310, 1753,  312, 1753,  309,
     1753,  309, 1456,  309, 1753,  312, 1348, 1325, 1753,  312,
     1753,  309,  187, 1753, 1646, 1646, 1646, 1753, 1753, 1753,
      327, 1753, 1753, 1753, 1694, 1753, 1325, 1753,  312, 1753,
     1753,  187, 1753, 1753, 1753,  308, 1753, 1753,  308, 1625,
      310, 1753, 1753,  310, 1679, 1753, 1679, 1753, 1753, 1680,
     1680, 1753, 1612, 1612,  327,  309,  309,  309, 1753,  309,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,

      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309, 1753,  312,  308, 1753,  312,  308, 1753,
      310, 1753, 1753,  310, 1681, 1753, 1681, 1753, 1753, 1682,
     1682, 1753, 1609, 1609, 1753, 1706, 1706, 1706, 1753,  309,
      309,  309,  309, 1753, 1683, 1651, 1651, 1651, 1710, 1710,
     1710, 1753, 1753,  309,  309,  309,  309, 1753, 1753, 1753,
     1753,  308, 1753, 1753,  312, 1325,  310,  312, 1753, 1753,
     1684, 1753, 1684,  308, 1753, 1685, 1685, 1753,  310, 1707,
      187, 1706, 1706, 1706, 1706, 1706, 1706, 1612, 1612, 1753,
      187, 1753, 1711,  187, 1753, 1753, 1753, 1753, 1753,  187,

     1753, 1709, 1709, 1709, 1753, 1753, 1753, 1753, 1753,  187,
      312, 1753,  187, 1753, 1753, 1753, 1658, 1658, 1658, 1753,
     1325,  327,  312, 1545, 1545, 1726, 1545, 1545, 1730, 1545,
     1753, 1545, 1545, 1753, 1545, 1545, 1545, 1753, 1545, 1120,
      187,  327, 1753, 1713, 1753, 1545, 1545, 1545, 1545,  187,
     1715, 1715, 1715, 1718, 1718, 1718, 1714, 1753,  187,  187,
     1753,  187, 1715, 1715, 1715, 1753, 1753,  308,  187, 1753,
     1753, 1753,  310, 1651, 1651, 1651, 1545,  187, 1545, 1545,
      187, 1677, 1677, 1753, 1753, 1753, 1753, 1753,  308, 1753,
     1545, 1545, 1545,  310, 1716, 1753, 1753, 1719,  240, 1753,

     1753,  240, 1677, 1677, 1753, 1753,  308, 1753, 1753,  308,
      240,  310, 1753,  327,  310, 1722,  312, 1722, 1753, 1753,
     1723, 1723, 1753, 1680, 1680, 1753, 1753,  308, 1753, 1753,
     1753,  308,  310, 1753, 1753, 1325,  310,  312, 1658, 1658,
     1658, 1680, 1680, 1753, 1753, 1682, 1682, 1753, 1753,  308,
     1753, 1710, 1710, 1710,  310,  312, 1753, 1753,  312, 1753,
     1706, 1706, 1706, 1682, 1682, 1753, 1753, 1753,  308, 1710,
     1710, 1710, 1753,  310, 1325, 1753,  312, 1724,  327, 1724,
      312, 1753, 1725, 1725, 1753, 1753,  308, 1753, 1753,  308,
     1753,  310, 1753, 1753,  310, 1731, 1325, 1753,  312, 1753,

     1685, 1685, 1753, 1685, 1685,  187, 1710, 1710, 1710,  327,
     1735, 1735, 1735, 1727, 1753, 1753, 1753,  312, 1718, 1718,
     1718, 1738, 1738, 1738,  187, 1753, 1753,  308, 1706, 1706,
     1706, 1753,  310, 1753, 1753,  312, 1325, 1753,  312, 1753,
     1753, 1723, 1723, 1737, 1753, 1753, 1753,  308, 1753, 1753,
     1753,  187,  310, 1753, 1736,  187, 1735, 1735, 1735,  187,
     1753, 1723, 1723, 1753, 1753, 1739,  240, 1753,  327,  240,
      187, 1753, 1737, 1753,  187,  308,  312, 1753,  187, 1753,
      310, 1753, 1753,  308, 1753, 1710, 1710, 1710,  310, 1725,
     1725, 1735, 1735, 1735, 1325, 1753,  312, 1725, 1725, 1753,

     1743, 1735, 1735, 1735, 1746, 1746, 1746, 1738, 1738, 1738,
     1748, 1748, 1748, 1735, 1735, 1735, 1746, 1746, 1746, 1746,
     1746, 1746, 1753, 1753,  312,  327, 1746, 1746, 1746, 1753,
     1325,  327,  312, 1753, 1753, 1741, 1748, 1748, 1748, 1746,
     1746, 1746, 1753, 1753, 1753, 1753,  187, 1753, 1747,  187,
     1753, 1753, 1753,  327, 1749,  240,  327, 1753,  240, 1753,
     1750, 1753, 1753, 1751, 1753,  187, 1753, 1753,  187, 1753,
     1753,  187, 1753, 1753, 1753, 1753, 1753, 1753, 1753,  327,
     1753, 1753, 1753, 1753,  240, 1753, 1753, 1753, 1753, 1753,
      187,  157,  157,  157,  157,  157,  157,  157,  157,  157,

      157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
      157,  160,  160, 1753,  160,  160,  160,  160,  160,  160,
      160,  160,  160,  160,  160,  160,  160,  160,  160,  160,
      160,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  171,  171, 1753,  171, 1753, 1753, 1753,  171,  171,
      171,  187, 1753,  187,  187, 1753, 1753,  187,  187,  187,
      187,  187,  234,  234,  234, 1753,  234,  240,  240,  240,
     1753, 1753, 1753, 1753, 1753,  240, 1753,  240,  240,  240,
     1753,  240,  240,  240,  240,  240,  287,  287,  287, 1753,

      287,  292,  292, 1753,  292, 1753, 1753, 1753,  292,  292,
      292,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  309,  309, 1753,  309,  309,  309,  309,  309,  309,
     1753,  309,  309,  309,  309,  309,  309,  313,  313,  313,
      313,  313,  313,  313,  313,  313,  313,  313,  313,  313,
      313,  313,  313,  313,  313,  313,  313,  319,  319, 1753,
      319,  319,  319,  319,  319,  319, 1753,  319,  319,  319,
      319,  319,  319,  327,  327, 1753,  327,  327,  327,  327,
      327,  327, 1753,  327,  327,  327,  327,  327,  327,  375,

     1753, 1753, 1753,  375,  375,  375,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375,  375,  375,  375,  377,
      377, 1753,  377,  377,  377,  377,  377,  377,  377,  377,
      377,  377,  377,  377,  377,  377,  377,  377,  377,  380,
      380, 1753,  380,  380,  380,  380,  380,  380,  380,  380,
      380,  380,  380,  380,  380,  380,  380,  380,  380,  383,
     1753, 1753, 1753,  383,  383,  383,  383,  383,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383,  383,  387,
      387, 1753,  387,  387,  387,  387,  387,  387,  387,  387,
      387,  387,  387,  387,  387,  387,  387,  387,  387,  157,

      157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
      157,  157,  157,  157,  157,  157,  157,  157,  157,  160,
      160, 1753,  160,  160,  160,  160,  160,  160,  160,  160,
      160,  160,  160,  160,  160,  160,  160,  160,  160,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  171,
      171, 1753,  171, 1753, 1753, 1753,  171,  171,  171,  417,
      417,  417,  417,  417,  424, 1753, 1753,  424,  424,  424,
      424,  424,  240,  240,  240, 1753, 1753, 1753, 1753, 1753,
      240, 1753,  240,  240,  240, 1753,  240,  240,  240,  240,

      240,  481,  481,  481, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753,  481,  481,  481,  481,  481,
      537, 1753, 1753, 1753,  537,  537,  537,  292,  292, 1753,
      292, 1753, 1753, 1753,  292,  292,  292,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  564,  564, 1753,
      564,  564,  564,  564,  564,  564, 1753,  564,  564,  564,
      564,  564,  564,  378,  378, 1753,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  309,  309, 1753,  309,  309,  309,  309,

      309,  309, 1753,  309,  309,  309,  309,  309,  309,  388,
      388, 1753,  388,  388,  388,  388,  388,  388,  388,  388,
      388,  388,  388,  388,  388,  388,  388,  388,  388,  313,
      313,  313,  313,  313,  313,  313,  313,  313,  313,  313,
      313,  313,  313,  313,  313,  313,  313,  313,  313,  572,
      572, 1753,  572,  572,  572,  572,  572,  572, 1753,  572,
      572,  572,  572,  572,  572,  319,  319, 1753,  319,  319,
      319,  319,  319,  319, 1753,  319,  319,  319,  319,  319,
      319,  582,  582, 1753,  582,  582,  582,  582,  582,  582,
     1753,  582,  582,  582,  582,  582,  582,  584,  584, 1753,

      584,  584,  584,  584,  584,  584, 1753,  584,  584,  584,
      584,  584,  584,  327,  327, 1753,  327,  327,  327,  327,
      327,  327, 1753,  327,  327,  327,  327,  327,  327,  375,
     1753, 1753, 1753,  375,  375,  375,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375,  375,  375,  375,  377,
      377, 1753,  377,  377,  377,  377,  377,  377,  377,  377,
      377,  377,  377,  377,  377,  377,  377,  377,  377,  639,
     1753, 1753, 1753,  639,  639,  639,  639,  639,  639,  639,
      639,  639,  639,  639,  639,  639,  639,  639,  639,  380,
      380, 1753,  380,  380,  380,  380,  380,  380,  380,  380,

      380,  380,  380,  380,  380,  380,  380,  380,  380,  381,
      381, 1753,  381,  381,  381,  381,  381,  381,  381,  381,
      381,  381,  381,  381,  381,  381,  381,  381,  381,  383,
     1753, 1753, 1753,  383,  383,  383,  383,  383,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383,  383,  387,
      387, 1753,  387,  387,  387,  387,  387,  387,  387,  387,
      387,  387,  387,  387,  387,  387,  387,  387,  387,  650,
      650,  650,  650, 1753,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  651,
      651,  651,  651,  651,  651,  651, 1753,  651,  651,  651,

      651,  651,  651,  651,  651,  651,  651,  651,  651,  652,
      652, 1753,  652,  652,  652,  652,  652,  652,  652,  652,
      652,  652,  652,  652,  652,  652,  652,  652,  652,  653,
      653, 1753,  653,  653,  653,  653,  653,  653,  653,  653,
      653,  653,  653,  653,  653,  653,  653,  653,  653,  654,
      654,  654,  654,  654,  407, 1753, 1753, 1753, 1753, 1753,
     1753,  407,  407,  407,  171,  171, 1753,  171, 1753, 1753,
     1753,  171,  171,  171,  667, 1753, 1753, 1753, 1753,  667,
     1753,  667,  667, 1753, 1753, 1753,  667, 1753,  667,  669,
     1753,  669, 1753, 1753, 1753,  669,  669,  669,  669,  669,

      417,  417,  417, 1753,  417,  672, 1753,  672,  672, 1753,
     1753,  672,  672,  672,  672,  672,  424,  424,  424, 1753,
      424,  187,  187,  187, 1753, 1753, 1753, 1753, 1753,  187,
     1753,  187,  187, 1753, 1753,  187,  187,  187,  187,  187,
      481,  481,  481, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753,  481,  481,  481,  481,  481,  728,
     1753, 1753, 1753,  728,  728,  728,  728,  728,  240,  240,
      240, 1753, 1753, 1753, 1753, 1753,  240, 1753,  240,  240,
      240, 1753,  240,  240,  240,  240,  240,  292,  292, 1753,
      292, 1753, 1753, 1753,  292,  292,  292,  795,  795,  795,

      795,  795,  795, 1753,  795,  795,  795,  795,  795,  795,
      795,  795,  795,  795,  795,  795,  795,  796,  796,  796,
      796,  796,  796,  796,  796,  796,  796, 1753,  796,  796,
      796,  796,  796,  796,  796,  796,  796,  797,  797,  797,
      797,  797,  797,  797,  797,  797,  797,  797,  797,  797,
      797, 1753,  797,  797,  797,  797,  797,  798,  798,  798,
      798,  798,  798, 1753,  798,  798,  798,  798,  798,  798,
      798,  798,  798,  798,  798,  798,  798,  799,  799,  799,
      799,  799,  799,  799,  799,  799,  799, 1753,  799,  799,
      799,  799,  799,  799,  799,  799,  799,  800,  800,  800,

      800,  800,  800,  800,  800,  800,  800,  800,  800,  800,
      800, 1753,  800,  800,  800,  800,  800,  801,  801,  801,
      801,  801,  801, 1753,  801,  801,  801,  801,  801,  801,
      801,  801,  801,  801,  801,  801,  801,  802,  802,  802,
      802,  802,  802,  802,  802,  802,  802, 1753,  802,  802,
      802,  802,  802,  802,  802,  802,  802,  803,  803,  803,
      803,  803,  803,  803,  803,  803,  803,  803,  803,  803,
      803, 1753,  803,  803,  803,  803,  803,  804,  804,  804,
      804,  804,  804, 1753,  804,  804,  804,  804,  804,  804,
      804,  804,  804,  804,  804,  804,  804,  805,  805,  805,

      805,  805,  805,  805,  805,  805,  805, 1753,  805,  805,
      805,  805,  805,  805,  805,  805,  805,  806,  806,  806,
      806,  806,  806,  806,  806,  806,  806,  806,  806,  806,
      806, 1753,  806,  806,  806,  806,  806,  807,  807, 1753,
      807,  807,  807,  807,  807,  807,  807,  807,  807,  807,
      807,  807,  807,  807,  807,  807,  807,  564,  564, 1753,
      564,  564,  564,  564,  564,  564, 1753,  564,  564,  564,
      564,  564,  564,  808,  808, 1753,  808,  808,  808,  808,
      808,  808,  808,  808,  808,  808,  808,  808,  808,  808,
      808,  808,  808,  809,  809, 1753,  809,  809,  809,  809,

      809,  809, 1753,  809,  809,  809,  809,  809,  809,  309,
      309, 1753,  309,  309,  309,  309,  309,  309, 1753,  309,
      309,  309,  309,  309,  309,  572,  572, 1753,  572,  572,
      572,  572,  572,  572, 1753,  572,  572,  572,  572,  572,
      572,  319,  319, 1753,  319,  319,  319,  319,  319,  319,
     1753,  319,  319,  319,  319,  319,  319,  824,  824, 1753,
      824,  824,  824,  824,  824,  824, 1753,  824,  824,  824,
      824,  824,  824,  827,  827, 1753,  827,  827,  827,  827,
      827,  827, 1753,  827,  827,  827,  827,  827,  827,  327,
      327,  327,  327,  327, 1753,  327,  327,  327,  327,  327,

      327, 1753,  327,  327,  327,  327,  327,  327,  639, 1753,
     1753, 1753,  639,  639,  639,  639,  639,  639,  639,  639,
      639,  639,  639,  639,  639,  639,  639,  639,  383, 1753,
     1753, 1753,  383,  383,  383,  383,  383,  383,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383,  643,  643,
     1753,  643,  643,  643,  643,  643,  643, 1753,  643,  643,
      643,  643,  643,  643,  650,  650,  650,  650, 1753,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  651,  651,  651,  651,  651,  651,
      651, 1753,  651,  651,  651,  651,  651,  651,  651,  651,

      651,  651,  651,  651,  652,  652, 1753,  652,  652,  652,
      652,  652,  652,  652,  652,  652,  652,  652,  652,  652,
      652,  652,  652,  652,  653,  653, 1753,  653,  653,  653,
      653,  653,  653,  653,  653,  653,  653,  653,  653,  653,
      653,  653,  653,  653,  889,  889, 1753, 1753,  889,  889,
      889,  889,  889,  654,  654,  654, 1753,  654,  891,  891,
      891,  891,  891,  171,  171,  171,  171, 1753, 1753, 1753,
      171,  171,  171,  901,  901,  901,  901,  901,  669, 1753,
      669, 1753, 1753, 1753,  669,  669,  669,  669,  669,  672,
     1753,  672,  672, 1753, 1753,  672,  672,  672,  672,  672,

      187, 1753,  187,  187, 1753, 1753,  187,  187,  187,  187,
      187,  728, 1753, 1753, 1753,  728,  728,  728,  728,  728,
      240,  240,  240, 1753, 1753, 1753, 1753, 1753,  240, 1753,
      240,  240,  240, 1753,  240,  240,  240,  240,  240,  537,
     1753, 1753, 1753,  537,  537,  537,  292,  292,  292,  292,
     1753, 1753, 1753,  292,  292,  292,  795,  795,  795,  795,
      795,  795,  795,  795,  795,  795,  795,  795,  795,  795,
      795,  795,  795,  795,  795,  795,  796,  796,  796,  796,
      796,  796,  796,  796,  796,  796,  796,  796,  796,  796,
      796,  796,  796,  796,  796,  796,  797,  797,  797,  797,

      797,  797,  797,  797,  797,  797,  797,  797,  797,  797,
      797,  797,  797,  797,  797,  797,  798,  798,  798,  798,
      798,  798,  798,  798,  798,  798,  798,  798,  798,  798,
      798,  798,  798,  798,  798,  798,  799,  799,  799,  799,
      799,  799,  799,  799,  799,  799,  799,  799,  799,  799,
      799,  799,  799,  799,  799,  799,  800,  800,  800,  800,
      800,  800,  800,  800,  800,  800,  800,  800,  800,  800,
      800,  800,  800,  800,  800,  800,  801,  801,  801,  801,
      801,  801,  801,  801,  801,  801,  801,  801,  801,  801,
      801,  801,  801,  801,  801,  801,  802,  802,  802,  802,

      802,  802,  802,  802,  802,  802,  802,  802,  802,  802,
      802,  802,  802,  802,  802,  802,  803,  803,  803,  803,
      803,  803,  803,  803,  803,  803,  803,  803,  803,  803,
      803,  803,  803,  803,  803,  803,  804,  804,  804,  804,
      804,  804,  804,  804,  804,  804,  804,  804,  804,  804,
      804,  804,  804,  804,  804,  804,  805,  805,  805,  805,
      805,  805,  805,  805,  805,  805,  805,  805,  805,  805,
      805,  805,  805,  805,  805,  805,  806,  806,  806,  806,
      806,  806,  806,  806,  806,  806,  806,  806,  806,  806,
      806,  806,  806,  806,  806,  806,  807,  807, 1753,  807,

      807,  807,  807,  807,  807,  807,  807,  807,  807,  807,
      807,  807,  807,  807,  807,  807,  808,  808, 1753,  808,
      808,  808,  808,  808,  808,  808,  808,  808,  808,  808,
      808,  808,  808,  808,  808,  808, 1005, 1005, 1753, 1005,
     1005, 1005, 1005, 1005, 1005, 1753, 1005, 1005, 1005, 1005,
     1005, 1005, 1007, 1007, 1753, 1007, 1007, 1007, 1007, 1007,
     1007, 1753, 1007, 1007, 1007, 1007, 1007, 1007,  309,  309,
     1753,  309,  309,  309,  309,  309,  309, 1753,  309,  309,
      309,  309,  309,  309,  319,  319, 1753,  319,  319,  319,
      319,  319,  319, 1753,  319,  319,  319,  319,  319,  319,

     1017, 1017, 1753, 1017, 1017, 1017, 1017, 1017, 1017, 1753,
     1017, 1017, 1017, 1017, 1017, 1017,  824,  824, 1753,  824,
      824,  824,  824,  824,  824, 1753,  824,  824,  824,  824,
      824,  824,  827,  827, 1753,  827,  827,  827,  827,  827,
      827, 1753,  827,  827,  827,  827,  827,  827,  327,  327,
     1753,  327,  327,  327,  327,  327,  327, 1753,  327,  327,
      327,  327,  327,  327,  643,  643, 1753,  643,  643,  643,
      643,  643,  643,  643,  643,  643,  643,  643,  643,  643,
      643,  643,  643,  643,  889,  889, 1753, 1753,  889,  889,
      889,  889,  889, 1075, 1753, 1075, 1075, 1753, 1753, 1075,

     1075, 1075, 1075, 1075,  891,  891,  891, 1753,  891,  407,
     1753, 1753, 1753,  407,  407,  407,  171,  171, 1753,  171,
     1753, 1753, 1753,  171,  171,  171, 1082, 1753, 1082, 1753,
     1753, 1753, 1082, 1082, 1082, 1082, 1082,  901,  901,  901,
     1753,  901,  187, 1753,  187,  187, 1753, 1753,  187,  187,
      187,  187,  187,  240,  240,  240, 1753, 1753, 1753, 1753,
     1753,  240, 1753,  240,  240,  240, 1753,  240,  240,  240,
      240,  240,  537, 1753, 1753, 1753,  537,  537,  537,  292,
      292, 1753,  292, 1753, 1753, 1753,  292,  292,  292, 1005,
     1005, 1753, 1005, 1005, 1005, 1005, 1005, 1005, 1753, 1005,

     1005, 1005, 1005, 1005, 1005, 1176, 1176, 1753, 1176, 1176,
     1176, 1176, 1176, 1176, 1753, 1176, 1176, 1176, 1176, 1176,
     1176,  309,  309,  309, 1753,  309,  309,  309,  309,  309,
      309, 1753,  309,  309,  309,  309,  309,  309,  572,  572,
     1753,  572,  572,  572,  572,  572,  572, 1753,  572,  572,
      572,  572,  572,  572,  319,  319, 1753,  319,  319,  319,
      319,  319,  319, 1753,  319,  319,  319,  319,  319,  319,
     1183, 1183, 1753, 1183, 1183, 1183, 1183, 1183, 1183, 1753,
     1183, 1183, 1183, 1183, 1183, 1183, 1231, 1231, 1231, 1231,
     1231, 1318, 1318, 1753, 1318, 1318, 1318, 1318, 1318, 1318,

     1753, 1318, 1318, 1318, 1318, 1318, 1318, 1219, 1219, 1753,
     1219, 1219, 1219, 1219, 1219, 1219, 1753, 1219, 1219, 1219,
     1219, 1219, 1219, 1362, 1753, 1362, 1362, 1753, 1753, 1362,
     1362, 1362, 1362, 1362, 1429, 1429, 1753, 1429, 1429, 1429,
     1429, 1429, 1429, 1753, 1429, 1429, 1429, 1429, 1429, 1429,
     1352, 1352, 1753, 1352, 1352, 1352, 1352, 1352, 1352, 1753,
     1352, 1352, 1352, 1352, 1352, 1352, 1543, 1543, 1753, 1543,
     1543, 1543, 1543, 1543, 1543, 1753, 1543, 1543, 1543, 1543,
     1543, 1543, 1546, 1546, 1753, 1546, 1546, 1546, 1546, 1546,
     1546, 1753, 1546, 1546, 1546, 1546, 1546, 1546, 1545, 1545,

     1753, 1545, 1545, 1545, 1545, 1545, 1545, 1753, 1545, 1545,
     1545, 1545, 1545, 1545,   11, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753
    } ;

static yyconst flex_int16_t yy_chk[12087] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,

        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    5,   15,   16, 1712,    6,   16,   18,   18,
       76,   13,   13,   13,   76,    5,   21,    5,    5,    6,
       35,    6,    6,   35,   21,   28,   28,   32,   56,   32,
       32,   34,    5,   56,   34,   34,    6,   13,   73,   13,
       13,   56,   71,    5,    5,   56,   71,    6,    6,   15,
      103,   77,   78,  103,   13,   13,   71,   73,   77,   71,

       77,   56,   78,    5,   95,   95,   88,    6,    5,   13,
       88, 1700,    6,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    7,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,

        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,   14,   14,   14,  959,   26,
       26,   26,   30,   30,   82,   30,   30,  959,   38,   74,
       38,   38,   38,   74,   82,   31,   31,   30,   31,   31,
      150,   14,   38,   14,   14,   26,   74,   26,   26,  105,
       31,   39, 1699,   39,   39,   39,   30,  105,   14,   14,

       80,   39,   26,   26,   80,   38,   90,   30,   30,  150,
       52,   52,  241,   14,   94,   39,   90,   26,   39,   52,
       31,   31,   37,   52,   37,   37,   37, 1654,   39,   41,
       80,   41,   41,   41,   42,   37,   42,   42,   42,   52,
       75,  241,   75,   37,   42,   37,   75,  253,  121,   37,
       37,  118,  121,  123,   45,   75,   45,   45,   45,   37,
       94,   42,   41,  123,   37,   40,   41,   40,   40,   40,
      118,   42,   75,  253,   43,   45,   43,   45,   44,   40,
       43,  133,   44,   40,   43,  133,   44,   40,  158,   43,
       44,   45,   40,  158,   46,   44,   46,   46,   46,  163,

      127,   47,   40,   47,   47,   47,   43,  163,   43,   40,
      127,   40,   44,   48,   44,   85,   49,   48,   46,   85,
       49,   48,   85,   81,   49,  157,   48,   81,  157,   49,
       50,   46,   50,   50,   50,   85, 1135,   51,   47,   51,
       51,   51,  159,   48,   63,   48,   49,  159,   49,   63,
      278,   92,   51,   81,   50,   92, 1135,   63,   53,  135,
       51,   63,   53,   53,   51,   53,  119,   50,   92,  135,
      119,   53,  278,   54,   51,   53,   54,   63,   53,  122,
       51,   54,   54,  119,   55,   54,  122, 1649,  122,  125,
      277,   53,   55,  125,   55,   89,   55,   55,   89,   89,

       86,   54,   54,   57,   86,   57,   57,  181,  181,   58,
       86,   57,   55,   86,  277,   57,   55,   58,   58,  125,
       72,   58,  106,  152,   72,   89,   64,  106,   72,   64,
       86,   57,   57,   72,   64,   64,  152,   58,   64,  100,
       83,   83,  100,   70,   70,   70,  247,  100,  100,   83,
       72,  100,   72,   83,   64,   64,   69,   69,   69,   70,
      126,   70,   70,   70,  126,  247,   70,  100,  100,   83,
     1632,  106,   69,   70,   69,   69,   69,   87,  184,   69,
      141,  141,  141,  243,  107,   69,   87,  113,   87,  107,
      126,   87,  113,   69,   93,   69,   70,  763,   93,   69,

       69,  763,   97,   97,   93,   97,   97,   93,  109,   69,
       87,  184,  243,  109,   69, 1622,   97,   97,   98,  285,
       97,  109,   98,   98,   93,   96,   96,  104,   96,   96,
      130,   98,  104,  107,  130,   98,  113,  130,  285,   96,
       96,  104,  104,   96,  143,   97,  143,   97,   97,   99,
      130,   98,  101,   99,   99,  101,   99,  109,  276,   96,
      101,  101,   99,  142,  101,  142,   99,  142,   96,   99,
       96,   96,  102,  102,  102,  860,  104,  313,  108,  860,
      101,  101,   99,  108,  112,  313,  117,  116,  276,  112,
      117,  116,  108,  108,  117,  102, 1585,  128,  128,  117,

      112,  116,  112,  112,  116,  120,  128,  120,  137,  131,
      128,  120,  137,  131,  251,  145,  117,  145,  117,  131,
      120,  251,  131,  139,  145,  137,  128,  108,  139,  306,
      102,  102,  306,  112,  102,  102,  110,  120,  110,  131,
      363,  110,  139,  263,  132,  110,  242,  110,  110,  110,
      110,  110,  110,  132,  242,  132,  134,  110,  132,  134,
      134,  138,  110,  265,  161,  138,  161,  161,  161,  263,
      363,  138,  139,  242,  138,  171,  171,  132,  171,  171,
      271,  110,  178,  178,  178,  110,  134, 1580,  110,  265,
      281,  138,  110,  110,  166,  166,  169,  169,  149,  149,

      149,  110,  111,  338,  111,  328,  166,  111,  169,  271,
      338,  111, 1574,  111,  111,  111,  111,  111,  111,  281,
      165,  165,  165,  111,  149,  269,  149,  149,  111,  170,
      170,  268,  170,  170,  328,  249,  166,  166,  169,  169,
      249,  149,  149,  266,  170,  266,  165,  268,  165,  165,
      280,  111,  334,  269,  111,  736,  149,  249,  111,  111,
      268, 1570,  364,  165,  165,  736,  268,  111,  114,  266,
      114,  334,  417,  114,  170,  170,  280,  114,  165,  114,
      114,  114,  114,  114,  114,  172,  364,  172,  172,  114,
      172,  172,  185,  114,  174,  174,  365,  174,  174,  654,

      185,  114,  187,  114,  185,  669,  255,  114,  114,  417,
      187,  188,  255,  188,  187,  197,  197,  114,  365, 1554,
      185,  188,  114,  189,  197,  188, 1553,  282,  197,  189,
      187,  189,  654,  114,  115,  189,  115,  189,  255,  115,
      188,  188,  669,  115,  197,  115,  115,  115,  115,  115,
      115,  189,  190,  282,  190,  115,  189,  274,  192,  191,
      115,  192,  190,  393,  194,  274,  190,  191,  191,  192,
      302,  191,  194,  192,  336,  380,  194,  380,  194,  336,
      302,  190,  190,  115,  274,  393,  969,  191,  302,  192,
      292,  292,  194,  292,  292,  734,  336,  194,  734,  115,

      136,  136,  969,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  144, 1552,  340,  330,  144,  144,  144,  372,  144,
      144,  144,  144,  144,  144, 1551,  144,  376,  376,  376,
      144,  144,  195,  144,  144,  144,  144,  372,  195,  340,

      195,  196,  198,  330,  195,  237,  237,  237,  198,  196,
      198,  196,  342,  196,  198,  198,  196,  350,  342,  358,
      195,  239,  239,  239,  144,  144,  144,  144,  237,  196,
      198,  293,  293,  196,  293,  293,  352,  307,  144,  144,
      144,  146,  307,  350,  342,  146,  146,  146,  358,  146,
      146,  146,  146,  146,  146,  294,  146,  294,  294,  199,
      294,  294,  352,  146,  146,  146,  146,  199,  413,  413,
      200,  199,  199,  200,  239,  320,  201,  320,  200,  356,
      320,  320,  200,  368,  201,  201,  307,  199,  201,  295,
      295,  647,  295,  295,  146,  146,  146,  146,  200,  200,

      544,  544,  297,  297,  201,  297,  297,  356,  146,  146,
      146,  147,  368,  647, 1550,  147,  147,  147,  147,  147,
      147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
      147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
      147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
      147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
      147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
      147,  147,  147,  147,  147,  147,  147,  147,  147,  147,
      147,  147,  148,  148, 1549,  148,  148,  148,  148,  148,
      148,  148,  148,  148,  148,  148,  148,  148,  148,  148,

      148,  148,  148,  148,  148,  148,  148,  148,  148,  148,
      148,  148,  148,  148,  148,  148,  148,  148,  148,  148,
      148,  148,  148,  148,  148,  148,  148,  148,  148,  148,
      148,  148,  148,  148,  148,  148,  148,  148,  148,  148,
      148,  148,  148,  148,  148,  148,  148,  148,  148,  148,
      148,  148,  148,  173,  173,  901,  173,  173,  386,  392,
      386,  367,  204,  303,  173,  173,  173,  173,  173,  173,
      204,  204,  203,  303,  204,  304,  305,  405,  203,  405,
      203,  303,  405,  405,  203,  304,  305,  367,  392,  640,
      204,  640,  901,  304,  305,  173,  173,  173,  193,  193,

      203,  193,  193,  193,  193,  193,  193,  193,  193,  193,
      193,  193,  193,  193,  193,  193,  193,  193,  193,  193,
      193,  193,  193,  193,  193,  193,  193,  193,  193,  193,
      193,  193,  193,  193,  193,  193,  193,  193,  193,  193,
      193,  193,  193,  193,  193,  193,  193,  193,  193,  193,
      193,  193,  193,  193,  193,  193,  193,  193,  193,  193,
      193,  193,  193,  193,  193,  193,  193,  193,  193,  202,
      205,  309,  202,  772,  355,  202,  309,  206,  205,  205,
      202,  889,  205,  207,  202,  206,  353,  772,  353,  206,
      355,  207,  207,  206,  208,  207,  210,  369,  205,  210,

      202,  202,  208,  355,  210,  206,  208,  209,  210,  355,
      208,  207,  353,  209,  889,  209,  657,  657,  212,  209,
      309,  212,  208,  369,  210,  210,  212,  659,  659,  315,
      212, 1541,  214,  216,  315,  209,  211,  211,  211,  757,
      214,  216,  757,  213,  214,  216,  212,  212,  213,  329,
      213,  213,  661,  661, 1536,  213,  215,  329,  215,  410,
      214,  216,  410,  410,  211,  217,  215,  211,  663,  663,
      215,  213,  215,  217,  213,  211,  329,  217,  315,  211,
      211,  211,  218,  977,  218,  215,  215,  289,  289,  219,
      220,  215,  218,  217,  977,  211,  218,  219,  220,  289,

      211,  219,  220, 1511,  223,  397,  220,  221,  223,  665,
      665,  218,  218,  221,  222,  221,  223,  219,  220,  221,
      223,  221,  222,  222,  397,  224,  222,  735,  735,  289,
      289,  225,  224,  224,  223,  221,  223,  224,  887,  225,
      221,  225,  222,  225,  750,  750,  226,  748,  264,  264,
      264,  952,  227,  224,  226,  227,  224,  748,  226,  225,
      227,  226,  887,  225,  227,  228,  409,  228,  409,  952,
      229,  409,  409,  229,  226,  228,  264,  230,  229,  228,
      227,  227,  229,  230,  776,  230,  955,  231,  231,  230,
      776,  743,  264,  264,  228,  228,  231,  743,  229,  229,

      231,  232,  233,  564,  955,  230,  290,  290,  564,  232,
      233,  234,  264,  232,  233,  232,  231,  743,  290,  234,
      480,  480,  480,  234,  238,  238,  238,  746,  746,  232,
      233,  429,  429,  429,  232,  240,  240,  240, 1555,  234,
      238,  429,  238,  238,  238,  751,  751,  238,  290,  290,
      746,  240,  564,  240,  240,  240,  298,  299,  240,  288,
      288,  288,  298,  769,  298,  299,  299, 1555,  298,  299,
      301,  301,  301,  480,  377,  769,  377,  238,  377,  382,
     1509,  382,  288,  382,  298,  299,  753,  753,  240,  246,
      246,  246,  246,  246,  246,  246,  246,  246,  246,  246,

      246,  246,  246,  246,  246,  246,  246,  246,  408,  408,
      246,  246,  246,  246,  246,  246,  758,  288,  288,  758,
      408,  288,  288,  291,  291,  872,  291,  291,  301,  301,
      326,  872,  301,  301,  538,  326,  538,  291,  291,  538,
      538,  291,  246,  246,  246,  246,  326,  984,  311,  984,
      408,  408,  384,  311,  384,  755,  246,  246,  246,  246,
      311,  384,  311,  311,  311,  755,  291,  361,  291,  291,
      296,  296, 1506,  296,  296,  361,  452,  452,  452,  326,
      300,  296,  296,  296,  296,  296,  296,  300,  300,  387,
      412,  387,  300, 1495,  361,  756,  756,  311,  387,  428,

      428,  428,  778,  412,  452,  412,  412,  412,  300,  428,
      778,  300,  296,  296,  296,  312,  312,  314,  312,  312,
      317,  312,  314,  312,  312,  317,  312,  312,  312,  428,
      312,  314,  314,  412,  317,  317, 1411,  312,  312,  312,
      312, 1411,  765,  314,  752,  752,  317,  351,  351,  351,
      744,  424,  765,  424,  424,  424, 1130,  411,  411,  744,
      411,  411,  482,  482,  482, 1130,  314,  752,  312,  317,
      312,  312,  411,  314,  314,  351,  317,  317,  744,  431,
      431,  431,  312,  312,  312,  316, 1488,  316,  424,  431,
      316,  351,  351,  868,  316,  771,  316,  316,  316,  316,

      316,  316,  411,  411,  415,  771,  316,  868,  430,  430,
      430,  351,  414,  764,  764,  482,  779,  415,  430,  415,
      415,  415,  427,  427,  427,  414,  779,  414,  414,  414,
      766,  874,  427,  766,  316, 1482,  764,  316,  427,  874,
      427,  427,  427,  541,  767,  541,  767,  415,  541,  541,
      316,  318,  567,  318,  430,  414,  318,  567,  775,  775,
      318, 1476,  318,  318,  318,  318,  318,  318,  767,  569,
      414,  414,  318,  739,  569,  427, 1465,  318,  739,  432,
      432,  432,  433,  433,  433,  569,  435,  435,  435,  432,
      782,  782,  433,  426,  426,  426,  435,  739,  786,  786,

      318,  567, 1464,  318,  434,  434,  434,  318,  318,  426,
      433,  426,  426,  426,  434,  571,  318,  319,  569,  319,
      571,  426,  319,  866,  780,  435,  319,  432,  319,  319,
      319,  319,  319,  319,  780,  866,  426, 1131,  319,  436,
      436,  436,  437,  437,  437,  660,  426,  660, 1131,  436,
      660,  660,  437,  784,  434,  784,  784,  438,  438,  438,
      440,  440,  440,  833,  571,  436,  319,  438,  831,  319,
      440,  831,  437,  833,  658,  658,  442,  442,  442,  649,
      649,  649,  319,  321,  321,  438,  442,  439,  439,  439,
      845,  321,  321,  321,  321,  321,  321,  439, 1082,  440,

      845,  441,  441,  441,  791,  791,  442,  740,  443,  443,
      443,  441,  740,  832,  832,  649,  658,  658,  443,  444,
      444,  444,  321,  321,  321,  323,  864,  323,  864,  444,
      323,  740,  439, 1463,  323, 1082,  323,  323,  323,  323,
      323,  323,  441,  446,  446,  446,  323,  445,  445,  445,
      864,  439,  443,  446,  644,  644,  644,  445,  447,  447,
      447,  847,  847,  444,  441,  448,  448,  448,  447,  454,
      454,  454,  843,  843,  323,  448,  449,  449,  449,  454,
     1033,  789,  644,  789,  789,  445,  449,  848,  848,  446,
      323,  324,  447,  324, 1033,  843,  324,  644,  852,  454,

      324, 1462,  324,  324,  324,  324,  324,  324,  852,  445,
      449,  448,  324,  450,  450,  450,  850,  850,  447,  451,
      451,  451,  741,  450,  453,  453,  453,  741,  854,  451,
      540,  854,  540,  540,  453,  862,  449,  455,  455,  455,
      324,  456,  456,  456,  540,  862,  741,  455,  459,  459,
      459,  456,  853,  853,  450,  451,  324,  325,  459,  325,
      747,  957,  325, 1460,  453,  747,  325,  455,  325,  325,
      325,  325,  325,  325,  540,  540,  450,  455,  325,  957,
      456,  457,  457,  457,  747,  458,  458,  458,  662,  662,
      792,  457,  792,  792,  459,  458, 1458,  460,  460,  460,

      461,  461,  461,  462,  462,  462,  325,  460,  885,  762,
      461,  457,  855,  462,  762,  855,  463,  463,  463,  458,
      666,  666,  325,  327,  777,  327,  463,  885,  327,  777,
      662,  662,  327,  762,  327,  327,  327,  327,  327,  327,
      464,  464,  464,  460,  327,  458,  463,  462,  777, 1137,
      464,  465,  465,  465,  466,  466,  466,  470,  470,  470,
     1137,  465,  666,  666,  466,  840,  464,  470,  468,  468,
      468,  840,  327,  467,  467,  467,  863, 1444,  468,  863,
      785,  465,  785,  467,  466,  785,  785,  470,  327,  333,
      333,  840,  333,  333,  333,  333,  333,  333,  333,  333,

      333,  333,  333,  333,  333,  333,  333,  333, 1353,  467,
      333,  333,  333,  333,  333,  333,  468,  469,  469,  469,
      471,  471,  471,  472,  472,  472,  836,  469,  849,  849,
      471,  836, 1353,  472,  871,  871,  473,  473,  473,  479,
      479,  479,  333,  333,  333,  333,  473,  894,  894,  479,
      836,  849,  841,  472,  861,  861,  333,  333,  333,  333,
      379,  841,  469,  966,  379,  379,  379,  966,  379,  379,
      379,  379,  379,  379, 1441,  379,  473,  861,  473,  964,
      841,  469,  379,  379,  379,  379,  474,  474,  474,  694,
      694,  694,  475,  475,  475,  867,  474,  875,  476,  476,

      476,  964,  475,  897,  897,  867, 1395,  875,  476,  486,
      486,  486,  474,  379,  379,  379,  379,  694,  954,  486,
      898,  898,  477,  477,  477,  694,  954,  379,  379,  379,
      383,  475,  477,  975,  383,  383,  383,  975,  383,  383,
      383,  383,  383,  383,  476,  383,  478,  478,  478,  509,
      509,  509,  383,  383,  383,  383,  478,  485,  485,  485,
     1185,  487,  487,  487,  876,  477, 1185,  485,  488,  488,
      488,  487,  509,  971,  876, 1378,  958,  509,  488,  478,
      489,  489,  489,  383,  383,  383,  383,  485,  960,  971,
      489,  491,  491,  491,  958,  962,  960,  383,  383,  383,

      385,  491, 1376,  962,  385,  385,  385,  487,  385,  385,
      385,  385,  385,  385,  891,  385, 1157,  385,  891,  385,
      385,  385,  385,  385,  385,  385,  963, 1157,  489,  490,
      490,  490,  492,  492,  492,  493,  493,  493,  982,  490,
      965,  491,  492,  965,  963,  493,  982,  973,  518,  518,
      518,  891, 1020,  385,  385,  385,  385,  490,  518,  965,
     1020,  493,  528,  528,  528,  973, 1361,  385,  385,  385,
      389,  492,  528, 1360,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,

      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  390,  390, 1359,  390,  390,  390,  390,  390,  390,
      390,  390,  390,  390,  390,  390,  390,  390,  390,  390,
     1358,  951,  390,  390,  390,  390,  390,  390,  484,  484,
      484,  494,  494,  494,  837,  495,  495,  495,  484,  837,
      951,  494,  992,  992,  484,  495,  484,  484,  484,  980,
      951,  484,  994,  994,  390,  390,  390,  390,  837,  783,

      783,  494,  987,  495,  496,  496,  496,  980,  390,  390,
      390,  390,  416,  416,  496,  416,  416,  693,  693,  693,
      987,  484, 1357,  416,  416,  416,  416,  416,  416, 1023,
      497,  497,  497,  498,  498,  498,  499,  499,  499, 1023,
      497,  783,  783,  498,  990,  693,  499,  693,  990,  496,
      500,  500,  500,  693,  416,  416,  416,  483,  483,  483,
      500,  501,  501,  501,  997,  997,  499,  968,  496,  497,
      968,  501,  988,  483,  498,  483,  483,  483,  787,  787,
      483,  502,  502,  502, 1356,  483,  968,  503,  503,  503,
      988,  502, 1019,  838,  500, 1019,  498,  503,  838,  844,

      483,  504,  504,  504,  844,  501,  505,  505,  505, 1355,
      483,  504,  506,  506,  506, 1046,  505,  838, 1046,  502,
      787,  787,  506,  844,  507,  507,  507,  508,  508,  508,
      510,  510,  510,  503,  507,  504,  573,  508,  999,  999,
      510,  573, 1022,  502, 1029, 1029,  506,  511,  511,  511,
      573,  573,  505, 1022,  512,  512,  512,  511,  513,  513,
      513,  504,  573,  508,  512,  507, 1025, 1125,  513, 1125,
      510, 1022,  506,  514,  514,  514, 1025,  511,  515,  515,
      515,  578, 1628,  514,  512,  573,  578,  507,  515,  516,
      516,  516,  573,  573,  512,  578,  578,  513, 1345,  516,

      517,  517,  517,  514,  519,  519,  519,  520,  520,  520,
      517, 1628,  515,  974,  519,  985,  974,  520,  521,  521,
      521,  522,  522,  522,  523,  523,  523, 1132,  521, 1132,
      578,  522,  974, 1027,  523,  516,  985,  520,  515,  524,
      524,  524, 1038, 1027,  521,  985,  517, 1343,  519,  524,
     1038,  522,  790,  790,  523,  525,  525,  525, 1053,  526,
      526,  526,  527,  527,  527,  525,  529,  529,  529,  526,
      978, 1053,  527,  978, 1194,  524,  529,  530,  530,  530,
      531,  531,  531,  532,  532,  532, 1194,  530, 1053,  978,
      531, 1028,  527,  532,  790,  790,  529,  533,  533,  533,

     1138, 1028, 1138,  525,  526, 1331,  531,  533,  534,  534,
      534,  535,  535,  535,  536,  536,  536,  530,  534,  530,
      543,  535,  532,  526,  536, 1035, 1040,  542,  542, 1035,
      542,  542, 1287,  543, 1040,  543,  543,  543,  548,  548,
      548,  542,  542,  533,  535,  542, 1077, 1077,  548,  545,
      671,  534,  671,  671,  671, 1500,  543,  549,  549,  549,
     1500,  546,  545,  543,  545,  545,  545,  549, 1078, 1078,
      542, 1044,  542,  542,  546, 1044,  546,  546,  546,  548,
      543,  550,  550,  550,  588,  588,  588,  671,  589,  589,
      589,  550,  545,  983,  588, 1292,  983,  546,  589, 1032,

     1042,  548, 1281, 1049,  546,  549, 1052,  545,  545, 1032,
     1042,  550,  983, 1049,  588, 1292, 1052,  590,  590,  590,
     1058,  546,  547,  547, 1058,  547,  547,  590, 1079, 1079,
      591,  591,  591,  547,  547,  547,  547,  547,  547,  570,
      591,  690,  690,  690,  570, 1144,  574, 1144,  570, 1279,
      570,  574, 1055,  570,  570,  574, 1148,  574,  895,  895,
      574,  574, 1055,  590,  547,  547,  547,  566,  566,  690,
      566,  566, 1128,  566, 1148,  566,  566,  690,  566,  566,
      566, 1332,  566,  592,  592,  592,  690, 1332,  570,  566,
      566,  566,  566,  592, 1128,  574, 1264,  593,  593,  593,

      895,  895,  595,  595,  595,  690,  672,  593,  672,  672,
      672,  577,  595,  577,  859, 1152,  873, 1152,  577,  859,
      566,  873,  566,  566,  577,  593,  577,  577,  577,  899,
      899,  592,  899,  899,  566,  566,  566,  568,  859,  568,
      873,  595,  568,  672,  899, 1273,  568, 1258,  568,  568,
      568,  568,  568,  568,  577,  596,  596,  596,  568,  594,
      594,  594,  577, 1056, 1273,  596,  597,  597,  597,  594,
      598,  598,  598, 1056,  899,  899,  597,  599,  599,  599,
      598,  596,  600,  600,  600, 1161,  568,  599, 1161,  603,
      603,  603,  600, 1187,  995,  995,  597, 1149,  598,  603,

     1001, 1001,  568,  572, 1161,  572, 1334, 1187,  572,  594,
     1139, 1149,  572, 1244,  572,  572,  572,  572,  572,  572,
     1334,  600,  599, 1149,  572,  601,  601,  601,  602,  602,
      602, 1139, 1280,  603, 1280,  601,  995,  995,  602, 1001,
     1139,  599, 1001,  604,  604,  604,  606,  606,  606,  608,
      608,  608,  572,  604, 1190,  572,  606, 1190,  602,  608,
      605,  605,  605,  607,  607,  607,  601, 1034,  572,  575,
      605,  575, 1034,  607,  575,  716,  716,  716,  575, 1447,
      575,  575,  575,  575,  575,  575, 1191,  604,  601, 1037,
      575, 1034,  606, 1447, 1037,  608, 1191,  607,  605,  609,

      609,  609,  610,  610,  610,  611,  611,  611, 1235,  609,
     1283,  716,  610, 1037, 1043,  611, 1172, 1172,  575, 1043,
     1075,  575,  605,  607, 1075, 1234,  612,  612,  612,  617,
      617,  617, 1283,  609,  575,  576,  612,  576, 1043,  617,
      576,  611, 1196,  610,  576, 1196,  576,  576,  576,  576,
      576,  576,  613,  613,  613, 1172,  576, 1075, 1172,  609,
     1412,  576,  613,  617, 1412,  610,  612,  614,  614,  614,
      615,  615,  615,  618,  618,  618,  993,  614,  993,  993,
      615, 1232,  613,  618,  576, 1198, 1012,  576, 1012,  617,
      993,  576,  576, 1012,  616,  616,  616,  614, 1198, 1012,

      576,  579, 1288,  579,  616, 1189, 1189,  614,  579,  615,
      619,  619,  619, 1288,  579, 1198,  579,  579,  579,  618,
      619,  620,  620,  620,  616,  622,  622,  622,  623,  623,
      623,  620,  621,  621,  621,  622,  812, 1012,  623, 1230,
     1047,  812,  621, 1197,  579, 1047, 1228,  624,  624,  624,
      812,  812,  579, 1197,  623,  622,  619,  624, 1202,  579,
      579,  580,  580, 1252, 1047,  625,  625,  625, 1202,  580,
      580,  580,  580,  580,  580,  625,  621,  624, 1227,  626,
      626,  626,  629,  629,  629,  812,  627,  627,  627,  626,
     1213, 1336,  629, 1252,  814,  625,  627, 1336, 1213,  814,

      580,  580,  580,  580,  580,  581, 1630,  581,  814,  814,
      581, 1286,  629, 1286,  581,  626,  581,  581,  581,  581,
      581,  581, 1226,  630,  630,  630,  581,  581,  581,  581,
      581,  581,  581,  630,  627, 1630,  628,  628,  628,  631,
      631,  631,  998,  814,  998,  998,  628, 1173, 1173,  631,
     1051,  632,  632,  632,  581, 1051,  998,  581,  581,  581,
      581,  632,  633,  633,  633,  634,  634,  634, 1225,  631,
      581,  582,  633,  582, 1051,  634,  582,  989,  989,  989,
      582,  628,  582,  582,  582, 1206, 1173,  582,  633, 1173,
     1231,  632,  582,  632, 1231, 1206,  636,  636,  636, 1372,

      628,  637,  637,  637,  634, 1209,  636,  638,  638,  638,
     1223,  637,  677,  677,  677, 1209, 1000,  638, 1000, 1000,
      582,  989,  677, 1163, 1163,  989, 1165, 1231, 1165, 1372,
     1000, 1165, 1165, 1218,  637, 1163,  582,  583,  583,  636,
      583,  583,  583,  583,  583,  583,  583,  583,  583,  583,
      583,  583,  583,  583,  583,  583,  583,  583,  583,  583,
      583,  583,  583,  583,  583,  583,  583,  583,  583,  583,
      583,  583,  583,  583,  583,  583,  583,  583,  583,  583,
      583,  583,  583,  583,  583,  583,  583,  583,  583,  583,
      583,  583,  583,  583,  583,  583,  583,  583,  583,  583,

      583,  583,  583,  583,  583,  583,  583,  583,  584, 1301,
      584, 1301,  675,  584,  675,  675,  675,  584, 1293,  584,
      584,  584,  584,  584,  584,  635,  635,  635,  676,  584,
      676,  676,  676, 1216, 1214,  635,  675, 1214, 1293,  679,
     1297,  679,  679,  679,  733,  733,  733, 1164, 1164,  675,
     1166, 1166,  676, 1215,  733, 1233, 1233,  584, 1297, 1164,
     1167, 1167, 1166, 1305, 1305,  676,  679,  733, 1260, 1260,
     1260,  635, 1167,  584,  585,  585,  679,  585,  585,  585,
      585,  585,  585,  585,  585,  585,  585,  585,  585,  585,
      585,  585,  585,  585,  585,  585,  585,  585,  585,  585,

      585,  585,  585,  585,  585,  585,  585,  585,  585,  585,
      585,  585,  585,  585,  585,  585,  585,  585,  585,  585,
      585,  585,  585,  585,  585,  585,  585,  585,  585,  585,
      585,  585,  585,  585,  585,  585,  585,  585,  585,  585,
      585,  585,  585,  585,  585,  586,  586,  586, 1451,  586,
     1397,  586, 1451,  680,  586,  680,  680,  680,  586, 1397,
      586,  586,  586,  586,  586,  586,  674,  674,  674, 1168,
      586, 1168, 1275,  586, 1168, 1168,  680,  664,  664,  664,
      664,  664, 1275,  681, 1212,  681,  681,  681,  586, 1398,
      680, 1208,  664, 1409,  674, 1300, 1275,  681,  586,  682,

     1398,  682,  682,  682, 1409, 1080, 1080, 1080,  684,  674,
      684,  684,  684, 1300,  586,  587,  587,  587, 1296,  587,
      681,  587,  664,  664,  587,  587, 1296, 1328,  587, 1328,
      587,  587,  587,  587,  587,  587,  682,  684, 1080,  687,
      587,  687,  687,  687, 1413,  684,  683,  683,  683, 1169,
     1169, 1328,  699,  699,  699, 1413,  684, 1207,  730,  730,
      730, 1169,  683, 1207,  683,  683,  683, 1317,  587,  688,
     1317,  688,  688,  688,  683,  685,  687,  685,  685,  685,
      699,  730,  683, 1207,  587,  639,  730,  688,  699,  639,
      639,  639, 1205,  639,  639,  639,  639,  639,  639,  683,

      639,  730, 1338, 1299,  685, 1338,  688,  639,  639,  639,
      639, 1299,  685,  688,  689,  893,  689,  689,  689, 1217,
      700,  700,  700,  685, 1217, 1170, 1170, 1203,  893,  689,
      893,  893,  893, 1499,  900,  900,  900, 1170,  639,  639,
      639,  639, 1499, 1217, 1269, 1269, 1269, 1201,  700,  900,
      700,  689,  639,  639,  639,  641,  700,  689,  893,  641,
      641,  641,  641,  641,  641,  641,  641,  641,  641,  641,
      641,  641,  641,  641,  641,  641,  641,  641,  641,  641,
      641,  641,  641,  641,  641,  641,  641,  641,  641,  641,
      641,  641,  641,  641,  641,  641,  641,  641,  641,  641,

      641,  641,  641,  641,  641,  641,  641,  641,  641,  641,
      641,  641,  641,  641,  641,  641,  641,  641,  641,  641,
      641,  641,  641,  641,  641,  641,  642,  691,  691,  691,
      642,  642,  642, 1199,  642,  642,  642,  642,  642,  642,
      686,  642,  686,  686,  686, 1306, 1306,  642,  642,  642,
      642,  642, 1310, 1310, 1362,  691, 1407,  816, 1362,  768,
      768,  768,  816,  691,  695,  695,  695, 1480,  691,  686,
     1285,  816,  816, 1285,  692,  692,  692,  686, 1407,  642,
      642,  642,  642, 1311, 1311,  696,  696,  696,  686, 1285,
      691, 1362,  695,  642,  642,  642,  643, 1480,  643,  768,

      695,  643,  692,  695,  768,  643,  816,  643,  643,  643,
      692, 1501,  643,  696,  703,  703,  703,  643, 1410,  692,
     1410,  696, 1501,  768,  696, 1103, 1103, 1103,  705,  705,
      705, 1256, 1256, 1256,  920,  920,  920, 1340,  692, 1303,
     1303, 1256,  703, 1315, 1315,  643, 1122, 1122, 1122, 1340,
      703, 1303, 1103,  697,  697,  697,  705,  703, 1126, 1126,
     1126,  643,  670,  670,  705,  670,  670,  670,  670,  670,
      670,  670,  670,  670,  670,  670,  670,  670,  670,  920,
      670,  697, 1103,  670,  670,  670,  670,  670,  670,  697,
     1122,  706,  706,  706,  697, 1236, 1236, 1236,  920,  770,

      770,  770, 1126, 1171, 1406, 1171, 1126, 1406, 1171, 1171,
     1316, 1316, 1146, 1146, 1146,  670,  697,  670,  670,  706,
     1364, 1364,  770, 1406, 1154, 1154, 1154,  706, 1236,  670,
      670,  670,  670,  673,  673,  770,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
     1146, 1365, 1365,  704,  704,  704, 1195, 1330,  698,  698,
      698,  907, 1154,  907,  907,  907, 1333,  702,  702,  702,
     1330,  707,  707,  707, 1333,  907,  673,  673,  673,  673,
     1335,  704,  708,  708,  708, 1335,  698, 1330, 1188,  704,

      673,  673,  673,  673,  698,  702,  704,  698,  907,  707,
      709,  709,  709,  702, 1335, 1278,  702,  707, 1162,  818,
      708,  710,  710,  710,  818,  711,  711,  711,  708, 1159,
      712,  712,  712,  818,  818, 1341, 1278,  708,  709,  713,
      713,  713,  714,  714,  714, 1278,  709, 1341,  903,  710,
      903,  903,  903,  711,  709,  711,  708,  710,  712, 1308,
     1308,  711,  710,  715,  715,  715,  712,  713,  818,  903,
      714, 1308, 1158,  712, 1337,  713, 1344,  713,  714,  717,
      717,  717, 1337, 1156,  710,  903, 1344,  714,  718,  718,
      718,  715,  719,  719,  719,  720,  720,  720, 1346,  715,

     1347,  713,  721,  721,  721, 1459,  714,  717, 1346,  717,
     1347,  722,  722,  722,  718,  717,  718,  723,  723,  723,
      719, 1366, 1366,  720,  718,  970,  970,  970,  719, 1459,
      721,  720,  724,  724,  724,  725,  725,  725,  721,  722,
     1155,  721,  726,  726,  726,  723, 1445,  722,  727,  727,
      727, 1150,  970,  723, 1313, 1313, 1445,  722, 1367, 1367,
      724, 1400,  723,  725,  724,  725, 1313, 1147,  724, 1400,
      726,  725,  726,  970, 1369, 1369,  727, 1237,  726, 1237,
     1237,  723,  970, 1145,  727,  729,  729, 1404,  729,  729,
      729,  729,  729,  729,  729,  729,  729,  729,  729,  729,

      729,  729,  729,  729, 1142, 1404,  729,  729,  729,  729,
      729,  729, 1237, 1354, 1354, 1354,  731,  731,  731,  922,
      922,  922,  738,  738,  738, 1403,  732,  732,  732,  793,
      793,  793,  731, 1403,  731,  731,  731, 1538,  729,  731,
      729,  729,  732, 1538,  732,  732,  732, 1081, 1081,  732,
      738, 1140,  729,  729,  729,  729,  731,  793,  738,  745,
      745,  745,  738,  813,  922,  793,  732, 1081,  813,  731,
      794,  794,  794, 1733, 1141, 1141, 1141,  813,  813,  732,
     1081, 1414, 1414,  922, 1141, 1415, 1415,  745, 1385, 1385,
     1385, 1081,  865,  865,  865,  745,  815, 1439,  794,  745,

     1439,  815, 1733,  817,  745,  815,  794,  815,  817, 1461,
      815,  815,  813,  835,  835,  835,  820,  817,  817,  813,
      813,  820, 1141,  745,  788,  788,  788,  788,  788,  821,
      820,  820,  865, 1461,  821, 1239, 1239,  865,  788,  788,
     1399,  835,  788,  821,  821,  815,  921,  921,  921,  835,
     1399, 1448,  817,  835, 1448, 1239,  865, 1417, 1417,  817,
      817,  842,  842,  842, 1399,  820, 1136,  788, 1239,  788,
      788,  809, 1240,  809, 1240, 1240,  809, 1670,  821, 1239,
      809, 1670,  809,  809,  809,  821,  821,  809, 1539,  842,
      921,  921,  809,  884,  884,  884, 1539,  842,  886,  886,

      886,  842, 1734,  908,  908,  908,  842, 1240, 1129, 1402,
      921, 1257, 1257, 1257, 1418, 1418, 1382, 1382, 1382, 1402,
      809,  884, 1257, 1257, 1734,  842,  886, 1382, 1382,  884,
     1115,  908, 1450, 1402,  886, 1450,  809,  810,  810,  908,
      810,  810,  810,  810,  810,  810,  810,  810,  810,  810,
      810,  810,  810,  810,  810,  810,  810,  810,  810,  810,
      810,  810,  810,  810,  810,  810,  810,  810,  810,  810,
      810,  810,  810,  810,  810,  810,  810,  810,  810,  810,
      810,  810,  810,  810,  810,  810,  810,  810,  810,  810,
      810,  810,  810,  810,  810,  810,  810,  810,  810,  810,

      810,  810,  810,  810,  810,  810,  810,  810,  811, 1508,
      811, 1508,  904,  811,  904,  904,  904,  811, 1449,  811,
      811,  811,  811,  811,  811, 1224, 1224, 1224, 1449,  811,
      906, 1598,  906,  906,  906, 1389, 1389, 1389,  910, 1598,
      910,  910,  910,  906,  904, 1106,  905,  905,  905,  904,
     1419, 1419,  910,  923,  923,  923,  909,  811,  909,  909,
      909, 1010,  905, 1010,  905,  905,  905,  906, 1010, 1224,
     1420, 1420,  906,  811,  819,  910,  819, 1010, 1010,  819,
      909, 1422, 1422,  819, 1498,  819,  819,  819,  819,  819,
      819,  905, 1440,  909, 1440,  819, 1423, 1423,  923,  905,

      819,  911, 1498,  911,  911,  911, 1096,  927,  927,  927,
      905,  912, 1010,  912,  912,  912, 1440,  923, 1204, 1204,
     1204, 1424, 1424,  819, 1502,  912,  819,  924,  924,  924,
      819,  819,  913, 1502,  913,  913,  913, 1074,  911,  819,
      822, 1057, 1057, 1057, 1073,  822,  913,  914,  912,  914,
      914,  914,  927, 1401,  822,  822, 1425, 1425, 1204,  924,
     1427, 1427,  822,  822,  822,  822,  822,  822, 1503,  913,
      914,  927,  924, 1503, 1401, 1443,  915, 1443,  915,  915,
      915, 1057, 1631, 1401,  914, 1057,  916,  916,  916,  822,
     1325,  924, 1325,  822,  822,  822,  823, 1325,  823, 1443,

      915,  823,  930,  930,  930,  823, 1631,  823,  823,  823,
      823,  823,  823,  915,  916, 1072,  917,  823,  917,  917,
      917,  918,  916,  918,  918,  918,  919, 1071,  919,  919,
      919,  916,  925,  925,  925,  918,  919,  926,  926,  926,
      917, 1325,  929,  929,  929,  823, 1302,  930, 1302, 1070,
      916, 1302, 1302,  917,  931,  931,  931, 1452,  918,  925,
     1452,  823,  824,  919,  824, 1531,  930,  824, 1531,  926,
     1512,  824,  929,  824,  824,  824, 1068,  925,  824, 1211,
     1211, 1211,  926,  824,  953,  953,  953,  929, 1512,  925,
      932,  932,  932,  933,  933,  933,  925, 1532,  931,  931,

     1532,  926,  934,  934,  934, 1067,  929,  953, 1277, 1277,
     1277,  824,  953, 1428, 1428,  935,  935,  935,  931, 1211,
      953, 1066,  937,  937,  937, 1438, 1438,  824,  825,  825,
      933,  825,  825, 1065,  825,  932,  825,  825,  933,  825,
      825,  825,  935,  825,  936,  936,  936,  934, 1466, 1466,
      825,  825,  825,  825,  932, 1442, 1277,  933, 1467, 1467,
      935,  938,  938,  938, 1468, 1468,  934,  937, 1442, 1384,
     1384, 1384,  935, 1671,  936,  939,  939,  939, 1064,  935,
     1384,  825, 1671,  825,  825, 1442,  937, 1513, 1513,  936,
      940,  940,  940, 1059, 1446,  825,  825,  825,  826, 1446,

      826,  938, 1507,  826, 1054, 1507,  938,  826,  936,  826,
      826,  826,  826,  826,  826, 1276, 1276, 1276, 1446,  826,
      939, 1507,  942,  942,  942,  938,  941,  941,  941,  943,
      943,  943, 1514, 1514, 1050,  940, 1515, 1515, 1276,  939,
      940, 1045,  944,  944,  944, 1516, 1516,  826, 1517, 1517,
      945,  945,  945,  941,  940,  946,  946,  946, 1529,  943,
      947,  947,  947,  826,  827, 1672,  827,  942, 1529,  827,
     1672,  941,  944,  827,  943,  827,  827,  827,  827,  827,
      827, 1518, 1518,  941, 1041,  827,  942,  944, 1530, 1530,
      941, 1533, 1533,  943,  945,  945, 1304, 1592, 1304,  946,

      946, 1304, 1304, 1036, 1534,  947,  944, 1534, 1561, 1561,
     1200, 1200, 1200,  827,  945, 1592,  950,  950,  950,  946,
     1200, 1069, 1069, 1069,  947, 1186, 1186, 1186, 1691,  827,
      828,  828, 1691,  828,  828,  828,  828,  828,  828,  828,
      828,  828,  828,  828,  828,  828,  828,  828,  828, 1069,
     1200,  828,  828,  828,  828,  828,  828, 1069,  948,  948,
      948,  950, 1031, 1510,  950, 1186, 1112, 1112, 1112, 1186,
     1596,  949,  949,  949,  948, 1853,  948,  948,  948, 1853,
      950,  948, 1510,  828,  828,  828,  828,  949, 1596,  949,
      949,  949, 1510, 1112,  949,  948, 1030,  828,  828,  828,

      828,  829, 1026,  829, 1566, 1566,  829,  961,  961,  961,
      829,  948,  829,  829,  829,  829,  829,  829, 1693,  949,
     1540, 1693,  829, 1112,  949, 1024, 1542,  979,  979,  979,
      961, 1540,  981,  981,  981,  961, 1542,  829, 1634, 1634,
     1084, 1084, 1084,  961,  996,  996, 1004,  996,  996, 1540,
      829, 1307,  961, 1307,  979,  981, 1307, 1307,  996,  996,
     1637, 1637,  996, 1085, 1085, 1085,  829,  830, 1309,  830,
     1309,  961,  830, 1309, 1309,  979,  830,  981,  830,  830,
      830,  830,  830,  830,  979, 1084, 1084,  996,  830,  996,
      996, 1160, 1160, 1160, 1003, 1616,  981, 1537, 1229, 1229,

     1229, 1002, 1537,  830, 1084,  991, 1616, 1085, 1085, 1486,
     1486, 1486, 1597, 1312, 1160, 1312,  830,  986, 1312, 1312,
     1486, 1537, 1597, 1314, 1616, 1314, 1229, 1085, 1314, 1314,
     1639, 1639,  830,  878, 1229, 1160, 1597,  878,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  878,  878,  878,

      878,  878,  878,  878,  879,  879,  976,  879,  879,  879,
      879,  879,  879,  879,  879,  879,  879,  879,  879,  879,
      879,  879,  879,  879,  879,  879,  879,  879,  879,  879,
      879,  879,  879,  879,  879,  879,  879,  879,  879,  879,
      879,  879,  879,  879,  879,  879,  879,  879,  879,  879,
      879,  879,  879,  879,  879,  879,  879,  879,  879,  879,
      879,  879,  879,  879,  879,  879,  879,  879,  879,  879,
      879,  879,  879,  879,  879,  880, 1576, 1576, 1576,  880,
      880,  880,  880,  880,  880,  880,  880,  880,  880,  880,
      880,  880,  880,  880,  880,  880,  880,  880,  880,  880,

      880,  880,  880,  880,  880,  880,  880,  880,  880,  880,
      880,  880,  880,  880,  880,  880,  880,  880,  880,  880,
      880,  880,  880,  880,  880,  880,  880,  880,  880,  880,
      880,  880,  880,  880,  880,  880,  880,  880,  880,  880,
      880,  880,  880,  880,  880,  880,  890,  890,  972,  890,
      890,  890,  890,  890,  890,  890,  890,  890,  890,  890,
      890,  890,  890,  890,  890, 1289, 1289, 1289,  890,  890,
      890,  890,  890, 1617, 1014, 1289, 1014, 1291, 1291, 1291,
     1009, 1014, 1009, 1617, 1290, 1290, 1290, 1009, 1289,  967,
     1014, 1014, 1556, 1009,  956, 1009, 1009, 1009,  928,  890,

     1291,  890,  890,  896, 1011, 1556, 1011, 1556, 1021, 1021,
     1021, 1011,  888,  890,  890,  890,  890, 1005,  883, 1005,
     1011, 1011, 1005, 1009,  882, 1014, 1005,  877, 1005, 1005,
     1005, 1009, 1290, 1005, 1016, 1556, 1016, 1416, 1005, 1416,
      870, 1016, 1416, 1416, 1620, 1086, 1086, 1086, 1021,  869,
     1016, 1016, 1016, 1021, 1620, 1011, 1088, 1088, 1088, 1092,
     1092, 1092, 1011, 1011,  858, 1016, 1005, 1087, 1087, 1087,
     1642, 1642, 1021, 1039, 1039, 1039, 1048, 1048, 1048, 1089,
     1089, 1089, 1005, 1006, 1006, 1016, 1006, 1006, 1619, 1006,
     1086, 1006, 1006, 1087, 1006, 1006, 1006,  857, 1006, 1619,

     1039, 1088,  856, 1048, 1092, 1006, 1006, 1006, 1006, 1086,
     1692, 1692, 1087, 1039, 1702, 1702, 1048, 1619, 1089,  851,
     1088, 1562, 1562, 1092, 1089,  846, 1090, 1090, 1090,  839,
     1039, 1087,  834, 1048, 1567, 1567, 1006,  808, 1006, 1006,
     1093, 1093, 1093, 1089, 1091, 1091, 1091, 1094, 1094, 1094,
     1006, 1006, 1006, 1007, 1562, 1007, 1704, 1704, 1007, 1134,
     1134, 1134, 1007, 1090, 1007, 1007, 1007, 1567, 1093, 1007,
      807, 1090, 1729,  806, 1007, 1094, 1093, 1193, 1193, 1193,
     1298, 1298, 1298, 1729,  805, 1093,  804, 1134,  803, 1091,
     1090, 1421, 1094, 1421, 1091, 1134, 1421, 1421, 1408, 1408,

     1408, 1729, 1007, 1298, 1093, 1193,  802, 1134, 1091,  801,
     1426, 1094, 1426, 1193,  800, 1426, 1426, 1193, 1007, 1008,
     1008, 1408, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1013,  799, 1013, 1635, 1635, 1013, 1095, 1095, 1095, 1013,

      798, 1013, 1013, 1013, 1013, 1013, 1013,  797, 1178,  796,
     1178, 1013, 1097, 1097, 1097, 1178,  795, 1099, 1099, 1099,
      781, 1100, 1100, 1100, 1178, 1178, 1635,  774, 1098, 1098,
     1098, 1294, 1294, 1294, 1591, 1101, 1101, 1101,  773, 1013,
      761, 1095, 1013,  760, 1099, 1101, 1102, 1102, 1102, 1097,
     1104, 1104, 1104, 1591,  759, 1013, 1015, 1097, 1015, 1178,
     1095, 1015, 1099, 1591, 1594, 1015, 1100, 1015, 1015, 1015,
     1015, 1015, 1015, 1098, 1099, 1721, 1097, 1015, 1098, 1294,
     1101, 1099, 1015, 1594,  754, 1100,  749, 1105, 1105, 1105,
      742, 1102, 1098, 1594, 1721, 1104, 1107, 1107, 1107, 1101,

     1104, 1108, 1108, 1108, 1721, 1015, 1638, 1638, 1015,  737,
     1102,  728, 1015, 1015, 1104, 1640, 1640, 1109, 1109, 1109,
      701, 1015, 1017, 1368, 1017, 1368, 1368, 1017, 1153, 1153,
     1153, 1017, 1105, 1017, 1017, 1017,  668, 1368, 1017, 1638,
      656, 1107, 1557, 1017, 1643, 1643, 1108, 1109, 1640, 1469,
     1469, 1105, 1587, 1587, 1587, 1557, 1153, 1557, 1368,  653,
     1107, 1469, 1109,  652, 1153, 1108, 1621, 1471, 1621, 1471,
      651, 1017, 1471, 1471,  650, 1587, 1153, 1643, 1474,  648,
     1474, 1109, 1469, 1474, 1474, 1557,  646, 1017, 1018, 1018,
     1621, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,

     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1061,
     1061,  645, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
     1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,  565,  563,
     1061, 1061, 1061, 1061, 1061, 1061, 1470, 1470, 1266, 1266,
     1266,  481, 1329, 1329, 1329, 1284, 1284, 1284, 1470, 1558,

      407, 1558,  404,  403, 1558, 1558, 1626, 1626, 1626, 1644,
     1644, 1644, 1061, 1061, 1061, 1061, 1266,  402, 1284, 1470,
     1660, 1660, 1660, 1284, 1266,  401, 1061, 1061, 1061, 1061,
     1062, 1284, 1329,  400, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,

     1062, 1063, 1063,  399, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1063, 1076, 1076,  396, 1076, 1076, 1076, 1076, 1076,
     1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,  395,
     1076, 1595, 1595, 1595, 1076, 1076, 1076, 1076, 1076, 1560,

      394, 1560,  388,  378, 1560, 1560, 1695, 1695, 1695, 1295,
     1295, 1295,  373,  371, 1595, 1111, 1111, 1111, 1697, 1697,
     1697,  370, 1339, 1339, 1339, 1076,  366, 1076, 1076, 1110,
     1110, 1110, 1295, 1113, 1113, 1113,  362, 1295,  360, 1076,
     1076, 1076, 1076, 1083, 1083, 1295, 1083, 1083, 1083, 1083,
     1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
     1111, 1083, 1339, 1110, 1083, 1083, 1083, 1083, 1083, 1083,
     1116, 1116, 1116,  359, 1110, 1117, 1117, 1117, 1113, 1111,
     1114, 1114, 1114, 1113, 1118, 1118, 1118,  354,  349, 1110,
     1119, 1119, 1119, 1110,  348,  347, 1083, 1113, 1083, 1083,

     1120, 1120, 1120,  346, 1121, 1121, 1121,  345, 1114,  344,
     1083, 1083, 1083, 1083,  343, 1116, 1114, 1123, 1123, 1123,
     1117, 1124, 1124, 1124,  341, 1114,  339, 1119,  337, 1118,
      335,  332, 1118,  331, 1116, 1119, 1143, 1143, 1143, 1117,
      310, 1133, 1133, 1133, 1114, 1120, 1703, 1703, 1118, 1121,
     1127, 1127, 1127,  308, 1119, 1151, 1151, 1151, 1179, 1143,
     1179,  286, 1123, 1143, 1120, 1179, 1124,  284, 1121,  283,
     1321,  279, 1321, 1127, 1179, 1179,  275, 1321, 1151, 1703,
      273, 1123, 1151, 1321,  272, 1124, 1133,  267,  262, 1133,
     1180,  261, 1180, 1143,  260, 1127,  259, 1180,  258, 1192,

     1192, 1192, 1243, 1243, 1243, 1133, 1180, 1180, 1370, 1179,
     1370, 1370, 1151,  257, 1127, 1175, 1181, 1175, 1181,  256,
     1175, 1321, 1370, 1181, 1175,  254, 1175, 1175, 1175, 1175,
     1175, 1175, 1181, 1181, 1181,  252, 1175,  250, 1182, 1192,
     1182, 1180,  248, 1370, 1192, 1182,  245, 1243, 1210, 1210,
     1210, 1342, 1342, 1342, 1182, 1182,  244,  186, 1241, 1241,
     1241,  175,  156, 1192, 1175, 1181, 1243, 1181, 1245, 1245,
     1245, 1246, 1246, 1246, 1182,  154, 1210, 1548, 1548, 1548,
     1175, 1176,  153, 1176, 1210,  151, 1176, 1182, 1210, 1182,
     1176, 1342, 1176, 1176, 1176, 1245, 1241, 1176, 1182, 1247,

     1247, 1247, 1176, 1241, 1248, 1248, 1248,  129,  124, 1249,
     1249, 1249,   84, 1245,   79,   68, 1246, 1497, 1497, 1497,
     1241, 1548, 1241,   66,   36, 1245, 1504, 1504, 1504,   29,
     1176,   24, 1245,   20,   11, 1246,    0, 1251, 1251, 1251,
     1250, 1250, 1250,    0, 1247, 1247, 1176, 1177, 1177, 1248,
     1177, 1177, 1248, 1177, 1249, 1177, 1177,    0, 1177, 1177,
     1177, 1497, 1177, 1247,    0, 1497, 1250,    0, 1248, 1177,
     1177, 1177, 1177, 1249, 1504, 1253, 1253, 1253,    0, 1254,
     1254, 1254, 1251,    0,    0, 1250, 1255, 1255, 1255, 1259,
     1259, 1259, 1265, 1265, 1265,    0,    0, 1262, 1262, 1262,

     1177, 1251, 1177, 1177, 1250,    0,    0, 1263, 1263, 1263,
     1268, 1268, 1268,    0, 1177, 1177, 1177, 1183,    0, 1183,
     1253, 1253, 1183, 1255, 1254, 1262, 1183, 1254, 1183, 1183,
     1183, 1255,    0, 1183, 1259, 1263,    0, 1265, 1183, 1253,
     1268,    0, 1262, 1254,    0, 1267, 1267, 1267, 1472, 1472,
     1255,    0, 1263, 1259,    0, 1268, 1265, 1271, 1271, 1271,
     1472, 1262,    0, 1535, 1535, 1535, 1183, 1274, 1274, 1274,
        0, 1263,    0, 1322, 1268, 1322, 1386, 1386, 1386,    0,
     1322, 1472, 1183, 1184, 1184, 1267, 1184, 1184, 1322, 1184,
     1267, 1184, 1184,    0, 1184, 1184, 1184, 1271, 1184, 1272,

     1272, 1272, 1271, 1535,    0, 1184, 1184, 1184, 1184, 1267,
     1473, 1473, 1274,    0, 1282, 1282, 1282, 1274,    0, 1386,
        0, 1271, 1473,    0, 1322, 1320,    0, 1320, 1348, 1272,
     1348, 1274, 1320,    0,    0, 1348, 1184, 1282, 1184, 1184,
        0, 1320, 1320, 1473, 1272,    0, 1348, 1371, 1371, 1371,
     1184, 1184, 1184, 1219, 1323, 1219, 1323,    0, 1219, 1282,
        0, 1323, 1219, 1272, 1219, 1219, 1219,    0,    0, 1219,
     1323, 1323, 1323,    0, 1219,    0, 1320,    0, 1282, 1348,
        0, 1559, 1559, 1563,    0, 1563, 1371,    0, 1563, 1563,
        0,    0, 1371, 1559, 1565,    0, 1565,    0,    0, 1565,

     1565,    0, 1219, 1323, 1636, 1323, 1636,    0,    0, 1636,
     1636, 1371,    0,    0, 1559, 1641,    0, 1641, 1219, 1220,
     1641, 1641,    0, 1220, 1220, 1220, 1220, 1220, 1220, 1220,
     1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220,
     1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220,
     1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220,
     1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220,
     1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220,
     1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220,
     1222, 1222,    0, 1222, 1222, 1222, 1222, 1222, 1222, 1222,

     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1564,
     1564, 1222, 1222, 1222, 1222, 1222, 1222,    0, 1324,    0,
     1324, 1564, 1613, 1613, 1613, 1324, 1381, 1381, 1381, 1701,
     1701, 1701, 1324,    0, 1324, 1324,    0,    0, 1373, 1373,
     1373,    0, 1564, 1222, 1222, 1222, 1222,    0, 1326,    0,
     1326, 1374, 1374, 1374,    0, 1326, 1381, 1222, 1222, 1222,
     1222, 1318, 1613, 1318, 1326, 1326, 1318, 1324,    0, 1324,
     1318, 1381, 1318, 1318, 1318, 1373,    0, 1318, 1662, 1662,
     1662,    0, 1318, 1373, 1326,    0, 1405, 1405, 1405, 1374,
     1381, 1663, 1663, 1663,    0,    0, 1374, 1326,    0, 1326,

        0, 1662, 1373,    0,    0, 1327,    0, 1327, 1326, 1405,
     1318,    0, 1327, 1374, 1663, 1374, 1487, 1487, 1487, 1327,
        0, 1327, 1327, 1375, 1375, 1375, 1318, 1319, 1319, 1405,
     1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
     1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319,
     1319, 1319, 1319, 1319, 1327,    0, 1327,    0,    0, 1487,
     1708, 1708, 1708, 1375, 1588, 1588, 1588,    0, 1375,    0,
     1379, 1379, 1379, 1377, 1377, 1377,    0, 1589, 1589, 1589,
     1319, 1319, 1319, 1319, 1380, 1380, 1380, 1375, 1387, 1387,
     1387, 1388, 1388, 1388, 1319, 1319, 1319, 1319, 1349, 1349,

     1377, 1349, 1349,    0, 1349,    0, 1349, 1349, 1379, 1349,
     1349, 1349, 1588, 1349,    0, 1379,    0, 1388, 1377,    0,
     1349, 1349, 1349, 1349, 1380, 1589, 1505, 1505, 1505, 1380,
     1377,    0, 1379, 1387, 1379,    0, 1388, 1377, 1667, 1667,
     1667, 1673, 1673, 1673, 1730, 1730, 1730,    0, 1380, 1505,
        0, 1349, 1387, 1349, 1349, 1388, 1731, 1731, 1731,    0,
        0, 1667,    0,    0, 1673, 1349, 1349, 1349, 1350, 1505,
        0,    0, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350,
     1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350,
     1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350,

     1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350,
     1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350,
     1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350,
     1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1350, 1351,
     1351,    0, 1351, 1351, 1351, 1351,    0, 1351, 1351, 1351,
     1351, 1351, 1351,    0, 1351, 1392, 1392, 1392, 1743, 1743,
     1743, 1351, 1351, 1351, 1351, 1391, 1391, 1391, 1705, 1705,
     1393, 1393, 1393, 1627, 1627, 1627, 1675, 1675, 1675, 1394,
     1394, 1394, 1475, 1475, 1475,    0, 1477, 1477, 1477, 1600,
     1600, 1600, 1351, 1351, 1351, 1351, 1396, 1396, 1396, 1675,

     1392, 1705, 1391,    0,    0, 1392, 1351, 1351, 1351, 1352,
     1391, 1352,    0, 1393, 1352, 1393, 1477, 1627, 1352, 1392,
     1352, 1352, 1352, 1394, 1394, 1352, 1475, 1475,    0, 1391,
     1352, 1477,    0, 1396, 1393,    0,    0, 1600, 1745, 1745,
     1745, 1396,    0, 1394,    0, 1431, 1475, 1431,    0,    0,
     1477,    0, 1431,    0, 1614, 1614, 1614,    0, 1352,    0,
     1396, 1431, 1431, 1479, 1479, 1479,    0,    0, 1484, 1484,
     1484, 1751, 1751, 1751, 1352, 1363, 1363,    0, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363,    0, 1363, 1614,    0, 1431, 1363, 1363, 1363,

     1363, 1363, 1432,    0, 1432, 1433, 1479, 1433, 1479, 1432,
        0, 1484, 1433, 1484,    0, 1478, 1478, 1478, 1432, 1432,
        0, 1433, 1433,    0, 1481, 1481, 1481, 1479, 1363,    0,
     1363, 1363, 1484, 1434,    0, 1434, 1483, 1483, 1483,    0,
     1434,    0, 1363, 1363, 1363, 1363, 1429,    0, 1429, 1434,
     1434, 1429,    0, 1432, 1478, 1429, 1433, 1429, 1429, 1429,
     1478, 1481, 1429, 1624, 1624, 1624,    0, 1429,    0, 1481,
     1528, 1528, 1528,    0,    0, 1483, 1715, 1715, 1715, 1478,
     1435, 1483, 1435,    0, 1434,    0,    0, 1435, 1481,    0,
        0, 1664, 1664, 1664, 1435, 1429, 1435, 1435,    0, 1715,

     1483,    0,    0, 1624,    0, 1485, 1485, 1485, 1435,    0,
     1528, 1429, 1430, 1430, 1528, 1430, 1430,    0, 1430,    0,
     1430, 1430,    0, 1430, 1430, 1430, 1436, 1430, 1436, 1435,
        0, 1435,    0, 1436, 1430, 1430, 1430, 1430, 1437, 1664,
     1437,    0, 1436, 1436,    0, 1437, 1489, 1489, 1489,    0,
     1485,    0, 1437,    0, 1437, 1437, 1615, 1615, 1615, 1717,
     1717, 1717, 1490, 1490, 1490, 1430, 1437, 1430, 1430, 1485,
     1491, 1491, 1491, 1492, 1492, 1492,    0, 1436,    0, 1430,
     1430, 1430, 1717, 1493, 1493, 1493,    0, 1437,    0, 1437,
     1453, 1489, 1453,    0,    0, 1453, 1615,    0,    0, 1453,

     1615, 1453, 1453, 1453, 1453, 1453, 1453, 1490,    0,    0,
     1489, 1453, 1493,    0,    0, 1491, 1491,    0, 1492,    0,
        0, 1492, 1776, 1776, 1776,    0, 1490,    0, 1493,    0,
     1494, 1494, 1494,    0, 1491,    0, 1519, 1492, 1519, 1453,
        0, 1493,    0, 1519, 1569, 1569, 1569, 1493, 1666, 1666,
     1666,    0, 1519, 1519,    0, 1453, 1455, 1455,    0, 1455,
     1455, 1455, 1455, 1455, 1455, 1455, 1455, 1455, 1455, 1455,
     1455, 1455, 1455, 1455, 1455, 1494,    0, 1455, 1455, 1455,
     1455, 1455, 1455, 1496, 1496, 1496, 1520, 1519, 1520, 1569,
     1571, 1571, 1571, 1520, 1494,    0, 1666,    0, 1521,    0,

     1521,    0, 1520, 1520,    0, 1521,    0,    0, 1569, 1455,
     1455, 1455, 1455, 1496, 1521, 1521,    0, 1582, 1582, 1582,
     1629, 1629, 1629, 1455, 1455, 1455, 1455, 1456, 1496, 1456,
        0,    0, 1456,    0,    0, 1571, 1456, 1520, 1456, 1456,
     1456, 1456, 1456, 1456, 1601,    0, 1601, 1496, 1456, 1521,
        0, 1601,    0,    0, 1571, 1582,    0, 1601, 1522, 1601,
     1522, 1523, 1582, 1523, 1629, 1522,    0,    0, 1523, 1572,
     1572, 1572,    0,    0, 1522, 1522, 1456, 1523, 1523, 1582,
        0, 1582,    0, 1590, 1590, 1590, 1522, 1601,    0, 1523,
        0,    0, 1456, 1457, 1457, 1601, 1457, 1457,    0, 1457,

        0, 1457, 1457,    0, 1457, 1457, 1457, 1522, 1457, 1522,
     1523,    0, 1523, 1572, 1572, 1457, 1457, 1457, 1457, 1524,
        0, 1524, 1525,    0, 1525,    0, 1524, 1590,    0, 1525,
     1524, 1590, 1524, 1572,    0, 1524, 1524,    0, 1525, 1525,
     1526,    0, 1526, 1577, 1577, 1577, 1457, 1526, 1457, 1457,
     1525, 1573, 1573, 1573,    0,    0, 1526, 1526,    0,    0,
     1457, 1457, 1457,    0,    0, 1527,    0, 1527, 1526,    0,
     1524, 1525, 1527, 1525,    0,    0, 1527,    0, 1527,    0,
     1573, 1527, 1527,    0, 1668, 1668, 1668, 1577, 1577, 1526,
        0, 1526, 1578, 1578, 1578,    0, 1573, 1575, 1575, 1575,

        0, 1581, 1581, 1581, 1583, 1583, 1583, 1577,    0, 1573,
     1584, 1584, 1584,    0,    0, 1573, 1527, 1543,    0, 1543,
        0, 1578, 1543, 1618, 1618, 1618, 1543, 1575, 1543, 1543,
     1543, 1581, 1668, 1543, 1718, 1718, 1718, 1578, 1543, 1738,
     1738, 1738, 1575,    0, 1583,    0, 1581,    0,    0, 1583,
     1578, 1818, 1818, 1818, 1584, 1584, 1578, 1718, 1748, 1748,
     1748, 1575, 1738, 1618,    0, 1581, 1543, 1618, 1583, 1586,
     1586, 1586,    0,    0, 1584, 1593, 1593, 1593, 1599, 1599,
     1599, 1748, 1543, 1544, 1544,    0, 1544, 1544, 1544, 1544,
     1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,

     1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
        0, 1633, 1633, 1633, 1586,    0, 1647, 1647, 1647, 1593,
        0,    0, 1599, 1593,    0,    0, 1599,    0, 1602,    0,
     1602,    0,    0, 1586,    0, 1602, 1544, 1544, 1544, 1544,
        0, 1602,    0, 1602,    0,    0, 1674, 1674, 1674,    0,
     1544, 1544, 1544, 1544, 1545, 1633, 1545,    0,    0, 1545,
        0, 1647,    0, 1545,    0, 1545, 1545, 1545,    0,    0,
     1545, 1602,    0,    0,    0, 1545, 1603,    0, 1603, 1602,
     1647,    0,    0, 1603, 1606,    0, 1606, 1603, 1604, 1603,
     1604, 1606, 1603, 1603, 1674, 1604,    0, 1650, 1650, 1650,

     1606, 1606,    0, 1545, 1604, 1604,    0, 1607,    0, 1607,
     1623, 1623, 1623,    0, 1607,    0, 1604,    0,    0, 1545,
     1546,    0, 1546, 1607, 1607, 1546,    0, 1603,    0, 1546,
        0, 1546, 1546, 1546,    0, 1606, 1546, 1604,    0, 1604,
        0, 1546, 1650,    0, 1686, 1686, 1686,    0,    0,    0,
     1623,    0,    0,    0, 1623,    0, 1607,    0, 1607,    0,
        0, 1650,    0, 1605,    0, 1605, 1611,    0, 1611, 1546,
     1605,    0,    0, 1611, 1605,    0, 1605,    0,    0, 1605,
     1605,    0, 1611, 1611, 1686, 1546, 1547, 1547,    0, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,

     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1608, 1605, 1608, 1609, 1611, 1609,    0,
     1608,    0,    0, 1609, 1608,    0, 1608,    0,    0, 1608,
     1608,    0, 1609, 1609,    0, 1648, 1648, 1648,    0, 1547,
     1547, 1547, 1547,    0, 1609, 1652, 1652, 1652, 1653, 1653,
     1653,    0,    0, 1547, 1547, 1547, 1547,    0,    0, 1610,
        0, 1610,    0,    0, 1608, 1609, 1610, 1609,    0,    0,
     1610, 1612, 1610, 1612,    0, 1610, 1610,    0, 1612, 1648,
     1648, 1687, 1687, 1687, 1696, 1696, 1696, 1612, 1612,    0,
     1652,    0, 1653, 1653,    0, 1655, 1655, 1655,    0, 1648,

        0, 1688, 1688, 1688, 1656, 1656, 1656,    0,    0, 1652,
     1610,    0, 1653, 1657, 1657, 1657, 1659, 1659, 1659,    0,
     1612, 1687, 1612, 1625, 1625, 1687, 1625, 1625, 1696, 1625,
        0, 1625, 1625,    0, 1625, 1625, 1625,    0, 1625, 1655,
     1655, 1688,    0, 1656,    0, 1625, 1625, 1625, 1625, 1656,
     1665, 1665, 1665, 1669, 1669, 1669, 1657,    0, 1657, 1655,
        0, 1659, 1716, 1716, 1716, 1676,    0, 1676, 1656,    0,
        0,    0, 1676, 1689, 1689, 1689, 1625, 1657, 1625, 1625,
     1659, 1676, 1676,    0,    0,    0, 1677,    0, 1677,    0,
     1625, 1625, 1625, 1677, 1665,    0,    0, 1669, 1665,    0,

        0, 1669, 1677, 1677, 1678,    0, 1678, 1679,    0, 1679,
     1716, 1678,    0, 1689, 1679, 1678, 1676, 1678,    0,    0,
     1678, 1678,    0, 1679, 1679, 1680,    0, 1680,    0, 1681,
        0, 1681, 1680,    0,    0, 1677, 1681, 1677, 1694, 1694,
     1694, 1680, 1680,    0,    0, 1681, 1681, 1682,    0, 1682,
        0, 1698, 1698, 1698, 1682, 1678,    0,    0, 1679,    0,
     1707, 1707, 1707, 1682, 1682,    0, 1683,    0, 1683, 1690,
     1690, 1690,    0, 1683, 1680,    0, 1680, 1683, 1694, 1683,
     1681,    0, 1683, 1683, 1684,    0, 1684, 1685,    0, 1685,
        0, 1684,    0,    0, 1685, 1698, 1682,    0, 1682,    0,

     1684, 1684,    0, 1685, 1685, 1707, 1711, 1711, 1711, 1690,
     1713, 1713, 1713, 1690, 1714, 1714, 1714, 1683, 1719, 1719,
     1719, 1720, 1720, 1720, 1707, 1722,    0, 1722, 1726, 1726,
     1726,    0, 1722,    0,    0, 1684, 1685,    0, 1685,    0,
        0, 1722, 1722, 1714,    0, 1723,    0, 1723,    0,    0,
        0, 1711, 1723,    0, 1713, 1713, 1732, 1732, 1732, 1714,
        0, 1723, 1723,    0,    0, 1720, 1719,    0, 1726, 1720,
     1711,    0, 1714, 1724, 1713, 1724, 1722,    0, 1714,    0,
     1724, 1725,    0, 1725,    0, 1727, 1727, 1727, 1725, 1724,
     1724, 1728, 1728, 1728, 1723,    0, 1723, 1725, 1725,    0,

     1732, 1736, 1736, 1736, 1737, 1737, 1737, 1739, 1739, 1739,
     1740, 1740, 1740, 1741, 1741, 1741, 1742, 1742, 1742, 1744,
     1744, 1744,    0,    0, 1724, 1727, 1747, 1747, 1747,    0,
     1725, 1728, 1725,    0,    0, 1728, 1749, 1749, 1749, 1750,
     1750, 1750,    0,    0,    0,    0, 1736,    0, 1737, 1737,
        0,    0,    0, 1741, 1740, 1739, 1742,    0, 1740,    0,
     1742,    0,    0, 1744,    0, 1736,    0,    0, 1737,    0,
        0, 1747,    0,    0,    0,    0,    0,    0,    0, 1750,
        0,    0,    0,    0, 1749,    0,    0,    0,    0,    0,
     1747, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,

     1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
     1754, 1755, 1755,    0, 1755, 1755, 1755, 1755, 1755, 1755,
     1755, 1755, 1755, 1755, 1755, 1755, 1755, 1755, 1755, 1755,
     1755, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
     1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756, 1756,
     1756, 1757, 1757,    0, 1757,    0,    0,    0, 1757, 1757,
     1757, 1758,    0, 1758, 1758,    0,    0, 1758, 1758, 1758,
     1758, 1758, 1759, 1759, 1759,    0, 1759, 1760, 1760, 1760,
        0,    0,    0,    0,    0, 1760,    0, 1760, 1760, 1760,
        0, 1760, 1760, 1760, 1760, 1760, 1761, 1761, 1761,    0,

     1761, 1762, 1762,    0, 1762,    0,    0,    0, 1762, 1762,
     1762, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
     1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763, 1763,
     1763, 1764, 1764,    0, 1764, 1764, 1764, 1764, 1764, 1764,
        0, 1764, 1764, 1764, 1764, 1764, 1764, 1765, 1765, 1765,
     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765, 1765,
     1765, 1765, 1765, 1765, 1765, 1765, 1765, 1766, 1766,    0,
     1766, 1766, 1766, 1766, 1766, 1766,    0, 1766, 1766, 1766,
     1766, 1766, 1766, 1767, 1767,    0, 1767, 1767, 1767, 1767,
     1767, 1767,    0, 1767, 1767, 1767, 1767, 1767, 1767, 1768,

        0,    0,    0, 1768, 1768, 1768, 1768, 1768, 1768, 1768,
     1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1768, 1769,
     1769,    0, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769,
     1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1769, 1770,
     1770,    0, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
     1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1771,
        0,    0,    0, 1771, 1771, 1771, 1771, 1771, 1771, 1771,
     1771, 1771, 1771, 1771, 1771, 1771, 1771, 1771, 1771, 1772,
     1772,    0, 1772, 1772, 1772, 1772, 1772, 1772, 1772, 1772,
     1772, 1772, 1772, 1772, 1772, 1772, 1772, 1772, 1772, 1773,

     1773, 1773, 1773, 1773, 1773, 1773, 1773, 1773, 1773, 1773,
     1773, 1773, 1773, 1773, 1773, 1773, 1773, 1773, 1773, 1774,
     1774,    0, 1774, 1774, 1774, 1774, 1774, 1774, 1774, 1774,
     1774, 1774, 1774, 1774, 1774, 1774, 1774, 1774, 1774, 1775,
     1775, 1775, 1775, 1775, 1775, 1775, 1775, 1775, 1775, 1775,
     1775, 1775, 1775, 1775, 1775, 1775, 1775, 1775, 1775, 1777,
     1777,    0, 1777,    0,    0,    0, 1777, 1777, 1777, 1778,
     1778, 1778, 1778, 1778, 1779,    0,    0, 1779, 1779, 1779,
     1779, 1779, 1780, 1780, 1780,    0,    0,    0,    0,    0,
     1780,    0, 1780, 1780, 1780,    0, 1780, 1780, 1780, 1780,

     1780, 1781, 1781, 1781,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1781, 1781, 1781, 1781, 1781,
     1782,    0,    0,    0, 1782, 1782, 1782, 1783, 1783,    0,
     1783,    0,    0,    0, 1783, 1783, 1783, 1784, 1784, 1784,
     1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
     1784, 1784, 1784, 1784, 1784, 1784, 1784, 1785, 1785,    0,
     1785, 1785, 1785, 1785, 1785, 1785,    0, 1785, 1785, 1785,
     1785, 1785, 1785, 1786, 1786,    0, 1786, 1786, 1786, 1786,
     1786, 1786, 1786, 1786, 1786, 1786, 1786, 1786, 1786, 1786,
     1786, 1786, 1786, 1787, 1787,    0, 1787, 1787, 1787, 1787,

     1787, 1787,    0, 1787, 1787, 1787, 1787, 1787, 1787, 1788,
     1788,    0, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
     1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1789,
     1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
     1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1790,
     1790,    0, 1790, 1790, 1790, 1790, 1790, 1790,    0, 1790,
     1790, 1790, 1790, 1790, 1790, 1791, 1791,    0, 1791, 1791,
     1791, 1791, 1791, 1791,    0, 1791, 1791, 1791, 1791, 1791,
     1791, 1792, 1792,    0, 1792, 1792, 1792, 1792, 1792, 1792,
        0, 1792, 1792, 1792, 1792, 1792, 1792, 1793, 1793,    0,

     1793, 1793, 1793, 1793, 1793, 1793,    0, 1793, 1793, 1793,
     1793, 1793, 1793, 1794, 1794,    0, 1794, 1794, 1794, 1794,
     1794, 1794,    0, 1794, 1794, 1794, 1794, 1794, 1794, 1795,
        0,    0,    0, 1795, 1795, 1795, 1795, 1795, 1795, 1795,
     1795, 1795, 1795, 1795, 1795, 1795, 1795, 1795, 1795, 1796,
     1796,    0, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796,
     1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1797,
        0,    0,    0, 1797, 1797, 1797, 1797, 1797, 1797, 1797,
     1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1797, 1798,
     1798,    0, 1798, 1798, 1798, 1798, 1798, 1798, 1798, 1798,

     1798, 1798, 1798, 1798, 1798, 1798, 1798, 1798, 1798, 1799,
     1799,    0, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799,
     1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1799, 1800,
        0,    0,    0, 1800, 1800, 1800, 1800, 1800, 1800, 1800,
     1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1801,
     1801,    0, 1801, 1801, 1801, 1801, 1801, 1801, 1801, 1801,
     1801, 1801, 1801, 1801, 1801, 1801, 1801, 1801, 1801, 1802,
     1802, 1802, 1802,    0, 1802, 1802, 1802, 1802, 1802, 1802,
     1802, 1802, 1802, 1802, 1802, 1802, 1802, 1802, 1802, 1803,
     1803, 1803, 1803, 1803, 1803, 1803,    0, 1803, 1803, 1803,

     1803, 1803, 1803, 1803, 1803, 1803, 1803, 1803, 1803, 1804,
     1804,    0, 1804, 1804, 1804, 1804, 1804, 1804, 1804, 1804,
     1804, 1804, 1804, 1804, 1804, 1804, 1804, 1804, 1804, 1805,
     1805,    0, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805,
     1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1806,
     1806, 1806, 1806, 1806, 1807,    0,    0,    0,    0,    0,
        0, 1807, 1807, 1807, 1808, 1808,    0, 1808,    0,    0,
        0, 1808, 1808, 1808, 1809,    0,    0,    0,    0, 1809,
        0, 1809, 1809,    0,    0,    0, 1809,    0, 1809, 1810,
        0, 1810,    0,    0,    0, 1810, 1810, 1810, 1810, 1810,

     1811, 1811, 1811,    0, 1811, 1812,    0, 1812, 1812,    0,
        0, 1812, 1812, 1812, 1812, 1812, 1813, 1813, 1813,    0,
     1813, 1814, 1814, 1814,    0,    0,    0,    0,    0, 1814,
        0, 1814, 1814,    0,    0, 1814, 1814, 1814, 1814, 1814,
     1815, 1815, 1815,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1815, 1815, 1815, 1815, 1815, 1816,
        0,    0,    0, 1816, 1816, 1816, 1816, 1816, 1817, 1817,
     1817,    0,    0,    0,    0,    0, 1817,    0, 1817, 1817,
     1817,    0, 1817, 1817, 1817, 1817, 1817, 1819, 1819,    0,
     1819,    0,    0,    0, 1819, 1819, 1819, 1820, 1820, 1820,

     1820, 1820, 1820,    0, 1820, 1820, 1820, 1820, 1820, 1820,
     1820, 1820, 1820, 1820, 1820, 1820, 1820, 1821, 1821, 1821,
     1821, 1821, 1821, 1821, 1821, 1821, 1821,    0, 1821, 1821,
     1821, 1821, 1821, 1821, 1821, 1821, 1821, 1822, 1822, 1822,
     1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
     1822,    0, 1822, 1822, 1822, 1822, 1822, 1823, 1823, 1823,
     1823, 1823, 1823,    0, 1823, 1823, 1823, 1823, 1823, 1823,
     1823, 1823, 1823, 1823, 1823, 1823, 1823, 1824, 1824, 1824,
     1824, 1824, 1824, 1824, 1824, 1824, 1824,    0, 1824, 1824,
     1824, 1824, 1824, 1824, 1824, 1824, 1824, 1825, 1825, 1825,

     1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825, 1825,
     1825,    0, 1825, 1825, 1825, 1825, 1825, 1826, 1826, 1826,
     1826, 1826, 1826,    0, 1826, 1826, 1826, 1826, 1826, 1826,
     1826, 1826, 1826, 1826, 1826, 1826, 1826, 1827, 1827, 1827,
     1827, 1827, 1827, 1827, 1827, 1827, 1827,    0, 1827, 1827,
     1827, 1827, 1827, 1827, 1827, 1827, 1827, 1828, 1828, 1828,
     1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828, 1828,
     1828,    0, 1828, 1828, 1828, 1828, 1828, 1829, 1829, 1829,
     1829, 1829, 1829,    0, 1829, 1829, 1829, 1829, 1829, 1829,
     1829, 1829, 1829, 1829, 1829, 1829, 1829, 1830, 1830, 1830,

     1830, 1830, 1830, 1830, 1830, 1830, 1830,    0, 1830, 1830,
     1830, 1830, 1830, 1830, 1830, 1830, 1830, 1831, 1831, 1831,
     1831, 1831, 1831, 1831, 1831, 1831, 1831, 1831, 1831, 1831,
     1831,    0, 1831, 1831, 1831, 1831, 1831, 1832, 1832,    0,
     1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832, 1832,
     1832, 1832, 1832, 1832, 1832, 1832, 1832, 1833, 1833,    0,
     1833, 1833, 1833, 1833, 1833, 1833,    0, 1833, 1833, 1833,
     1833, 1833, 1833, 1834, 1834,    0, 1834, 1834, 1834, 1834,
     1834, 1834, 1834, 1834, 1834, 1834, 1834, 1834, 1834, 1834,
     1834, 1834, 1834, 1835, 1835,    0, 1835, 1835, 1835, 1835,

     1835, 1835,    0, 1835, 1835, 1835, 1835, 1835, 1835, 1836,
     1836,    0, 1836, 1836, 1836, 1836, 1836, 1836,    0, 1836,
     1836, 1836, 1836, 1836, 1836, 1837, 1837,    0, 1837, 1837,
     1837, 1837, 1837, 1837,    0, 1837, 1837, 1837, 1837, 1837,
     1837, 1838, 1838,    0, 1838, 1838, 1838, 1838, 1838, 1838,
        0, 1838, 1838, 1838, 1838, 1838, 1838, 1839, 1839,    0,
     1839, 1839, 1839, 1839, 1839, 1839,    0, 1839, 1839, 1839,
     1839, 1839, 1839, 1840, 1840,    0, 1840, 1840, 1840, 1840,
     1840, 1840,    0, 1840, 1840, 1840, 1840, 1840, 1840, 1841,
     1841, 1841, 1841, 1841,    0, 1841, 1841, 1841, 1841, 1841,

     1841,    0, 1841, 1841, 1841, 1841, 1841, 1841, 1842,    0,
        0,    0, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842,
     1842, 1842, 1842, 1842, 1842, 1842, 1842, 1842, 1843,    0,
        0,    0, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843,
     1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1844, 1844,
        0, 1844, 1844, 1844, 1844, 1844, 1844,    0, 1844, 1844,
     1844, 1844, 1844, 1844, 1845, 1845, 1845, 1845,    0, 1845,
     1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845,
     1845, 1845, 1845, 1845, 1846, 1846, 1846, 1846, 1846, 1846,
     1846,    0, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846,

     1846, 1846, 1846, 1846, 1847, 1847,    0, 1847, 1847, 1847,
     1847, 1847, 1847, 1847, 1847, 1847, 1847, 1847, 1847, 1847,
     1847, 1847, 1847, 1847, 1848, 1848,    0, 1848, 1848, 1848,
     1848, 1848, 1848, 1848, 1848, 1848, 1848, 1848, 1848, 1848,
     1848, 1848, 1848, 1848, 1849, 1849,    0,    0, 1849, 1849,
     1849, 1849, 1849, 1850, 1850, 1850,    0, 1850, 1851, 1851,
     1851, 1851, 1851, 1852, 1852, 1852, 1852,    0,    0,    0,
     1852, 1852, 1852, 1854, 1854, 1854, 1854, 1854, 1855,    0,
     1855,    0,    0,    0, 1855, 1855, 1855, 1855, 1855, 1856,
        0, 1856, 1856,    0,    0, 1856, 1856, 1856, 1856, 1856,

     1857,    0, 1857, 1857,    0,    0, 1857, 1857, 1857, 1857,
     1857, 1858,    0,    0,    0, 1858, 1858, 1858, 1858, 1858,
     1859, 1859, 1859,    0,    0,    0,    0,    0, 1859,    0,
     1859, 1859, 1859,    0, 1859, 1859, 1859, 1859, 1859, 1860,
        0,    0,    0, 1860, 1860, 1860, 1861, 1861, 1861, 1861,
        0,    0,    0, 1861, 1861, 1861, 1862, 1862, 1862, 1862,
     1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
     1862, 1862, 1862, 1862, 1862, 1862, 1863, 1863, 1863, 1863,
     1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863,
     1863, 1863, 1863, 1863, 1863, 1863, 1864, 1864, 1864, 1864,

     1864, 1864, 1864, 1864, 1864, 1864, 1864, 1864, 1864, 1864,
     1864, 1864, 1864, 1864, 1864, 1864, 1865, 1865, 1865, 1865,
     1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
     1865, 1865, 1865, 1865, 1865, 1865, 1866, 1866, 1866, 1866,
     1866, 1866, 1866, 1866, 1866, 1866, 1866, 1866, 1866, 1866,
     1866, 1866, 1866, 1866, 1866, 1866, 1867, 1867, 1867, 1867,
     1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867,
     1867, 1867, 1867, 1867, 1867, 1867, 1868, 1868, 1868, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1869, 1869, 1869, 1869,

     1869, 1869, 1869, 1869, 1869, 1869, 1869, 1869, 1869, 1869,
     1869, 1869, 1869, 1869, 1869, 1869, 1870, 1870, 1870, 1870,
     1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870, 1870,
     1870, 1870, 1870, 1870, 1870, 1870, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
     1871, 1871, 1871, 1871, 1871, 1871, 1872, 1872, 1872, 1872,
     1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872,
     1872, 1872, 1872, 1872, 1872, 1872, 1873, 1873, 1873, 1873,
     1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
     1873, 1873, 1873, 1873, 1873, 1873, 1874, 1874,    0, 1874,

     1874, 1874, 1874, 1874, 1874, 1874, 1874, 1874, 1874, 1874,
     1874, 1874, 1874, 1874, 1874, 1874, 1875, 1875,    0, 1875,
     1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
     1875, 1875, 1875, 1875, 1875, 1875, 1876, 1876,    0, 1876,
     1876, 1876, 1876, 1876, 1876,    0, 1876, 1876, 1876, 1876,
     1876, 1876, 1877, 1877,    0, 1877, 1877, 1877, 1877, 1877,
     1877,    0, 1877, 1877, 1877, 1877, 1877, 1877, 1878, 1878,
        0, 1878, 1878, 1878, 1878, 1878, 1878,    0, 1878, 1878,
     1878, 1878, 1878, 1878, 1879, 1879,    0, 1879, 1879, 1879,
     1879, 1879, 1879,    0, 1879, 1879, 1879, 1879, 1879, 1879,

     1880, 1880,    0, 1880, 1880, 1880, 1880, 1880, 1880,    0,
     1880, 1880, 1880, 1880, 1880, 1880, 1881, 1881,    0, 1881,
     1881, 1881, 1881, 1881, 1881,    0, 1881, 1881, 1881, 1881,
     1881, 1881, 1882, 1882,    0, 1882, 1882, 1882, 1882, 1882,
     1882,    0, 1882, 1882, 1882, 1882, 1882, 1882, 1883, 1883,
        0, 1883, 1883, 1883, 1883, 1883, 1883,    0, 1883, 1883,
     1883, 1883, 1883, 1883, 1884, 1884,    0, 1884, 1884, 1884,
     1884, 1884, 1884, 1884, 1884, 1884, 1884, 1884, 1884, 1884,
     1884, 1884, 1884, 1884, 1885, 1885,    0,    0, 1885, 1885,
     1885, 1885, 1885, 1886,    0, 1886, 1886,    0,    0, 1886,

     1886, 1886, 1886, 1886, 1887, 1887, 1887,    0, 1887, 1888,
        0,    0,    0, 1888, 1888, 1888, 1889, 1889,    0, 1889,
        0,    0,    0, 1889, 1889, 1889, 1890,    0, 1890,    0,
        0,    0, 1890, 1890, 1890, 1890, 1890, 1891, 1891, 1891,
        0, 1891, 1892,    0, 1892, 1892,    0,    0, 1892, 1892,
     1892, 1892, 1892, 1893, 1893, 1893,    0,    0,    0,    0,
        0, 1893,    0, 1893, 1893, 1893,    0, 1893, 1893, 1893,
     1893, 1893, 1894,    0,    0,    0, 1894, 1894, 1894, 1895,
     1895,    0, 1895,    0,    0,    0, 1895, 1895, 1895, 1896,
     1896,    0, 1896, 1896, 1896, 1896, 1896, 1896,    0, 1896,

     1896, 1896, 1896, 1896, 1896, 1897, 1897,    0, 1897, 1897,
     1897, 1897, 1897, 1897,    0, 1897, 1897, 1897, 1897, 1897,
     1897, 1898, 1898, 1898,    0, 1898, 1898, 1898, 1898, 1898,
     1898,    0, 1898, 1898, 1898, 1898, 1898, 1898, 1899, 1899,
        0, 1899, 1899, 1899, 1899, 1899, 1899,    0, 1899, 1899,
     1899, 1899, 1899, 1899, 1900, 1900,    0, 1900, 1900, 1900,
     1900, 1900, 1900,    0, 1900, 1900, 1900, 1900, 1900, 1900,
     1901, 1901,    0, 1901, 1901, 1901, 1901, 1901, 1901,    0,
     1901, 1901, 1901, 1901, 1901, 1901, 1902, 1902, 1902, 1902,
     1902, 1903, 1903,    0, 1903, 1903, 1903, 1903, 1903, 1903,

        0, 1903, 1903, 1903, 1903, 1903, 1903, 1904, 1904,    0,
     1904, 1904, 1904, 1904, 1904, 1904,    0, 1904, 1904, 1904,
     1904, 1904, 1904, 1905,    0, 1905, 1905,    0,    0, 1905,
     1905, 1905, 1905, 1905, 1906, 1906,    0, 1906, 1906, 1906,
     1906, 1906, 1906,    0, 1906, 1906, 1906, 1906, 1906, 1906,
     1907, 1907,    0, 1907, 1907, 1907, 1907, 1907, 1907,    0,
     1907, 1907, 1907, 1907, 1907, 1907, 1908, 1908,    0, 1908,
     1908, 1908, 1908, 1908, 1908,    0, 1908, 1908, 1908, 1908,
     1908, 1908, 1909, 1909,    0, 1909, 1909, 1909, 1909, 1909,
     1909,    0, 1909, 1909, 1909, 1909, 1909, 1909, 1910, 1910,

        0, 1910, 1910, 1910, 1910, 1910, 1910,    0, 1910, 1910,
     1910, 1910, 1910, 1910, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753, 1753,
     1753, 1753, 1753, 1753, 1753, 1753
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

extern int TableGram_flex_debug;
int TableGram_flex_debug = 0;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *TableGramtext;
#line 1 "TaQL/TableGram.ll"
/*
    TableGram.ll: Lexical analyzer for table commands
    Copyright (C) 1994,1995,1996,1997,1998,2001,2003
    Associated Universities, Inc. Washington DC,a USA.

    This library is free software; you can redistribute it and/or modify it
    under the terms of the GNU Library General Public License as published by
    the Free Software Foundation; either version 2 of the License, or (at your
    option) any later version.

    This library is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
    License for more details.

    You should have received a copy of the GNU Library General Public License
    along with this library; if not, write to the Free Software Foundation,
    Inc., 675 Massachusetts Ave, Cambridge, MA 02139, USA.

    Correspondence concerning AIPS++ should be addressed as follows:
           Internet email: casa-feedback@nrao.edu.
           Postal address: AIPS++ Project Office
                           National Radio Astronomy Observatory
                           520 Edgemont Road
                           Charlottesville, VA 22903-2475 USA
*/
/* yy_unput is not used, so let flex not generate it, otherwise picky
   compilers will issue warnings. */
#line 33 "TaQL/TableGram.ll"
#undef YY_INPUT
#define YY_INPUT(buf,result,max_size) result=tableGramInput(buf,max_size)

#undef YY_DECL
#define YY_DECL int TableGramlex (YYSTYPE* lvalp)
/* States to distinguish how some tokens are recognized */



/* Exclusive state meaning that tokens are only recognized in that state */

/* Define functions to set the EXPRstate or TABLENAMEstate.
   Unfortunately the symbolic state names above cannot be used because
   Flex defines them just before %% below. So ensure that the values
   below are indeed the 2nd and 3rd state above (note: INITIALstate=0).
*/
#line 53 "TaQL/TableGram.ll"
  void setEXPRstate()      { BEGIN(2); }
  void setTABLENAMEstate() { BEGIN(3); }
/* Define all tokens recognized by flex.
   Imaginary part of a Complex value can be given as:   FLOATi
          where i is the letter i or j (in lowercase only).
   In a NAME the backslash can be used to escape special characters like -.
   In that way a name like DATE-OBS can be given as DATE\-OBS.
   Comment is from # till the end of the command.
*/
/* Date with numeric month must have 2 digits in day and month and 4 in year.
   Can be DMY or YMD with - or / as delimiter. */
/* Date with alphabetic month has more freedom in day and year */
/* Time part of a datetime can use h/m or : */
/* - / space or T can be used as separator between date and time; optional ISO Z */
/* Sky position as HMS or DMS; dots can be used instead of DMS (as MVAngle allows).
   Positions/times with colons cannot be allowed, because they interfere
   with the interval syntax. It is only possible when preceeded by a date. */
/* Strings can be quoted using single or double quotes */
/* Recognize a quoted string without an end-quote (to give an error message) */
/* Recognize all reserved words (can be a mix of lowercase and uppercase) */
/* Optionally the ALTER TABLE subcommands can be separated by commas;
   they need a space after the subcommand name. */
/* To distinguish keyword ALL from function ALL, the latter has a parenthesis */
/* A basic name is alphanumeric (and underscores) or is escaped with a backslash */
/* A field name is a name with dots or double colons */
/* A temporary table name can be followed by field names */
/* A table name can contain about every character
   (but is recognized in specific states only).
   It can be a mix of quoted and unquoted strings (with escaped characters).
   NOTE: when changing NAMETABC, also change TaQLNodeRep::addEscape. */
/* A UDFlib synonym */
/* A regular expression can be delimited by / % or @ optionall=y followed by i
   to indicate case-insensitive matching.
     m is a partial match (match if part of string matches the regex)
     f is a full match
     p is a pattern match (glob-style pattern)
*/
/* String distance is similar; has options b i and nn (distance) in any order */
/* Part of the pattern is the operator */
#line 3828 "/home/zuul06-2/dschieb/casa/dedicated-table-sys/casacore/BUILD/tables/TableGram.lcc"

#define INITIAL 0
#define STYLEstate 1
#define EXPRstate 2
#define TABLENAMEstate 3
#define SHOWstate 4

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

static int yy_init_globals (void );

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int TableGramlex_destroy (void );

int TableGramget_debug (void );

void TableGramset_debug (int debug_flag  );

YY_EXTRA_TYPE TableGramget_extra (void );

void TableGramset_extra (YY_EXTRA_TYPE user_defined  );

FILE *TableGramget_in (void );

void TableGramset_in  (FILE * _in_str  );

FILE *TableGramget_out (void );

void TableGramset_out  (FILE * _out_str  );

			int TableGramget_leng (void );

char *TableGramget_text (void );

int TableGramget_lineno (void );

void TableGramset_lineno (int _line_number  );

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int TableGramwrap (void );
#else
extern int TableGramwrap (void );
#endif
#endif

#ifndef YY_NO_UNPUT
    
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * );
#endif

#ifndef YY_NO_INPUT

#ifdef __cplusplus
static int yyinput (void );
#else
static int input (void );
#endif

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO do { if (fwrite( TableGramtext, (size_t) TableGramleng, 1, TableGramout )) {} } while (0)
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
		{ \
		int c = '*'; \
		int n; \
		for ( n = 0; n < max_size && \
			     (c = getc( TableGramin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( TableGramin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else \
		{ \
		errno=0; \
		while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, TableGramin)) == 0 && ferror(TableGramin)) \
			{ \
			if( errno != EINTR) \
				{ \
				YY_FATAL_ERROR( "input in flex scanner failed" ); \
				break; \
				} \
			errno=0; \
			clearerr(TableGramin); \
			} \
		}\
\

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1

extern int TableGramlex (void);

#define YY_DECL int TableGramlex (void)
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after TableGramtext and TableGramleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    
	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! TableGramin )
			TableGramin = stdin;

		if ( ! TableGramout )
			TableGramout = stdout;

		if ( ! YY_CURRENT_BUFFER ) {
			TableGramensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				TableGram_create_buffer(TableGramin,YY_BUF_SIZE );
		}

		TableGram_load_buffer_state( );
		}

	{
#line 233 "TaQL/TableGram.ll"

 /* The command to be analyzed is something like:
        SELECT column-list FROM table-list WHERE expression
                          ORDER BY column-list GIVING table
    The WHERE, ORDER BY, and GIVING parts are optional.
    Elements in a list are separated by commas.
    A table name can be only a table file name or a table file name
    followed by whitespace and an alphanumeric name. That 2nd name
    serves as a shorthand for possible later use in the command.
    A table name can be given in a few parts of the command.
    These are indicated by the TABLENAMEstate, because a table name
    can contain special characters such as ~.
    In TableGram.yy care is taken that the state is switched forth and back to
    between TABLENAMEstate and EXPRstate.
    A table name can be $nnn indicating a temporary table. It can optionally
    be followed by :: and the name of a subtable of that temporary table.

    The order in the following list is important, since, for example,
    the word "giving" must be recognized as GIVING and not as NAME.
    Similarly, an alphanumeric string must be recognized as NAME
    and not as NAMETAB or NAMEFLD.

    TableGramText is the char* pointer giving the start of the token recognized.
    TableGramleng gives the length of the token recognized by flex.
    tableGramPosition() is an Int& keeping track of the position in the command
    string for error reporting in TableGram.cc.
    Note that lvalp is defined at the beginning of this file as the argument
    to TableGramlex (in the YY_DECL definition). The possible lvalp fields
    (such as lvalp->val) are defined in the union in TableGram.yy.
 */

 /* In the SHOW command any word (such as SELECT) is allowed */
#line 4081 "/home/zuul06-2/dschieb/casa/dedicated-table-sys/casacore/BUILD/tables/TableGram.lcc"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
		yy_cp = (yy_c_buf_p);

		/* Support of TableGramtext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = (yy_start);
yy_match:
		do
			{
			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1754 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (flex_int16_t) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 12015 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 265 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (tableGramRemoveEscapes (TableGramtext)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return NAME;
          }
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 273 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            throw (TableInvExpr ("UNION is not supported yet"));
          }
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 277 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            throw (TableInvExpr ("INTERSECT is not supported yet"));
          }
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 281 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return EXCEPT;
          }
	YY_BREAK
case 5:
/* rule 5 can match eol */
YY_RULE_SETUP
#line 285 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(STYLEstate);
            return STYLE;
          }
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 290 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return SELECT;
          }
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 295 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(TABLENAMEstate);
            return UPDATE;
          }
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 300 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return UPDSET;
          }
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 305 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return INSERT;
          }
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 309 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return VALUES;
          }
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 314 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return DELETE;
          }
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 318 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return COUNT;
          }
	YY_BREAK
case 13:
/* rule 13 can match eol */
YY_RULE_SETUP
#line 323 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return COUNTALL;
          }
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 328 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return CALC;
          }
	YY_BREAK
case 15:
/* rule 15 can match eol */
YY_RULE_SETUP
#line 333 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(TABLENAMEstate);
            return CREATETAB;
          }
	YY_BREAK
case 16:
/* rule 16 can match eol */
YY_RULE_SETUP
#line 338 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(TABLENAMEstate);
            return ALTERTAB;
          }
	YY_BREAK
case 17:
/* rule 17 can match eol */
YY_RULE_SETUP
#line 343 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(TABLENAMEstate);
            return DROPTAB;
          }
	YY_BREAK
case 18:
/* rule 18 can match eol */
YY_RULE_SETUP
#line 348 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return ADDCOL;
          } 
	YY_BREAK
case 19:
/* rule 19 can match eol */
YY_RULE_SETUP
#line 353 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return COPYCOL;
          } 
	YY_BREAK
case 20:
/* rule 20 can match eol */
YY_RULE_SETUP
#line 358 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return RENAMECOL;
          } 
	YY_BREAK
case 21:
/* rule 21 can match eol */
YY_RULE_SETUP
#line 363 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return DROPCOL;
          } 
	YY_BREAK
case 22:
/* rule 22 can match eol */
YY_RULE_SETUP
#line 368 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return SETKEY;
          } 
	YY_BREAK
case 23:
/* rule 23 can match eol */
YY_RULE_SETUP
#line 373 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return COPYKEY;
          } 
	YY_BREAK
case 24:
/* rule 24 can match eol */
YY_RULE_SETUP
#line 378 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return RENAMEKEY;
          } 
	YY_BREAK
case 25:
/* rule 25 can match eol */
YY_RULE_SETUP
#line 383 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return DROPKEY;
          } 
	YY_BREAK
case 26:
/* rule 26 can match eol */
YY_RULE_SETUP
#line 388 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return ADDROW;
          } 
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 393 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return DMINFO;
          }
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 398 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(TABLENAMEstate);
            return WITH;
          }
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 403 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(TABLENAMEstate);
            return FROM;
          }
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 408 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return WHERE;
          }
	YY_BREAK
case 31:
/* rule 31 can match eol */
YY_RULE_SETUP
#line 413 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return ORDERBY;
          }
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 418 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return NODUPL;
          }
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 422 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return SORTDESC;
          }
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 426 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return SORTASC;
          }
	YY_BREAK
case 35:
/* rule 35 can match eol */
YY_RULE_SETUP
#line 430 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(TABLENAMEstate);
            return GIVING;
          }
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 435 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(TABLENAMEstate);
            return INTO;
          }
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 440 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return SUBTABLES;
          }
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 445 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return LIMIT;
          }
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 450 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return OFFSET;
          }
	YY_BREAK
case 40:
/* rule 40 can match eol */
YY_RULE_SETUP
#line 455 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return GROUPBY;
          }
	YY_BREAK
case 41:
/* rule 41 can match eol */
YY_RULE_SETUP
#line 460 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return GROUPROLL;
          }
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 465 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(EXPRstate);
            return HAVING;
          }
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 470 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
	    BEGIN(TABLENAMEstate);
	    return JOIN;
          }
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 475 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
	    BEGIN(EXPRstate);
	    return ON;
          }
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 481 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return AS;
          }
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 485 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return TO;
          }
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 489 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return IN;
          }
	YY_BREAK
case 48:
/* rule 48 can match eol */
YY_RULE_SETUP
#line 493 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return INCONE;
          }
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 497 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return LBRACKET;
          }
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 501 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return LPAREN;
          }
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 505 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return RBRACKET;
          }
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 509 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return RPAREN;
          }
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 513 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return SEMICOL;
          }
	YY_BREAK
/* UDF libname synonym definition */
case 54:
/* rule 54 can match eol */
YY_RULE_SETUP
#line 519 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (tableGramRemoveEscapes (TableGramtext)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return UDFLIBSYN;
          }
	YY_BREAK
/* regular expression and pattern handling */
case 55:
/* rule 55 can match eol */
YY_RULE_SETUP
#line 528 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            lvalp->valre = new TaQLRegexNode(
                new TaQLRegexNodeRep (String(TableGramtext,TableGramleng)));
            TaQLNode::theirNodesCreated.push_back (lvalp->valre);
            return REGEX;
          }
	YY_BREAK
/* operators */
case 56:
YY_RULE_SETUP
#line 537 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return MIDWIDTH; }
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 538 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return OPENOPEN; }
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 539 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return OPENCLOSED; }
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 540 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return CLOSEDOPEN; }
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 541 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return CLOSEDCLOSED; }
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 542 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return OPENEMPTY; }
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 543 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return EMPTYOPEN; }
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 544 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return CLOSEDEMPTY; }
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 545 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return EMPTYCLOSED; }
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 546 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return COLON; }
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 547 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return EQ; }
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 548 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return EQASS; }
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 549 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return NE; }
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 550 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return NE; }
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 551 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return GE; }
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 552 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return GT; }
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 553 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return LE; }
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 554 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return LT; }
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 555 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return EQNEAR; }
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 556 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return NENEAR; }
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 557 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return BETWEEN; }
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 558 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return AROUND; }
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 559 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return EXISTS; }
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 560 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return LIKE; }
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 561 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return ILIKE; }
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 562 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return AND; }
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 563 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return AND; }
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 564 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return OR; }
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 565 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return OR; }
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 566 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return NOT; }
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 567 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return NOT; }
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 568 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return BITXOR; }
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 569 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return BITXOR; }
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 570 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return POWER; }
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 571 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return TIMES; }
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 572 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return DIVIDETRUNC; }
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 573 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return DIVIDE; }
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 574 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return MODULO; }
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 575 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return PLUS; }
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 576 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return MINUS; }
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 577 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return BITOR; }
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 578 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return BITAND; }
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 579 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return BITNOT; }
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 580 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return LBRACE; }
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 581 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; return RBRACE; }
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 582 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return COMMA;
          }
	YY_BREAK
/* Literals */
/* TIME must be done before FLINTUNIT, otherwise something like 2d1m is
    recognized as FLINTUNIT instead of TIME.
    Similarly COMPLEX must be done before FLINTUNIT. */
case 102:
YY_RULE_SETUP
#line 592 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            double v;
            sscanf (TableGramtext, "%lf%*c", &v);
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (DComplex(0, v)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return LITERAL;
          }
	YY_BREAK
case 103:
YY_RULE_SETUP
#line 601 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            double v = atof(TableGramtext);
            lvalp->val = new TaQLConstNode(new TaQLConstNodeRep (v));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return LITERAL;
          }
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 608 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            char* endPtr;
            Int64 v = strtoll(TableGramtext, &endPtr, 10);
            if (endPtr != TableGramtext+TableGramleng) {
                throw TableInvExpr ("Integer number not fully parsed");
            }
            lvalp->val = new TaQLConstNode(new TaQLConstNodeRep (v));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return LITERAL;
          }
	YY_BREAK
case 105:
YY_RULE_SETUP
#line 619 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            char* endPtr;
            Int64 v = strtoll(TableGramtext, &endPtr, 0);
            if (endPtr != TableGramtext+TableGramleng) {
                throw TableInvExpr ("Hex number not fully parsed");
            }
            lvalp->val = new TaQLConstNode(new TaQLConstNodeRep (v));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return LITERAL;
          }
	YY_BREAK
case 106:
YY_RULE_SETUP
#line 630 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            lvalp->val = new TaQLConstNode(new TaQLConstNodeRep (True));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return LITERAL;
          }
	YY_BREAK
case 107:
YY_RULE_SETUP
#line 636 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            lvalp->val = new TaQLConstNode(new TaQLConstNodeRep (False));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return LITERAL;
          }
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 642 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (tableGramRemoveQuotes (TableGramtext)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return STRINGLITERAL;
          }
	YY_BREAK
case 109:
YY_RULE_SETUP
#line 649 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (tableGramParseDateTime (TableGramtext)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return LITERAL;
          }
	YY_BREAK
case 110:
YY_RULE_SETUP
#line 656 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            double v = tableGramParseTime (TableGramtext);
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (v, String("rad")));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return LITERAL;
          }
	YY_BREAK
case 111:
YY_RULE_SETUP
#line 664 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            double v;
            char unit[32];
            sscanf (TableGramtext, "%lf%31s", &v, unit);
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (v, String(unit)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return LITERAL;
          }
	YY_BREAK
/* In most states the word TIME is a normal column or function name.
    Otherwise it is the TIME keyword (to show timings).
    The same for SHOW.
 */
case 112:
YY_RULE_SETUP
#line 679 "TaQL/TableGram.ll"
{ 
            tableGramPosition() += TableGramleng;
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (tableGramRemoveEscapes (TableGramtext)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return NAME;
          }
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 686 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return TIMING;
          }
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 690 "TaQL/TableGram.ll"
{ 
            tableGramPosition() += TableGramleng;
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (tableGramRemoveEscapes (TableGramtext)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return NAME;
          }
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 697 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            BEGIN(SHOWstate);
            return SHOW;
          }
	YY_BREAK
/* In the FROM clause a shorthand (for a table) can be given.
    In the WHERE and ORDERBY clause a function name can be given.
    Note that this rule could also be done by NAMEFLD. However, in the
    future :: and . might be be operators instead of parts of the name.
    ALL is a special name, because it can also be used instead of DISTINCT
    in the SELECT clause (note that ALL is also a function name).
    So recognize ALL followed by a parenthesis as a function name.
 */
case 116:
/* rule 116 can match eol */
YY_RULE_SETUP
#line 711 "TaQL/TableGram.ll"
{
  /* will not work for e.g. select all (1+2)*3, but nothing to do about it */
            yyless(3);     /* unput everything but ALL */
            tableGramPosition() += TableGramleng;
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (String("ALL")));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return NAME;
          }
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 720 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            return ALL;
          }
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 724 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (tableGramRemoveEscapes (TableGramtext)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return NAME;
          }
	YY_BREAK
/* Field names can be used in the SELECT, FROM, WHERE, and ORDERBY clause */
case 119:
YY_RULE_SETUP
#line 732 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (tableGramRemoveEscapes (TableGramtext)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return FLDNAME;
          }
	YY_BREAK
/* A temporary table number possibly followed by a subtable name*/
case 120:
YY_RULE_SETUP
#line 741 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            Int64 ival = atoi(TableGramtext+1);
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (ival, tableGramRemoveEscapes (TableGramtext)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return TABNAME;
          }
	YY_BREAK
case 121:
YY_RULE_SETUP
#line 749 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            Int64 ival = atoi(TableGramtext+1);
            lvalp->val = new TaQLConstNode(
                new TaQLConstNodeRep (ival, tableGramRemoveEscapes (TableGramtext)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return TABNAME;
          }
	YY_BREAK
/* An unquoted table file name can be given at several places */
case 122:
YY_RULE_SETUP
#line 759 "TaQL/TableGram.ll"
{
            tableGramPosition() += TableGramleng;
            lvalp->val = new TaQLConstNode(
                         new TaQLConstNodeRep (tableGramRemoveEscapesQuotes (TableGramtext)));
            TaQLNode::theirNodesCreated.push_back (lvalp->val);
            return TABNAME;
          }
	YY_BREAK
/* Whitespace is skipped */
case 123:
/* rule 123 can match eol */
YY_RULE_SETUP
#line 768 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; }
	YY_BREAK
case 124:
/* rule 124 can match eol */
YY_RULE_SETUP
#line 769 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; }
	YY_BREAK
/* Comment is skipped */
case 125:
YY_RULE_SETUP
#line 772 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; }
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 773 "TaQL/TableGram.ll"
{ tableGramPosition() += TableGramleng; }
	YY_BREAK
/* Any other non-white character is an error for SHOW */
case 127:
YY_RULE_SETUP
#line 776 "TaQL/TableGram.ll"
{ throw TableInvExpr ("Invalid character used in SHOW command"); }
	YY_BREAK
/* An unterminated string is an error */
case 128:
/* rule 128 can match eol */
YY_RULE_SETUP
#line 779 "TaQL/TableGram.ll"
{ throw (TableInvExpr ("Unterminated string")); }
	YY_BREAK
/* terminate on EOF */
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(STYLEstate):
case YY_STATE_EOF(EXPRstate):
case YY_STATE_EOF(TABLENAMEstate):
case YY_STATE_EOF(SHOWstate):
#line 782 "TaQL/TableGram.ll"
{ yyterminate(); }
	YY_BREAK
/* Any other character is invalid */
case 129:
YY_RULE_SETUP
#line 785 "TaQL/TableGram.ll"
{ return YYERRCODE; }
	YY_BREAK
case 130:
YY_RULE_SETUP
#line 787 "TaQL/TableGram.ll"
ECHO;
	YY_BREAK
#line 5195 "/home/zuul06-2/dschieb/casa/dedicated-table-sys/casacore/BUILD/tables/TableGram.lcc"

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed TableGramin at a new source and called
			 * TableGramlex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = TableGramin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( TableGramwrap( ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * TableGramtext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of TableGramlex */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
static int yy_get_next_buffer (void)
{
    	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = (yytext_ptr);
	yy_size_t number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (yy_size_t) ((yy_c_buf_p) - (yytext_ptr)) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					TableGramrealloc((void *) b->yy_ch_buf,(yy_size_t) (b->yy_buf_size + 2)  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = NULL;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			TableGramrestart(TableGramin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((int) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) TableGramrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,(yy_size_t) new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    static yy_state_type yy_get_previous_state (void)
{
	yy_state_type yy_current_state;
	char *yy_cp;
    
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1754 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (flex_int16_t) yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
{
	int yy_is_jam;
    	char *yy_cp = (yy_c_buf_p);

	YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1754 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (flex_int16_t) yy_c];
	yy_is_jam = (yy_current_state == 1753);

		return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT

#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (void)
#else
    static int input  (void)
#endif

{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (yy_c_buf_p) - (yytext_ptr);
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					TableGramrestart(TableGramin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( TableGramwrap( ) )
						return 0;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve TableGramtext */
	(yy_hold_char) = *++(yy_c_buf_p);

	return c;
}
#endif	/* ifndef YY_NO_INPUT */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void TableGramrestart  (FILE * input_file )
{
    
	if ( ! YY_CURRENT_BUFFER ){
        TableGramensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            TableGram_create_buffer(TableGramin,YY_BUF_SIZE );
	}

	TableGram_init_buffer(YY_CURRENT_BUFFER,input_file );
	TableGram_load_buffer_state( );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
    void TableGram_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		TableGrampop_buffer_state();
	 *		TableGrampush_buffer_state(new_buffer);
     */
	TableGramensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	TableGram_load_buffer_state( );

	/* We don't actually know whether we did this switch during
	 * EOF (TableGramwrap()) processing, but the only time this flag
	 * is looked at is after TableGramwrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

static void TableGram_load_buffer_state  (void)
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	TableGramin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE TableGram_create_buffer  (FILE * file, int  size )
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) TableGramalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in TableGram_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) TableGramalloc((yy_size_t) (b->yy_buf_size + 2)  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in TableGram_create_buffer()" );

	b->yy_is_our_buffer = 1;

	TableGram_init_buffer(b,file );

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with TableGram_create_buffer()
 * 
 */
    void TableGram_delete_buffer (YY_BUFFER_STATE  b )
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		TableGramfree((void *) b->yy_ch_buf  );

	TableGramfree((void *) b  );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a TableGramrestart() or at EOF.
 */
    static void TableGram_init_buffer  (YY_BUFFER_STATE  b, FILE * file )

{
	int oerrno = errno;
    
	TableGram_flush_buffer(b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then TableGram_init_buffer was _probably_
     * called from TableGramrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

        b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
    
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
    void TableGram_flush_buffer (YY_BUFFER_STATE  b )
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		TableGram_load_buffer_state( );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
void TableGrampush_buffer_state (YY_BUFFER_STATE new_buffer )
{
    	if (new_buffer == NULL)
		return;

	TableGramensure_buffer_stack();

	/* This block is copied from TableGram_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from TableGram_switch_to_buffer. */
	TableGram_load_buffer_state( );
	(yy_did_buffer_switch_on_eof) = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
void TableGrampop_buffer_state (void)
{
    	if (!YY_CURRENT_BUFFER)
		return;

	TableGram_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		TableGram_load_buffer_state( );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
static void TableGramensure_buffer_stack (void)
{
	int num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		(yy_buffer_stack) = (struct yy_buffer_state**)TableGramalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in TableGramensure_buffer_stack()" );
								  
		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)TableGramrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in TableGramensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}

/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * 
 * @return the newly allocated buffer state object. 
 */
YY_BUFFER_STATE TableGram_scan_buffer  (char * base, yy_size_t  size )
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return NULL;

	b = (YY_BUFFER_STATE) TableGramalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in TableGram_scan_buffer()" );

	b->yy_buf_size = (int) (size - 2);	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = NULL;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	TableGram_switch_to_buffer(b  );

	return b;
}

/** Setup the input buffer state to scan a string. The next call to TableGramlex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * 
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       TableGram_scan_bytes() instead.
 */
YY_BUFFER_STATE TableGram_scan_string (yyconst char * yystr )
{
    
	return TableGram_scan_bytes(yystr,(int) strlen(yystr) );
}

/** Setup the input buffer state to scan the given bytes. The next call to TableGramlex() will
 * scan from a @e copy of @a bytes.
 * @param yybytes the byte buffer to scan
 * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
 * 
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE TableGram_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = (yy_size_t) (_yybytes_len + 2);
	buf = (char *) TableGramalloc(n  );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in TableGram_scan_bytes()" );

	for ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = TableGram_scan_buffer(buf,n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in TableGram_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

static void yynoreturn yy_fatal_error (yyconst char* msg )
{
			(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up TableGramtext. */ \
        yy_size_t yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		TableGramtext[TableGramleng] = (yy_hold_char); \
		(yy_c_buf_p) = TableGramtext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		TableGramleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/** Get the current line number.
 * 
 */
int TableGramget_lineno  (void)
{
        
    return TableGramlineno;
}

/** Get the input stream.
 * 
 */
FILE *TableGramget_in  (void)
{
        return TableGramin;
}

/** Get the output stream.
 * 
 */
FILE *TableGramget_out  (void)
{
        return TableGramout;
}

/** Get the length of the current token.
 * 
 */
int TableGramget_leng  (void)
{
        return TableGramleng;
}

/** Get the current token.
 * 
 */

char *TableGramget_text  (void)
{
        return TableGramtext;
}

/** Set the current line number.
 * @param _line_number line number
 * 
 */
void TableGramset_lineno (int  _line_number )
{
    
    TableGramlineno = _line_number;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param _in_str A readable stream.
 * 
 * @see TableGram_switch_to_buffer
 */
void TableGramset_in (FILE *  _in_str )
{
        TableGramin = _in_str ;
}

void TableGramset_out (FILE *  _out_str )
{
        TableGramout = _out_str ;
}

int TableGramget_debug  (void)
{
        return TableGram_flex_debug;
}

void TableGramset_debug (int  _bdebug )
{
        TableGram_flex_debug = _bdebug ;
}

static int yy_init_globals (void)
{
        /* Initialization is the same as for the non-reentrant scanner.
     * This function is called from TableGramlex_destroy(), so don't allocate here.
     */

    (yy_buffer_stack) = NULL;
    (yy_buffer_stack_top) = 0;
    (yy_buffer_stack_max) = 0;
    (yy_c_buf_p) = NULL;
    (yy_init) = 0;
    (yy_start) = 0;

/* Defined in main.c */
#ifdef YY_STDINIT
    TableGramin = stdin;
    TableGramout = stdout;
#else
    TableGramin = NULL;
    TableGramout = NULL;
#endif

    /* For future reference: Set errno on error, since we are called by
     * TableGramlex_init()
     */
    return 0;
}

/* TableGramlex_destroy is for both reentrant and non-reentrant scanners. */
int TableGramlex_destroy  (void)
{
    
    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		TableGram_delete_buffer(YY_CURRENT_BUFFER  );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		TableGrampop_buffer_state();
	}

	/* Destroy the stack itself. */
	TableGramfree((yy_buffer_stack) );
	(yy_buffer_stack) = NULL;

    /* Reset the globals. This is important in a non-reentrant scanner so the next time
     * TableGramlex() is called, initialization will occur. */
    yy_init_globals( );

    return 0;
}

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
{
		
	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s )
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *TableGramalloc (yy_size_t  size )
{
			return malloc(size);
}

void *TableGramrealloc  (void * ptr, yy_size_t  size )
{
		
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void TableGramfree (void * ptr )
{
			free( (char *) ptr );	/* see TableGramrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 787 "TaQL/TableGram.ll"



